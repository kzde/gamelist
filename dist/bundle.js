!function(e){function t(t){for(var n,i,o=t[0],a=t[1],u=0,c=[];u<o.length;u++)i=o[u],r[i]&&c.push(r[i][0]),r[i]=0;for(n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n]);for(l&&l(t);c.length;)c.shift()()}var n={},r={1:0};function i(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.e=function(e){var t=[],n=r[e];if(0!==n)if(n)t.push(n[2]);else{var o=new Promise(function(t,i){n=r[e]=[t,i]});t.push(n[2]=o);var a,u=document.createElement("script");u.charset="utf-8",u.timeout=120,i.nc&&u.setAttribute("nonce",i.nc),u.src=function(e){return i.p+""+e+".bundle.js"}(e),a=function(t){u.onerror=u.onload=null,clearTimeout(l);var n=r[e];if(0!==n){if(n){var i=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src,a=new Error("Loading chunk "+e+" failed.\n("+i+": "+o+")");a.type=i,a.request=o,n[1](a)}r[e]=void 0}};var l=setTimeout(function(){a({type:"timeout",target:u})},12e4);u.onerror=u.onload=a,document.head.appendChild(u)}return Promise.all(t)},i.m=e,i.c=n,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/",i.oe=function(e){throw console.error(e),e};var o=window.webpackJsonp=window.webpackJsonp||[],a=o.push.bind(o);o.push=t,o=o.slice();for(var u=0;u<o.length;u++)t(o[u]);var l=a;i(i.s=61)}([function(e,t,n){"use strict";e.exports=n(93)},function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",function(){return r})},function(e,t,n){e.exports=n(97)()},function(e,t,n){"use strict";(function(e){n.d(t,"b",function(){return ye}),n.d(t,"d",function(){return nt}),n.d(t,"a",function(){return et});var r=n(32),i=n.n(r),o=n(52),a=n.n(o),u=n(0),l=n.n(u),c=n(53),s=n(16),f=n(33),p=(n(2),n(24),n(59)),d=function(e,t){for(var n=[e[0]],r=0,i=t.length;r<i;r+=1)n.push(t[r],e[r+1]);return n},v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},m=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},w=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},g=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},C=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},x=function(e){return"object"===(void 0===e?"undefined":v(e))&&e.constructor===Object},T=Object.freeze([]),b=Object.freeze({});function _(e){return"function"==typeof e}function S(e){return e.displayName||e.name||"Component"}function E(e){return e&&"string"==typeof e.styledComponentId}var O=void 0!==e&&e.env.SC_ATTR||"data-styled",P="undefined"!=typeof window&&"HTMLElement"in window,N="boolean"==typeof SC_DISABLE_SPEEDY&&SC_DISABLE_SPEEDY||!1,A={};var j=function(e){function t(n){h(this,t);for(var r=arguments.length,i=Array(r>1?r-1:0),o=1;o<r;o++)i[o-1]=arguments[o];var a=C(this,e.call(this,"An error occurred. See https://github.com/styled-components/styled-components/blob/master/src/utils/errors.md#"+n+" for more information. "+(i?"Additional arguments: "+i.join(", "):"")));return C(a)}return w(t,e),t}(Error),I=/^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm,M=function(e){var t=""+(e||""),n=[];return t.replace(I,function(e,t,r){return n.push({componentId:t,matchIndex:r}),e}),n.map(function(e,r){var i=e.componentId,o=e.matchIndex,a=n[r+1];return{componentId:i,cssFromDOM:a?t.slice(o,a.matchIndex):t.slice(o)}})},F=/^\s*\/\/.*$/gm,L=new i.a({global:!1,cascade:!0,keyframe:!1,prefix:!1,compress:!1,semicolon:!0}),D=new i.a({global:!1,cascade:!0,keyframe:!1,prefix:!0,compress:!1,semicolon:!1}),z=[],U=function(e){if(-2===e){var t=z;return z=[],t}},k=a()(function(e){z.push(e)}),R=void 0,$=void 0,W=void 0,Q=function(e,t,n){return t>0&&-1!==n.slice(0,t).indexOf($)&&n.slice(t-$.length,t)!==$?"."+R:e};D.use([function(e,t,n){2===e&&n.length&&n[0].lastIndexOf($)>0&&(n[0]=n[0].replace(W,Q))},k,U]),L.use([k,U]);function X(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"&",i=e.join("").replace(F,""),o=t&&n?n+" "+t+" { "+i+" }":i;return R=r,$=t,W=new RegExp("\\"+$+"\\b","g"),D(n||!t?"":t,o)}var Y=function(){return n.nc},K=function(e,t,n){n&&((e[t]||(e[t]=Object.create(null)))[n]=!0)},q=function(e,t){e[t]=Object.create(null)},V=function(e){return function(t,n){return void 0!==e[t]&&e[t][n]}},Z=function(e){var t="";for(var n in e)t+=Object.keys(e[n]).join(" ")+" ";return t.trim()},J=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets.length,n=0;n<t;n+=1){var r=document.styleSheets[n];if(r.ownerNode===e)return r}throw new j(10)},G=function(e,t,n){if(!t)return!1;var r=e.cssRules.length;try{e.insertRule(t,n<=r?n:r)}catch(e){return!1}return!0},B=function(e){return"\n/* sc-component-id: "+e+" */\n"},H=function(e,t){for(var n=0,r=0;r<=t;r+=1)n+=e[r];return n},ee=function(e,t){return function(n){var r=Y();return"<style "+[r&&'nonce="'+r+'"',O+'="'+Z(t)+'"','data-styled-version="4.1.3"',n].filter(Boolean).join(" ")+">"+e()+"</style>"}},te=function(e,t){return function(){var n,r=((n={})[O]=Z(t),n["data-styled-version"]="4.1.3",n),i=Y();return i&&(r.nonce=i),l.a.createElement("style",y({},r,{dangerouslySetInnerHTML:{__html:e()}}))}},ne=function(e){return function(){return Object.keys(e)}},re=function(e){return document.createTextNode(B(e))},ie=function e(t,n){var r=void 0===t?Object.create(null):t,i=void 0===n?Object.create(null):n,o=function(e){var t=i[e];return void 0!==t?t:i[e]=[""]},a=function(){var e="";for(var t in i){var n=i[t][0];n&&(e+=B(t)+n)}return e};return{clone:function(){var t=function(e){var t=Object.create(null);for(var n in e)t[n]=y({},e[n]);return t}(r),n=Object.create(null);for(var o in i)n[o]=[i[o][0]];return e(t,n)},css:a,getIds:ne(i),hasNameForId:V(r),insertMarker:o,insertRules:function(e,t,n){o(e)[0]+=t.join(" "),K(r,e,n)},removeRules:function(e){var t=i[e];void 0!==t&&(t[0]="",q(r,e))},sealed:!1,styleTag:null,toElement:te(a,r),toHTML:ee(a,r)}},oe=function(e,t,n,r,i){if(P&&!n){var o=function(e,t,n){var r=document.createElement("style");r.setAttribute(O,""),r.setAttribute("data-styled-version","4.1.3");var i=Y();if(i&&r.setAttribute("nonce",i),r.appendChild(document.createTextNode("")),e&&!t)e.appendChild(r);else{if(!t||!e||!t.parentNode)throw new j(6);t.parentNode.insertBefore(r,n?t:t.nextSibling)}return r}(e,t,r);return N?function(e,t){var n=Object.create(null),r=Object.create(null),i=void 0!==t,o=!1,a=function(t){var i=r[t];return void 0!==i?i:(r[t]=re(t),e.appendChild(r[t]),n[t]=Object.create(null),r[t])},u=function(){var e="";for(var t in r)e+=r[t].data;return e};return{clone:function(){throw new j(5)},css:u,getIds:ne(r),hasNameForId:V(n),insertMarker:a,insertRules:function(e,r,u){for(var l=a(e),c=[],s=r.length,f=0;f<s;f+=1){var p=r[f],d=i;if(d&&-1!==p.indexOf("@import"))c.push(p);else{d=!1;var v=f===s-1?"":" ";l.appendData(""+p+v)}}K(n,e,u),i&&c.length>0&&(o=!0,t().insertRules(e+"-import",c))},removeRules:function(a){var u=r[a];if(void 0!==u){var l=re(a);e.replaceChild(l,u),r[a]=l,q(n,a),i&&o&&t().removeRules(a+"-import")}},sealed:!1,styleTag:e,toElement:te(u,n),toHTML:ee(u,n)}}(o,i):function(e,t){var n=Object.create(null),r=Object.create(null),i=[],o=void 0!==t,a=!1,u=function(e){var t=r[e];return void 0!==t?t:(r[e]=i.length,i.push(0),q(n,e),r[e])},l=function(){var t=J(e).cssRules,n="";for(var o in r){n+=B(o);for(var a=r[o],u=H(i,a),l=u-i[a];l<u;l+=1){var c=t[l];void 0!==c&&(n+=c.cssText)}}return n};return{clone:function(){throw new j(5)},css:l,getIds:ne(r),hasNameForId:V(n),insertMarker:u,insertRules:function(r,l,c){for(var s=u(r),f=J(e),p=H(i,s),d=0,v=[],h=l.length,m=0;m<h;m+=1){var y=l[m],w=o;w&&-1!==y.indexOf("@import")?v.push(y):G(f,y,p+d)&&(w=!1,d+=1)}o&&v.length>0&&(a=!0,t().insertRules(r+"-import",v)),i[s]+=d,K(n,r,c)},removeRules:function(u){var l=r[u];if(void 0!==l){var c=i[l];!function(e,t,n){for(var r=t-n,i=t;i>r;i-=1)e.deleteRule(i)}(J(e),H(i,l)-1,c),i[l]=0,q(n,u),o&&a&&t().removeRules(u+"-import")}},sealed:!1,styleTag:e,toElement:te(l,n),toHTML:ee(l,n)}}(o,i)}return ie()},ae=/\s+/,ue=void 0;ue=P?N?40:1e3:-1;var le=0,ce=void 0,se=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:P?document.head:null,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];h(this,e),this.getImportRuleTag=function(){var e=t.importRuleTag;if(void 0!==e)return e;var n=t.tags[0];return t.importRuleTag=oe(t.target,n?n.styleTag:null,t.forceServer,!0)},le+=1,this.id=le,this.forceServer=r,this.target=r?null:n,this.tagMap={},this.deferred={},this.rehydratedNames={},this.ignoreRehydratedNames={},this.tags=[],this.capacity=1,this.clones=[]}return e.prototype.rehydrate=function(){if(!P||this.forceServer)return this;var e=[],t=[],n=!1,r=document.querySelectorAll("style["+O+'][data-styled-version="4.1.3"]'),i=r.length;if(!i)return this;for(var o=0;o<i;o+=1){var a=r[o];n||(n=!!a.getAttribute("data-styled-streamed"));for(var u,l=(a.getAttribute(O)||"").trim().split(ae),c=l.length,s=0;s<c;s+=1)u=l[s],this.rehydratedNames[u]=!0;t.push.apply(t,M(a.textContent)),e.push(a)}var f=t.length;if(!f)return this;var p=this.makeTag(null);!function(e,t,n){for(var r=0,i=n.length;r<i;r+=1){var o=n[r],a=o.componentId,u=o.cssFromDOM,l=L("",u);e.insertRules(a,l)}for(var c=0,s=t.length;c<s;c+=1){var f=t[c];f.parentNode&&f.parentNode.removeChild(f)}}(p,e,t),this.capacity=Math.max(1,ue-f),this.tags.push(p);for(var d=0;d<f;d+=1)this.tagMap[t[d].componentId]=p;return this},e.reset=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];ce=new e(void 0,t).rehydrate()},e.prototype.clone=function(){var t=new e(this.target,this.forceServer);return this.clones.push(t),t.tags=this.tags.map(function(e){for(var n=e.getIds(),r=e.clone(),i=0;i<n.length;i+=1)t.tagMap[n[i]]=r;return r}),t.rehydratedNames=y({},this.rehydratedNames),t.deferred=y({},this.deferred),t},e.prototype.sealAllTags=function(){this.capacity=1,this.tags.forEach(function(e){e.sealed=!0})},e.prototype.makeTag=function(e){var t=e?e.styleTag:null;return oe(this.target,t,this.forceServer,!1,this.getImportRuleTag)},e.prototype.getTagForId=function(e){var t=this.tagMap[e];if(void 0!==t&&!t.sealed)return t;var n=this.tags[this.tags.length-1];return this.capacity-=1,0===this.capacity&&(this.capacity=ue,n=this.makeTag(n),this.tags.push(n)),this.tagMap[e]=n},e.prototype.hasId=function(e){return void 0!==this.tagMap[e]},e.prototype.hasNameForId=function(e,t){if(void 0===this.ignoreRehydratedNames[e]&&this.rehydratedNames[t])return!0;var n=this.tagMap[e];return void 0!==n&&n.hasNameForId(e,t)},e.prototype.deferredInject=function(e,t){if(void 0===this.tagMap[e]){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].deferredInject(e,t);this.getTagForId(e).insertMarker(e),this.deferred[e]=t}},e.prototype.inject=function(e,t,n){for(var r=this.clones,i=0;i<r.length;i+=1)r[i].inject(e,t,n);var o=this.getTagForId(e);if(void 0!==this.deferred[e]){var a=this.deferred[e].concat(t);o.insertRules(e,a,n),this.deferred[e]=void 0}else o.insertRules(e,t,n)},e.prototype.remove=function(e){var t=this.tagMap[e];if(void 0!==t){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].remove(e);t.removeRules(e),this.ignoreRehydratedNames[e]=!0,this.deferred[e]=void 0}},e.prototype.toHTML=function(){return this.tags.map(function(e){return e.toHTML()}).join("")},e.prototype.toReactElements=function(){var e=this.id;return this.tags.map(function(t,n){var r="sc-"+e+"-"+n;return Object(u.cloneElement)(t.toElement(),{key:r})})},m(e,null,[{key:"master",get:function(){return ce||(ce=(new e).rehydrate())}},{key:"instance",get:function(){return e.master}}]),e}(),fe=function(){function e(t,n){var r=this;h(this,e),this.inject=function(e){e.hasNameForId(r.id,r.name)||e.inject(r.id,r.rules,r.name)},this.toString=function(){throw new j(12,String(r.name))},this.name=t,this.rules=n,this.id="sc-keyframes-"+t}return e.prototype.getName=function(){return this.name},e}(),pe=/([A-Z])/g,de=/^ms-/;var ve=function(e){return null==e||!1===e||""===e},he=function e(t,n){var r=Object.keys(t).filter(function(e){return!ve(t[e])}).map(function(n){return x(t[n])?e(t[n],n):n.replace(pe,"-$1").toLowerCase().replace(de,"-ms-")+": "+(r=n,null==(i=t[n])||"boolean"==typeof i||""===i?"":"number"!=typeof i||0===i||r in c.a?String(i).trim():i+"px")+";";var r,i}).join(" ");return n?n+" {\n  "+r+"\n}":r};function me(e,t,n){if(Array.isArray(e)){for(var r,i=[],o=0,a=e.length;o<a;o+=1)null!==(r=me(e[o],t,n))&&(Array.isArray(r)?i.push.apply(i,r):i.push(r));return i}if(ve(e))return null;if(E(e))return"."+e.styledComponentId;if(_(e)){if(t){var u=!1;try{Object(s.isElement)(new e(t))&&(u=!0)}catch(e){}if(u)throw new j(13,S(e));return me(e(t),t,n)}return e}return e instanceof fe?n?(e.inject(n),e.getName()):e:x(e)?he(e):e.toString()}function ye(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return _(e)||x(e)?me(d(T,[e].concat(n))):me(d(e,n))}function we(e){for(var t,n=0|e.length,r=0|n,i=0;n>=4;)t=1540483477*(65535&(t=255&e.charCodeAt(i)|(255&e.charCodeAt(++i))<<8|(255&e.charCodeAt(++i))<<16|(255&e.charCodeAt(++i))<<24))+((1540483477*(t>>>16)&65535)<<16),r=1540483477*(65535&r)+((1540483477*(r>>>16)&65535)<<16)^(t=1540483477*(65535&(t^=t>>>24))+((1540483477*(t>>>16)&65535)<<16)),n-=4,++i;switch(n){case 3:r^=(255&e.charCodeAt(i+2))<<16;case 2:r^=(255&e.charCodeAt(i+1))<<8;case 1:r=1540483477*(65535&(r^=255&e.charCodeAt(i)))+((1540483477*(r>>>16)&65535)<<16)}return((r=1540483477*(65535&(r^=r>>>13))+((1540483477*(r>>>16)&65535)<<16))^r>>>15)>>>0}var ge=52,Ce=function(e){return String.fromCharCode(e+(e>25?39:97))};function xe(e){var t="",n=void 0;for(n=e;n>ge;n=Math.floor(n/ge))t=Ce(n%ge)+t;return Ce(n%ge)+t}function Te(e,t){for(var n=0;n<e.length;n+=1){var r=e[n];if(Array.isArray(r)&&!Te(r,t))return!1;if(_(r)&&!E(r))return!1}return!t.some(function(e){return _(e)||function(e){for(var t in e)if(_(e[t]))return!0;return!1}(e)})}var be,_e=!1,Se=function(e){return xe(we(e))},Ee=function(){function e(t,n,r){h(this,e),this.rules=t,this.isStatic=!_e&&Te(t,n),this.componentId=r,se.master.hasId(r)||se.master.deferredInject(r,[])}return e.prototype.generateAndInjectStyles=function(e,t){var n=this.isStatic,r=this.componentId,i=this.lastClassName;if(P&&n&&"string"==typeof i&&t.hasNameForId(r,i))return i;var o=me(this.rules,e,t),a=Se(this.componentId+o.join(""));return t.hasNameForId(r,a)||t.inject(this.componentId,X(o,"."+a,void 0,r),a),this.lastClassName=a,a},e.generateName=function(e){return Se(e)},e}(),Oe=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:b,r=!!n&&e.theme===n.theme;return e.theme&&!r?e.theme:t||n.theme},Pe=/[[\].#*$><+~=|^:(),"'`-]+/g,Ne=/(^-|-$)/g;function Ae(e){return e.replace(Pe,"-").replace(Ne,"")}function je(e){return"string"==typeof e&&!0}var Ie={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDerivedStateFromProps:!0,propTypes:!0,type:!0},Me={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},Fe=((be={})[s.ForwardRef]={$$typeof:!0,render:!0},be),Le=Object.defineProperty,De=Object.getOwnPropertyNames,ze=Object.getOwnPropertySymbols,Ue=void 0===ze?function(){return[]}:ze,ke=Object.getOwnPropertyDescriptor,Re=Object.getPrototypeOf,$e=Object.prototype,We=Array.prototype;function Qe(e,t,n){if("string"!=typeof t){var r=Re(t);r&&r!==$e&&Qe(e,r,n);for(var i=We.concat(De(t),Ue(t)),o=Fe[e.$$typeof]||Ie,a=Fe[t.$$typeof]||Ie,u=i.length,l=void 0,c=void 0;u--;)if(c=i[u],!(Me[c]||n&&n[c]||a&&a[c]||o&&o[c])&&(l=ke(t,c)))try{Le(e,c,l)}catch(e){}return e}return e}var Xe=Object(u.createContext)(),Ye=Xe.Consumer,Ke=(function(e){function t(n){h(this,t);var r=C(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext.bind(r)),r.renderInner=r.renderInner.bind(r),r}w(t,e),t.prototype.render=function(){return this.props.children?l.a.createElement(Xe.Consumer,null,this.renderInner):null},t.prototype.renderInner=function(e){var t=this.getContext(this.props.theme,e);return l.a.createElement(Xe.Provider,{value:t},l.a.Children.only(this.props.children))},t.prototype.getTheme=function(e,t){if(_(e))return e(t);if(null===e||Array.isArray(e)||"object"!==(void 0===e?"undefined":v(e)))throw new j(8);return y({},t,e)},t.prototype.getContext=function(e,t){return this.getTheme(e,t)}}(u.Component),function(){function e(){h(this,e),this.masterSheet=se.master,this.instance=this.masterSheet.clone(),this.sealed=!1}e.prototype.seal=function(){if(!this.sealed){var e=this.masterSheet.clones.indexOf(this.instance);this.masterSheet.clones.splice(e,1),this.sealed=!0}},e.prototype.collectStyles=function(e){if(this.sealed)throw new j(2);return l.a.createElement(Ve,{sheet:this.instance},e)},e.prototype.getStyleTags=function(){return this.seal(),this.instance.toHTML()},e.prototype.getStyleElement=function(){return this.seal(),this.instance.toReactElements()},e.prototype.interleaveWithNodeStream=function(e){throw new j(3)}}(),Object(u.createContext)()),qe=Ke.Consumer,Ve=function(e){function t(n){h(this,t);var r=C(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext),r}return w(t,e),t.prototype.getContext=function(e,t){if(e)return e;if(t)return new se(t);throw new j(4)},t.prototype.render=function(){var e=this.props,t=e.children,n=e.sheet,r=e.target;return l.a.createElement(Ke.Provider,{value:this.getContext(n,r)},t)},t}(u.Component),Ze=(new Set,{});var Je=function(e){function t(){h(this,t);var n=C(this,e.call(this));return n.attrs={},n.renderOuter=n.renderOuter.bind(n),n.renderInner=n.renderInner.bind(n),n}return w(t,e),t.prototype.render=function(){return l.a.createElement(qe,null,this.renderOuter)},t.prototype.renderOuter=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:se.master;return this.styleSheet=e,this.props.forwardedComponent.componentStyle.isStatic?this.renderInner():l.a.createElement(Ye,null,this.renderInner)},t.prototype.renderInner=function(e){var t=this.props.forwardedComponent,n=t.componentStyle,r=t.defaultProps,i=(t.displayName,t.foldedComponentIds),o=t.styledComponentId,a=t.target,l=void 0;l=n.isStatic?this.generateAndInjectStyles(b,this.props):void 0!==e?this.generateAndInjectStyles(Oe(this.props,e,r),this.props):this.generateAndInjectStyles(this.props.theme||b,this.props);var c=this.props.as||this.attrs.as||a,s=je(c),f={},d=y({},this.attrs,this.props),v=void 0;for(v in d)"forwardedComponent"!==v&&"as"!==v&&("forwardedRef"===v?f.ref=d[v]:s&&!Object(p.a)(v)||(f[v]=d[v]));return this.props.style&&this.attrs.style&&(f.style=y({},this.attrs.style,this.props.style)),f.className=Array.prototype.concat(i,this.props.className,o,this.attrs.className,l).filter(Boolean).join(" "),Object(u.createElement)(c,f)},t.prototype.buildExecutionContext=function(e,t,n){var r=this,i=y({},t,{theme:e});return n.length?(this.attrs={},n.forEach(function(e){var t,n=e,o=!1,a=void 0,u=void 0;for(u in _(n)&&(n=n(i),o=!0),n)a=n[u],o||!_(a)||(t=a)&&t.prototype&&t.prototype.isReactComponent||E(a)||(a=a(i)),r.attrs[u]=a,i[u]=a}),i):i},t.prototype.generateAndInjectStyles=function(e,t){var n=t.forwardedComponent,r=n.attrs,i=n.componentStyle;n.warnTooManyClasses;return i.isStatic&&!r.length?i.generateAndInjectStyles(b,this.styleSheet):i.generateAndInjectStyles(this.buildExecutionContext(e,t,r),this.styleSheet)},t}(u.Component);function Ge(e,t,n){var r=E(e),i=!je(e),o=t.displayName,a=void 0===o?function(e){return je(e)?"styled."+e:"Styled("+S(e)+")"}(e):o,u=t.componentId,c=void 0===u?function(e,t,n){var r="string"!=typeof t?"sc":Ae(t),i=(Ze[r]||0)+1;Ze[r]=i;var o=r+"-"+e.generateName(r+i);return n?n+"-"+o:o}(Ee,t.displayName,t.parentComponentId):u,s=t.ParentComponent,f=void 0===s?Je:s,p=t.attrs,d=void 0===p?T:p,v=t.displayName&&t.componentId?Ae(t.displayName)+"-"+t.componentId:t.componentId||c,h=r&&e.attrs?Array.prototype.concat(e.attrs,d).filter(Boolean):d,m=new Ee(r?e.componentStyle.rules.concat(n):n,h,v),w=l.a.forwardRef(function(e,t){return l.a.createElement(f,y({},e,{forwardedComponent:w,forwardedRef:t}))});return w.attrs=h,w.componentStyle=m,w.displayName=a,w.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):T,w.styledComponentId=v,w.target=r?e.target:e,w.withComponent=function(e){var r=t.componentId,i=g(t,["componentId"]),o=r&&r+"-"+(je(e)?e:Ae(S(e)));return Ge(e,y({},i,{attrs:h,componentId:o,ParentComponent:f}),n)},w.toString=function(){return"."+w.styledComponentId},i&&Qe(w,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,styledComponentId:!0,target:!0,withComponent:!0}),w}var Be=function(e){return function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:b;if(!Object(s.isValidElementType)(n))throw new j(1,String(n));var i=function(){return t(n,r,ye.apply(void 0,arguments))};return i.withConfig=function(i){return e(t,n,y({},r,i))},i.attrs=function(i){return e(t,n,y({},r,{attrs:Array.prototype.concat(r.attrs,i).filter(Boolean)}))},i}(Ge,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach(function(e){Be[e]=Be(e)});var He=function(){function e(t,n){h(this,e),this.rules=t,this.componentId=n,this.isStatic=Te(t,T),se.master.hasId(n)||se.master.deferredInject(n,[])}return e.prototype.createStyles=function(e,t){var n=X(me(this.rules,e,t),"");t.inject(this.componentId,n)},e.prototype.removeStyles=function(e){var t=this.componentId;e.hasId(t)&&e.remove(t)},e.prototype.renderStyles=function(e,t){this.removeStyles(t),this.createStyles(e,t)},e}();function et(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var i=ye.apply(void 0,[e].concat(n)),o="sc-global-"+we(JSON.stringify(i)),a=new He(i,o),u=function(e){function t(){h(this,t);var n=C(this,e.call(this)),r=n.constructor,i=r.globalStyle,o=r.styledComponentId;return P&&(window.scCGSHMRCache[o]=(window.scCGSHMRCache[o]||0)+1),n.state={globalStyle:i,styledComponentId:o},n}return w(t,e),t.prototype.componentWillUnmount=function(){window.scCGSHMRCache[this.state.styledComponentId]&&(window.scCGSHMRCache[this.state.styledComponentId]-=1),0===window.scCGSHMRCache[this.state.styledComponentId]&&this.state.globalStyle.removeStyles(this.styleSheet)},t.prototype.render=function(){var e=this;return l.a.createElement(qe,null,function(t){e.styleSheet=t||se.master;var n=e.state.globalStyle;return n.isStatic?(n.renderStyles(A,e.styleSheet),null):l.a.createElement(Ye,null,function(t){var r=e.constructor.defaultProps,i=y({},e.props);return void 0!==t&&(i.theme=Oe(e.props,t,r)),n.renderStyles(i,e.styleSheet),null})})},t}(l.a.Component);return u.globalStyle=a,u.styledComponentId=o,u}P&&(window.scCGSHMRCache={});var tt=function(e){return e.replace(/\s|\\n/g,"")};function nt(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var i=ye.apply(void 0,[e].concat(n)),o=xe(we(tt(JSON.stringify(i))));return new fe(o,X(i,o,"@keyframes"))}t.c=Be}).call(this,n(99))},function(e,t,n){"use strict";var r=n(1);function i(e){return"/"===e.charAt(0)}function o(e,t){for(var n=t,r=n+1,i=e.length;r<i;n+=1,r+=1)e[n]=e[r];e.pop()}var a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],a=e&&i(e),u=t&&i(t),l=a||u;if(e&&i(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var c=void 0;if(r.length){var s=r[r.length-1];c="."===s||".."===s||""===s}else c=!1;for(var f=0,p=r.length;p>=0;p--){var d=r[p];"."===d?o(r,p):".."===d?(o(r,p),f++):f&&(o(r,p),f--)}if(!l)for(;f--;f)r.unshift("..");!l||""===r[0]||r[0]&&i(r[0])||r.unshift("");var v=r.join("/");return c&&"/"!==v.substr(-1)&&(v+="/"),v},u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var l=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every(function(t,r){return e(t,n[r])});var r=void 0===t?"undefined":u(t);if(r!==(void 0===n?"undefined":u(n)))return!1;if("object"===r){var i=t.valueOf(),o=n.valueOf();if(i!==t||o!==n)return e(i,o);var a=Object.keys(t),l=Object.keys(n);return a.length===l.length&&a.every(function(r){return e(t[r],n[r])})}return!1},c=n(8);function s(e){return"/"===e.charAt(0)?e:"/"+e}function f(e){return"/"===e.charAt(0)?e.substr(1):e}function p(e,t){return function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)}(e,t)?e.substr(t.length):e}function d(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function v(e){var t=e.pathname,n=e.search,r=e.hash,i=t||"/";return n&&"?"!==n&&(i+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(i+="#"===r.charAt(0)?r:"#"+r),i}function h(e,t,n,i){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",i=t.indexOf("#");-1!==i&&(r=t.substr(i),t=t.substr(0,i));var o=t.indexOf("?");return-1!==o&&(n=t.substr(o),t=t.substr(0,o)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=Object(r.a)({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),i?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=a(o.pathname,i.pathname)):o.pathname=i.pathname:o.pathname||(o.pathname="/"),o}function m(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&l(e.state,t.state)}function y(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,i){if(null!=e){var o="function"==typeof e?e(t,n):e;"string"==typeof o?"function"==typeof r?r(o,i):i(!0):i(!1!==o)}else i(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}}n.d(t,"a",function(){return b}),n.d(t,"b",function(){return P}),n.d(t,"d",function(){return A}),n.d(t,"c",function(){return h}),n.d(t,"f",function(){return m}),n.d(t,"e",function(){return v});var w=!("undefined"==typeof window||!window.document||!window.document.createElement);function g(e,t){t(window.confirm(e))}var C="popstate",x="hashchange";function T(){try{return window.history.state||{}}catch(e){return{}}}function b(e){void 0===e&&(e={}),w||Object(c.a)(!1);var t,n=window.history,i=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e,u=a.forceRefresh,l=void 0!==u&&u,f=a.getUserConfirmation,m=void 0===f?g:f,b=a.keyLength,_=void 0===b?6:b,S=e.basename?d(s(e.basename)):"";function E(e){var t=e||{},n=t.key,r=t.state,i=window.location,o=i.pathname+i.search+i.hash;return S&&(o=p(o,S)),h(o,r,n)}function O(){return Math.random().toString(36).substr(2,_)}var P=y();function N(e){Object(r.a)($,e),$.length=n.length,P.notifyListeners($.location,$.action)}function A(e){(function(e){void 0===e.state&&navigator.userAgent.indexOf("CriOS")})(e)||M(E(e.state))}function j(){M(E(T()))}var I=!1;function M(e){if(I)I=!1,N();else{P.confirmTransitionTo(e,"POP",m,function(t){t?N({action:"POP",location:e}):function(e){var t=$.location,n=L.indexOf(t.key);-1===n&&(n=0);var r=L.indexOf(e.key);-1===r&&(r=0);var i=n-r;i&&(I=!0,z(i))}(e)})}}var F=E(T()),L=[F.key];function D(e){return S+v(e)}function z(e){n.go(e)}var U=0;function k(e){1===(U+=e)?(window.addEventListener(C,A),o&&window.addEventListener(x,j)):0===U&&(window.removeEventListener(C,A),o&&window.removeEventListener(x,j))}var R=!1;var $={length:n.length,action:"POP",location:F,createHref:D,push:function(e,t){var r=h(e,t,O(),$.location);P.confirmTransitionTo(r,"PUSH",m,function(e){if(e){var t=D(r),o=r.key,a=r.state;if(i)if(n.pushState({key:o,state:a},null,t),l)window.location.href=t;else{var u=L.indexOf($.location.key),c=L.slice(0,-1===u?0:u+1);c.push(r.key),L=c,N({action:"PUSH",location:r})}else window.location.href=t}})},replace:function(e,t){var r=h(e,t,O(),$.location);P.confirmTransitionTo(r,"REPLACE",m,function(e){if(e){var t=D(r),o=r.key,a=r.state;if(i)if(n.replaceState({key:o,state:a},null,t),l)window.location.replace(t);else{var u=L.indexOf($.location.key);-1!==u&&(L[u]=r.key),N({action:"REPLACE",location:r})}else window.location.replace(t)}})},go:z,goBack:function(){z(-1)},goForward:function(){z(1)},block:function(e){void 0===e&&(e=!1);var t=P.setPrompt(e);return R||(k(1),R=!0),function(){return R&&(R=!1,k(-1)),t()}},listen:function(e){var t=P.appendListener(e);return k(1),function(){k(-1),t()}}};return $}var _="hashchange",S={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+f(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:f,decodePath:s},slash:{encodePath:s,decodePath:s}};function E(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function O(e){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,t>=0?t:0)+"#"+e)}function P(e){void 0===e&&(e={}),w||Object(c.a)(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),i=n.getUserConfirmation,o=void 0===i?g:i,a=n.hashType,u=void 0===a?"slash":a,l=e.basename?d(s(e.basename)):"",f=S[u],C=f.encodePath,x=f.decodePath;function T(){var e=x(E());return l&&(e=p(e,l)),h(e)}var b=y();function P(e){Object(r.a)(R,e),R.length=t.length,b.notifyListeners(R.location,R.action)}var N=!1,A=null;function j(){var e=E(),t=C(e);if(e!==t)O(t);else{var n=T(),r=R.location;if(!N&&m(r,n))return;if(A===v(n))return;A=null,function(e){if(N)N=!1,P();else{b.confirmTransitionTo(e,"POP",o,function(t){t?P({action:"POP",location:e}):function(e){var t=R.location,n=L.lastIndexOf(v(t));-1===n&&(n=0);var r=L.lastIndexOf(v(e));-1===r&&(r=0);var i=n-r;i&&(N=!0,D(i))}(e)})}}(n)}}var I=E(),M=C(I);I!==M&&O(M);var F=T(),L=[v(F)];function D(e){t.go(e)}var z=0;function U(e){1===(z+=e)?window.addEventListener(_,j):0===z&&window.removeEventListener(_,j)}var k=!1;var R={length:t.length,action:"POP",location:F,createHref:function(e){return"#"+C(l+v(e))},push:function(e,t){var n=h(e,void 0,void 0,R.location);b.confirmTransitionTo(n,"PUSH",o,function(e){if(e){var t=v(n),r=C(l+t);if(E()!==r){A=t,function(e){window.location.hash=e}(r);var i=L.lastIndexOf(v(R.location)),o=L.slice(0,-1===i?0:i+1);o.push(t),L=o,P({action:"PUSH",location:n})}else P()}})},replace:function(e,t){var n=h(e,void 0,void 0,R.location);b.confirmTransitionTo(n,"REPLACE",o,function(e){if(e){var t=v(n),r=C(l+t);E()!==r&&(A=t,O(r));var i=L.indexOf(v(R.location));-1!==i&&(L[i]=t),P({action:"REPLACE",location:n})}})},go:D,goBack:function(){D(-1)},goForward:function(){D(1)},block:function(e){void 0===e&&(e=!1);var t=b.setPrompt(e);return k||(U(1),k=!0),function(){return k&&(k=!1,U(-1)),t()}},listen:function(e){var t=b.appendListener(e);return U(1),function(){U(-1),t()}}};return R}function N(e,t,n){return Math.min(Math.max(e,t),n)}function A(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,i=t.initialEntries,o=void 0===i?["/"]:i,a=t.initialIndex,u=void 0===a?0:a,l=t.keyLength,c=void 0===l?6:l,s=y();function f(e){Object(r.a)(C,e),C.length=C.entries.length,s.notifyListeners(C.location,C.action)}function p(){return Math.random().toString(36).substr(2,c)}var d=N(u,0,o.length-1),m=o.map(function(e){return h(e,void 0,"string"==typeof e?p():e.key||p())}),w=v;function g(e){var t=N(C.index+e,0,C.entries.length-1),r=C.entries[t];s.confirmTransitionTo(r,"POP",n,function(e){e?f({action:"POP",location:r,index:t}):f()})}var C={length:m.length,action:"POP",location:m[d],index:d,entries:m,createHref:w,push:function(e,t){var r=h(e,t,p(),C.location);s.confirmTransitionTo(r,"PUSH",n,function(e){if(e){var t=C.index+1,n=C.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),f({action:"PUSH",location:r,index:t,entries:n})}})},replace:function(e,t){var r=h(e,t,p(),C.location);s.confirmTransitionTo(r,"REPLACE",n,function(e){e&&(C.entries[C.index]=r,f({action:"REPLACE",location:r}))})},go:g,goBack:function(){g(-1)},goForward:function(){g(1)},canGo:function(e){var t=C.index+e;return t>=0&&t<C.entries.length},block:function(e){return void 0===e&&(e=!1),s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return C}},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){var r=n(39)("wks"),i=n(26),o=n(5).Symbol,a="function"==typeof o;(e.exports=function(e){return r[e]||(r[e]=a&&o[e]||(a?o:i)("Symbol."+e))}).store=r},function(e,t,n){"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";var r=!0,i="Invariant failed";t.a=function(e,t){if(!e)throw r?new Error(i):new Error(i+": "+(t||""))}},function(e,t,n){var r=n(14);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t,n){"use strict";n.d(t,"a",function(){return E}),n.d(t,"b",function(){return C}),n.d(t,"c",function(){return M}),n.d(t,"e",function(){return F}),n.d(t,"d",function(){return w});var r=n(56),i=n.n(r),o=n(1),a=n(7),u=n(0),l=n.n(u),c=n(2),s=n.n(c),f=n(4),p=n(8),d=n(34),v=n.n(d),h=(n(16),n(11)),m=n(57),y=n.n(m),w=i()();w.Provider.displayName="Router.Provider",w.Consumer.displayName="Router.Consumer";function g(e,t){return{history:e.history,location:t.location,match:C.computeRootMatch(t.location.pathname),staticContext:e.staticContext}}var C=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen(function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e})),n}Object(a.a)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){var e=g(this.props,this.state);return l.a.createElement(w.Provider,{children:this.props.children||null,value:e})},t}(l.a.Component);l.a.createContext||(C.childContextTypes={router:s.a.object.isRequired},C.prototype.getChildContext=function(){return{router:g(this.props,this.state)}});l.a.Component;l.a.Component;var x={},T=1e4,b=0;function _(e,t){void 0===t&&(t={}),"string"==typeof t&&(t={path:t});var n=t,r=n.path,i=n.exact,o=void 0!==i&&i,a=n.strict,u=void 0!==a&&a,l=n.sensitive,c=void 0!==l&&l;return[].concat(r).reduce(function(t,n){if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=x[n]||(x[n]={});if(r[e])return r[e];var i=[],o={regexp:v()(e,i,t),keys:i};return b<T&&(r[e]=o,b++),o}(n,{end:o,strict:u,sensitive:c}),i=r.regexp,a=r.keys,l=i.exec(e);if(!l)return null;var s=l[0],f=l.slice(1),p=e===s;return o&&!p?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:p,params:a.reduce(function(e,t,n){return e[t.name]=f[n],e},{})}},null)}function S(e,t){var n=e.location||t.location,r=e.computedMatch?e.computedMatch:e.path?_(n.pathname,e):t.match;return Object(o.a)({},t,{location:n,match:r})}var E=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){var e=this;return l.a.createElement(w.Consumer,null,function(t){t||Object(p.a)(!1);var n=S(e.props,t),r=e.props,i=r.children,o=r.component,a=r.render;(Array.isArray(i)&&0===i.length&&(i=null),"function"==typeof i)&&(void 0===(i=i(n))&&(i=null));return l.a.createElement(w.Provider,{value:n},i&&!function(e){return 0===l.a.Children.count(e)}(i)?i:n.match?o?l.a.createElement(o,n):a?a(n):null:null)})},t}(l.a.Component);function O(e){return"/"===e.charAt(0)?e:"/"+e}function P(e,t){return e?Object(o.a)({},t,{pathname:O(e)+t.pathname}):t}function N(e,t){if(!e)return t;var n=O(e);return 0!==t.pathname.indexOf(n)?t:Object(o.a)({},t,{pathname:t.pathname.substr(n.length)})}function A(e){return"string"==typeof e?e:Object(f.e)(e)}function j(e){return function(){Object(p.a)(!1)}}function I(){}l.a.createContext||(E.contextTypes={router:s.a.object.isRequired},E.childContextTypes={router:s.a.object.isRequired},E.prototype.getChildContext=function(){this.context.router||Object(p.a)(!1);var e=this.context.router;return{router:S(this.props,e)}}),(function(e){function t(){for(var t,n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(t=e.call.apply(e,[this].concat(r))||this).createHref=function(e){return O(t.props.basename+A(e))},t.handlePush=function(e){var n=t.props,r=n.basename,i=n.context;i.action="PUSH",i.location=P(r,Object(f.c)(e)),i.url=A(i.location)},t.handleReplace=function(e){var n=t.props,r=n.basename,i=n.context;i.action="REPLACE",i.location=P(r,Object(f.c)(e)),i.url=A(i.location)},t.handleListen=function(){return I},t.handleBlock=function(){return I},t}return Object(a.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.basename,n=(e.context,e.location),r=Object(h.a)(e,["basename","context","location"]),i={createHref:this.createHref,action:"POP",location:N(t,Object(f.c)(n)),push:this.handlePush,replace:this.handleReplace,go:j(),goBack:j(),goForward:j(),listen:this.handleListen,block:this.handleBlock};return l.a.createElement(C,Object(o.a)({},r,{history:i,staticContext:this.props.context||{}}))},t}(l.a.Component)).defaultProps={basename:"",location:"/"};var M=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){var e=this;return l.a.createElement(w.Consumer,null,function(t){t||Object(p.a)(!1);var n,r,i=e.props.location||t.location;return l.a.Children.forEach(e.props.children,function(e){if(null==r&&l.a.isValidElement(e)){n=e;var a=e.props.path||e.props.from;r=a?_(i.pathname,Object(o.a)({},e.props,{path:a})):t.match}}),r?l.a.cloneElement(n,{location:i,computedMatch:r}):null})},t}(l.a.Component);function F(e){var t=function(t){var n=t.wrappedComponentRef,r=Object(h.a)(t,["wrappedComponentRef"]);return l.a.createElement(E,{children:function(t){return l.a.createElement(e,Object(o.a)({},r,t,{ref:n}))}})};return t.displayName="withRouter("+(e.displayName||e.name)+")",t.WrappedComponent=e,y()(t,e)}},function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}n.d(t,"a",function(){return r})},function(e,t){var n=e.exports={version:"2.6.1"};"number"==typeof __e&&(__e=n)},function(e,t,n){var r=n(21),i=n(42);e.exports=n(15)?function(e,t,n){return r.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){e.exports=!n(41)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,n){"use strict";e.exports=n(100)},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"g",function(){return o}),n.d(t,"f",function(){return a}),n.d(t,"d",function(){return u}),n.d(t,"c",function(){return l}),n.d(t,"a",function(){return c}),n.d(t,"e",function(){return f});var r=n(3),i={black:"#333333",white:"#FFFFFF",red:"#FE6050",lightGrey:"#E5E5E5"},o={default:i.black,selected:i.red,link:i.red,borderGrey:"#C4C4C4"},a={smallText:"14px",normalText:"18px",titleText:"24px"},u={small:"8px",medium:"16px",large:"32px"},l="64px",c={width:"328px",height:"492px",phoneWidth:"359px"},s={giant:1170,desktop:992,tablet:768,phone:576},f=Object.keys(s).reduce(function(e,t){return e[t]=function(){return Object(r.b)(["@media (max-width:","em){","}"],s[t]/16,r.b.apply(void 0,arguments))},e},{})},function(e,t,n){var r=n(19);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,i){return e.call(t,n,r,i)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(9),i=n(63),o=n(64),a=Object.defineProperty;t.f=n(15)?Object.defineProperty:function(e,t,n){if(r(e),t=o(t,!0),r(n),i)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t){e.exports={}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(94)},function(e,t){e.exports=!1},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t,n){var r=n(14),i=n(5).document,o=r(i)&&r(i.createElement);e.exports=function(e){return o?i.createElement(e):{}}},function(e,t,n){var r=n(5),i=n(13),o=n(22),a=n(26)("src"),u=Function.toString,l=(""+u).split("toString");n(12).inspectSource=function(e){return u.call(e)},(e.exports=function(e,t,n,u){var c="function"==typeof n;c&&(o(n,"name")||i(n,"name",t)),e[t]!==n&&(c&&(o(n,a)||i(n,a,e[t]?""+e[t]:l.join(String(t)))),e===r?e[t]=n:u?e[t]?e[t]=n:i(e,t,n):(delete e[t],i(e,t,n)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[a]||u.call(this)})},function(e,t,n){var r=n(21).f,i=n(22),o=n(6)("toStringTag");e.exports=function(e,t,n){e&&!i(e=n?e:e.prototype,o)&&r(e,o,{configurable:!0,value:t})}},function(e,t,n){var r=n(82),i=n(48);e.exports=function(e){return r(i(e))}},function(e,t,n){var r=n(39)("keys"),i=n(26);e.exports=function(e){return r[e]||(r[e]=i(e))}},function(e,t,n){e.exports=function e(t){"use strict";var n=/^\0+/g,r=/[\0\r\f]/g,i=/: */g,o=/zoo|gra/,a=/([,: ])(transform)/g,u=/,+\s*(?![^(]*[)])/g,l=/ +\s*(?![^(]*[)])/g,c=/ *[\0] */g,s=/,\r+?/g,f=/([\t\r\n ])*\f?&/g,p=/:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,d=/\W+/g,v=/@(k\w+)\s*(\S*)\s*/,h=/::(place)/g,m=/:(read-only)/g,y=/\s+(?=[{\];=:>])/g,w=/([[}=:>])\s+/g,g=/(\{[^{]+?);(?=\})/g,C=/\s{2,}/g,x=/([^\(])(:+) */g,T=/[svh]\w+-[tblr]{2}/,b=/\(\s*(.*)\s*\)/g,_=/([\s\S]*?);/g,S=/-self|flex-/g,E=/[^]*?(:[rp][el]a[\w-]+)[^]*/,O=/stretch|:\s*\w+\-(?:conte|avail)/,P=/([^-])(image-set\()/,N="-webkit-",A="-moz-",j="-ms-",I=59,M=125,F=123,L=40,D=41,z=91,U=93,k=10,R=13,$=9,W=64,Q=32,X=38,Y=45,K=95,q=42,V=44,Z=58,J=39,G=34,B=47,H=62,ee=43,te=126,ne=0,re=12,ie=11,oe=107,ae=109,ue=115,le=112,ce=111,se=105,fe=99,pe=100,de=112,ve=1,he=1,me=0,ye=1,we=1,ge=1,Ce=0,xe=0,Te=0,be=[],_e=[],Se=0,Ee=null,Oe=-2,Pe=-1,Ne=0,Ae=1,je=2,Ie=3,Me=0,Fe=1,Le="",De="",ze="";function Ue(e,t,i,o,a){for(var u,l,s=0,f=0,p=0,d=0,y=0,w=0,g=0,C=0,T=0,_=0,S=0,E=0,O=0,P=0,K=0,Ce=0,_e=0,Ee=0,Oe=0,Pe=i.length,Re=Pe-1,Ke="",qe="",Ve="",Ze="",Je="",Ge="";K<Pe;){if(g=i.charCodeAt(K),K===Re&&f+d+p+s!==0&&(0!==f&&(g=f===B?k:B),d=p=s=0,Pe++,Re++),f+d+p+s===0){if(K===Re&&(Ce>0&&(qe=qe.replace(r,"")),qe.trim().length>0)){switch(g){case Q:case $:case I:case R:case k:break;default:qe+=i.charAt(K)}g=I}if(1===_e)switch(g){case F:case M:case I:case G:case J:case L:case D:case V:_e=0;case $:case R:case k:case Q:break;default:for(_e=0,Oe=K,y=g,K--,g=I;Oe<Pe;)switch(i.charCodeAt(Oe++)){case k:case R:case I:++K,g=y,Oe=Pe;break;case Z:Ce>0&&(++K,g=y);case F:Oe=Pe}}switch(g){case F:for(y=(qe=qe.trim()).charCodeAt(0),S=1,Oe=++K;K<Pe;){switch(g=i.charCodeAt(K)){case F:S++;break;case M:S--;break;case B:switch(w=i.charCodeAt(K+1)){case q:case B:K=Ye(w,K,Re,i)}break;case z:g++;case L:g++;case G:case J:for(;K++<Re&&i.charCodeAt(K)!==g;);}if(0===S)break;K++}switch(Ve=i.substring(Oe,K),y===ne&&(y=(qe=qe.replace(n,"").trim()).charCodeAt(0)),y){case W:switch(Ce>0&&(qe=qe.replace(r,"")),w=qe.charCodeAt(1)){case pe:case ae:case ue:case Y:u=t;break;default:u=be}if(Oe=(Ve=Ue(t,u,Ve,w,a+1)).length,Te>0&&0===Oe&&(Oe=qe.length),Se>0&&(u=ke(be,qe,Ee),l=Xe(Ie,Ve,u,t,he,ve,Oe,w,a,o),qe=u.join(""),void 0!==l&&0===(Oe=(Ve=l.trim()).length)&&(w=0,Ve="")),Oe>0)switch(w){case ue:qe=qe.replace(b,Qe);case pe:case ae:case Y:Ve=qe+"{"+Ve+"}";break;case oe:Ve=(qe=qe.replace(v,"$1 $2"+(Fe>0?Le:"")))+"{"+Ve+"}",Ve=1===we||2===we&&We("@"+Ve,3)?"@"+N+Ve+"@"+Ve:"@"+Ve;break;default:Ve=qe+Ve,o===de&&(Ze+=Ve,Ve="")}else Ve="";break;default:Ve=Ue(t,ke(t,qe,Ee),Ve,o,a+1)}Je+=Ve,E=0,_e=0,P=0,Ce=0,Ee=0,O=0,qe="",Ve="",g=i.charCodeAt(++K);break;case M:case I:if((Oe=(qe=(Ce>0?qe.replace(r,""):qe).trim()).length)>1)switch(0===P&&((y=qe.charCodeAt(0))===Y||y>96&&y<123)&&(Oe=(qe=qe.replace(" ",":")).length),Se>0&&void 0!==(l=Xe(Ae,qe,t,e,he,ve,Ze.length,o,a,o))&&0===(Oe=(qe=l.trim()).length)&&(qe="\0\0"),y=qe.charCodeAt(0),w=qe.charCodeAt(1),y){case ne:break;case W:if(w===se||w===fe){Ge+=qe+i.charAt(K);break}default:if(qe.charCodeAt(Oe-1)===Z)break;Ze+=$e(qe,y,w,qe.charCodeAt(2))}E=0,_e=0,P=0,Ce=0,Ee=0,qe="",g=i.charCodeAt(++K)}}switch(g){case R:case k:if(f+d+p+s+xe===0)switch(_){case D:case J:case G:case W:case te:case H:case q:case ee:case B:case Y:case Z:case V:case I:case F:case M:break;default:P>0&&(_e=1)}f===B?f=0:ye+E===0&&o!==oe&&qe.length>0&&(Ce=1,qe+="\0"),Se*Me>0&&Xe(Ne,qe,t,e,he,ve,Ze.length,o,a,o),ve=1,he++;break;case I:case M:if(f+d+p+s===0){ve++;break}default:switch(ve++,Ke=i.charAt(K),g){case $:case Q:if(d+s+f===0)switch(C){case V:case Z:case $:case Q:Ke="";break;default:g!==Q&&(Ke=" ")}break;case ne:Ke="\\0";break;case re:Ke="\\f";break;case ie:Ke="\\v";break;case X:d+f+s===0&&ye>0&&(Ee=1,Ce=1,Ke="\f"+Ke);break;case 108:if(d+f+s+me===0&&P>0)switch(K-P){case 2:C===le&&i.charCodeAt(K-3)===Z&&(me=C);case 8:T===ce&&(me=T)}break;case Z:d+f+s===0&&(P=K);break;case V:f+p+d+s===0&&(Ce=1,Ke+="\r");break;case G:case J:0===f&&(d=d===g?0:0===d?g:d);break;case z:d+f+p===0&&s++;break;case U:d+f+p===0&&s--;break;case D:d+f+s===0&&p--;break;case L:if(d+f+s===0){if(0===E)switch(2*C+3*T){case 533:break;default:S=0,E=1}p++}break;case W:f+p+d+s+P+O===0&&(O=1);break;case q:case B:if(d+s+p>0)break;switch(f){case 0:switch(2*g+3*i.charCodeAt(K+1)){case 235:f=B;break;case 220:Oe=K,f=q}break;case q:g===B&&C===q&&Oe+2!==K&&(33===i.charCodeAt(Oe+2)&&(Ze+=i.substring(Oe,K+1)),Ke="",f=0)}}if(0===f){if(ye+d+s+O===0&&o!==oe&&g!==I)switch(g){case V:case te:case H:case ee:case D:case L:if(0===E){switch(C){case $:case Q:case k:case R:Ke+="\0";break;default:Ke="\0"+Ke+(g===V?"":"\0")}Ce=1}else switch(g){case L:P+7===K&&108===C&&(P=0),E=++S;break;case D:0==(E=--S)&&(Ce=1,Ke+="\0")}break;case $:case Q:switch(C){case ne:case F:case M:case I:case V:case re:case $:case Q:case k:case R:break;default:0===E&&(Ce=1,Ke+="\0")}}qe+=Ke,g!==Q&&g!==$&&(_=g)}}T=C,C=g,K++}if(Oe=Ze.length,Te>0&&0===Oe&&0===Je.length&&0===t[0].length==0&&(o!==ae||1===t.length&&(ye>0?De:ze)===t[0])&&(Oe=t.join(",").length+2),Oe>0){if(u=0===ye&&o!==oe?function(e){for(var t,n,i=0,o=e.length,a=Array(o);i<o;++i){for(var u=e[i].split(c),l="",s=0,f=0,p=0,d=0,v=u.length;s<v;++s)if(!(0===(f=(n=u[s]).length)&&v>1)){if(p=l.charCodeAt(l.length-1),d=n.charCodeAt(0),t="",0!==s)switch(p){case q:case te:case H:case ee:case Q:case L:break;default:t=" "}switch(d){case X:n=t+De;case te:case H:case ee:case Q:case D:case L:break;case z:n=t+n+De;break;case Z:switch(2*n.charCodeAt(1)+3*n.charCodeAt(2)){case 530:if(ge>0){n=t+n.substring(8,f-1);break}default:(s<1||u[s-1].length<1)&&(n=t+De+n)}break;case V:t="";default:n=f>1&&n.indexOf(":")>0?t+n.replace(x,"$1"+De+"$2"):t+n+De}l+=n}a[i]=l.replace(r,"").trim()}return a}(t):t,Se>0&&void 0!==(l=Xe(je,Ze,u,e,he,ve,Oe,o,a,o))&&0===(Ze=l).length)return Ge+Ze+Je;if(Ze=u.join(",")+"{"+Ze+"}",we*me!=0){switch(2!==we||We(Ze,2)||(me=0),me){case ce:Ze=Ze.replace(m,":"+A+"$1")+Ze;break;case le:Ze=Ze.replace(h,"::"+N+"input-$1")+Ze.replace(h,"::"+A+"$1")+Ze.replace(h,":"+j+"input-$1")+Ze}me=0}}return Ge+Ze+Je}function ke(e,t,n){var r=t.trim().split(s),i=r,o=r.length,a=e.length;switch(a){case 0:case 1:for(var u=0,l=0===a?"":e[0]+" ";u<o;++u)i[u]=Re(l,i[u],n,a).trim();break;default:u=0;var c=0;for(i=[];u<o;++u)for(var f=0;f<a;++f)i[c++]=Re(e[f]+" ",r[u],n,a).trim()}return i}function Re(e,t,n,r){var i=t,o=i.charCodeAt(0);switch(o<33&&(o=(i=i.trim()).charCodeAt(0)),o){case X:switch(ye+r){case 0:case 1:if(0===e.trim().length)break;default:return i.replace(f,"$1"+e.trim())}break;case Z:switch(i.charCodeAt(1)){case 103:if(ge>0&&ye>0)return i.replace(p,"$1").replace(f,"$1"+ze);break;default:return e.trim()+i.replace(f,"$1"+e.trim())}default:if(n*ye>0&&i.indexOf("\f")>0)return i.replace(f,(e.charCodeAt(0)===Z?"":"$1")+e.trim())}return e+i}function $e(e,t,n,r){var c,s=0,f=e+";",p=2*t+3*n+4*r;if(944===p)return function(e){var t=e.length,n=e.indexOf(":",9)+1,r=e.substring(0,n).trim(),i=e.substring(n,t-1).trim();switch(e.charCodeAt(9)*Fe){case 0:break;case Y:if(110!==e.charCodeAt(10))break;default:for(var o=i.split((i="",u)),a=0,n=0,t=o.length;a<t;n=0,++a){for(var c=o[a],s=c.split(l);c=s[n];){var f=c.charCodeAt(0);if(1===Fe&&(f>W&&f<90||f>96&&f<123||f===K||f===Y&&c.charCodeAt(1)!==Y))switch(isNaN(parseFloat(c))+(-1!==c.indexOf("("))){case 1:switch(c){case"infinite":case"alternate":case"backwards":case"running":case"normal":case"forwards":case"both":case"none":case"linear":case"ease":case"ease-in":case"ease-out":case"ease-in-out":case"paused":case"reverse":case"alternate-reverse":case"inherit":case"initial":case"unset":case"step-start":case"step-end":break;default:c+=Le}}s[n++]=c}i+=(0===a?"":",")+s.join(" ")}}return i=r+i+";",1===we||2===we&&We(i,1)?N+i+i:i}(f);if(0===we||2===we&&!We(f,1))return f;switch(p){case 1015:return 97===f.charCodeAt(10)?N+f+f:f;case 951:return 116===f.charCodeAt(3)?N+f+f:f;case 963:return 110===f.charCodeAt(5)?N+f+f:f;case 1009:if(100!==f.charCodeAt(4))break;case 969:case 942:return N+f+f;case 978:return N+f+A+f+f;case 1019:case 983:return N+f+A+f+j+f+f;case 883:return f.charCodeAt(8)===Y?N+f+f:f.indexOf("image-set(",11)>0?f.replace(P,"$1"+N+"$2")+f:f;case 932:if(f.charCodeAt(4)===Y)switch(f.charCodeAt(5)){case 103:return N+"box-"+f.replace("-grow","")+N+f+j+f.replace("grow","positive")+f;case 115:return N+f+j+f.replace("shrink","negative")+f;case 98:return N+f+j+f.replace("basis","preferred-size")+f}return N+f+j+f+f;case 964:return N+f+j+"flex-"+f+f;case 1023:if(99!==f.charCodeAt(8))break;return c=f.substring(f.indexOf(":",15)).replace("flex-","").replace("space-between","justify"),N+"box-pack"+c+N+f+j+"flex-pack"+c+f;case 1005:return o.test(f)?f.replace(i,":"+N)+f.replace(i,":"+A)+f:f;case 1e3:switch(s=(c=f.substring(13).trim()).indexOf("-")+1,c.charCodeAt(0)+c.charCodeAt(s)){case 226:c=f.replace(T,"tb");break;case 232:c=f.replace(T,"tb-rl");break;case 220:c=f.replace(T,"lr");break;default:return f}return N+f+j+c+f;case 1017:if(-1===f.indexOf("sticky",9))return f;case 975:switch(s=(f=e).length-10,p=(c=(33===f.charCodeAt(s)?f.substring(0,s):f).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|c.charCodeAt(7))){case 203:if(c.charCodeAt(8)<111)break;case 115:f=f.replace(c,N+c)+";"+f;break;case 207:case 102:f=f.replace(c,N+(p>102?"inline-":"")+"box")+";"+f.replace(c,N+c)+";"+f.replace(c,j+c+"box")+";"+f}return f+";";case 938:if(f.charCodeAt(5)===Y)switch(f.charCodeAt(6)){case 105:return c=f.replace("-items",""),N+f+N+"box-"+c+j+"flex-"+c+f;case 115:return N+f+j+"flex-item-"+f.replace(S,"")+f;default:return N+f+j+"flex-line-pack"+f.replace("align-content","").replace(S,"")+f}break;case 973:case 989:if(f.charCodeAt(3)!==Y||122===f.charCodeAt(4))break;case 931:case 953:if(!0===O.test(e))return 115===(c=e.substring(e.indexOf(":")+1)).charCodeAt(0)?$e(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):f.replace(c,N+c)+f.replace(c,A+c.replace("fill-",""))+f;break;case 962:if(f=N+f+(102===f.charCodeAt(5)?j+f:"")+f,n+r===211&&105===f.charCodeAt(13)&&f.indexOf("transform",10)>0)return f.substring(0,f.indexOf(";",27)+1).replace(a,"$1"+N+"$2")+f}return f}function We(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10),i=e.substring(n+1,e.length-1);return Ee(2!==t?r:r.replace(E,"$1"),i,t)}function Qe(e,t){var n=$e(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(_," or ($1)").substring(4):"("+t+")"}function Xe(e,t,n,r,i,o,a,u,l,c){for(var s,f=0,p=t;f<Se;++f)switch(s=_e[f].call(qe,e,p,n,r,i,o,a,u,l,c)){case void 0:case!1:case!0:case null:break;default:p=s}if(p!==t)return p}function Ye(e,t,n,r){for(var i=t+1;i<n;++i)switch(r.charCodeAt(i)){case B:if(e===q&&r.charCodeAt(i-1)===q&&t+2!==i)return i+1;break;case k:if(e===B)return i+1}return i}function Ke(e){for(var t in e){var n=e[t];switch(t){case"keyframe":Fe=0|n;break;case"global":ge=0|n;break;case"cascade":ye=0|n;break;case"compress":Ce=0|n;break;case"semicolon":xe=0|n;break;case"preserve":Te=0|n;break;case"prefix":Ee=null,n?"function"!=typeof n?we=1:(we=2,Ee=n):we=0}}return Ke}function qe(t,n){if(void 0!==this&&this.constructor===qe)return e(t);var i=t,o=i.charCodeAt(0);o<33&&(o=(i=i.trim()).charCodeAt(0)),Fe>0&&(Le=i.replace(d,o===z?"":"-")),o=1,1===ye?ze=i:De=i;var a,u=[ze];Se>0&&void 0!==(a=Xe(Pe,n,u,u,he,ve,0,0,0,0))&&"string"==typeof a&&(n=a);var l=Ue(be,u,n,0,0);return Se>0&&void 0!==(a=Xe(Oe,l,u,u,he,ve,l.length,0,0,0))&&"string"!=typeof(l=a)&&(o=0),Le="",ze="",De="",me=0,he=1,ve=1,Ce*o==0?l:l.replace(r,"").replace(y,"").replace(w,"$1").replace(g,"$1").replace(C," ")}return qe.use=function e(t){switch(t){case void 0:case null:Se=_e.length=0;break;default:if("function"==typeof t)_e[Se++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else Me=0|!!t}return e},qe.set=Ke,void 0!==t&&Ke(t),qe}(null)},function(e,t,n){"use strict";var r=function(e,t){return e===t};t.a=function(e,t){var n;void 0===t&&(t=r);var i,o=[],a=!1,u=function(e,n){return t(e,o[n],n)};return function(){for(var t=arguments.length,r=new Array(t),l=0;l<t;l++)r[l]=arguments[l];return a&&n===this&&r.length===o.length&&r.every(u)?i:(i=e.apply(this,r),a=!0,n=this,o=r,i)}}},function(e,t,n){var r=n(106);e.exports=d,e.exports.parse=o,e.exports.compile=function(e,t){return u(o(e,t))},e.exports.tokensToFunction=u,e.exports.tokensToRegExp=p;var i=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,t){for(var n,r=[],o=0,a=0,u="",s=t&&t.delimiter||"/";null!=(n=i.exec(e));){var f=n[0],p=n[1],d=n.index;if(u+=e.slice(a,d),a=d+f.length,p)u+=p[1];else{var v=e[a],h=n[2],m=n[3],y=n[4],w=n[5],g=n[6],C=n[7];u&&(r.push(u),u="");var x=null!=h&&null!=v&&v!==h,T="+"===g||"*"===g,b="?"===g||"*"===g,_=n[2]||s,S=y||w;r.push({name:m||o++,prefix:h||"",delimiter:_,optional:b,repeat:T,partial:x,asterisk:!!C,pattern:S?c(S):C?".*":"[^"+l(_)+"]+?"})}}return a<e.length&&(u+=e.substr(a)),u&&r.push(u),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function u(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,i){for(var o="",u=n||{},l=(i||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,p=u[s.name];if(null==p){if(s.optional){s.partial&&(o+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(p)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<p.length;d++){if(f=l(p[d]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");o+=(0===d?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(p).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):l(p),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');o+=s.prefix+f}}else o+=s}return o}}function l(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e.sensitive?"":"i"}function p(e,t,n){r(t)||(n=t||n,t=[]);for(var i=(n=n||{}).strict,o=!1!==n.end,a="",u=0;u<e.length;u++){var c=e[u];if("string"==typeof c)a+=l(c);else{var p=l(c.prefix),d="(?:"+c.pattern+")";t.push(c),c.repeat&&(d+="(?:"+p+d+")*"),a+=d=c.optional?c.partial?p+"("+d+")?":"(?:"+p+"("+d+"))?":p+"("+d+")"}}var v=l(n.delimiter||"/"),h=a.slice(-v.length)===v;return i||(a=(h?a.slice(0,-v.length):a)+"(?:"+v+"(?=$))?"),a+=o?"$":i&&h?"":"(?="+v+"|$)",s(new RegExp("^"+a,f(n)),t)}function d(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],i=0;i<e.length;i++)r.push(d(e[i],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return p(o(e,n),t,n)}(e,t,n)}},function(e){e.exports={"catalog.header.title":"Games catalog","detail.header.title":"Game details","notfoundpage.text.goback":"Back to home","notfoundpage.text.pagenotfound":"Every thing is fine, but this page does not exist!"}},function(e,t,n){"use strict";n.d(t,"a",function(){return p}),n.d(t,"b",function(){return v});var r=n(7),i=n(0),o=n.n(i),a=n(10),u=n(4),l=(n(2),n(101),n(1)),c=n(11),s=n(55),f=n.n(s),p=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(t=e.call.apply(e,[this].concat(r))||this).history=Object(u.a)(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return o.a.createElement(a.b,{history:this.history,children:this.props.children})},t}(o.a.Component);o.a.Component;var d=function(e){function t(){return e.apply(this,arguments)||this}Object(r.a)(t,e);var n=t.prototype;return n.handleClick=function(e,t){(this.props.onClick&&this.props.onClick(e),e.defaultPrevented||0!==e.button||this.props.target&&"_self"!==this.props.target||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e))||(e.preventDefault(),(this.props.replace?t.history.replace:t.history.push)(this.props.to))},n.render=function(){var e=this,t=this.props,n=t.innerRef,r=(t.replace,t.to),i=Object(c.a)(t,["innerRef","replace","to"]);return o.a.createElement(a.d.Consumer,null,function(t){t||f()(!1);var a="string"==typeof r?Object(u.c)(r,null,null,t.location):r,c=a?t.history.createHref(a):"";return o.a.createElement("a",Object(l.a)({},i,{onClick:function(n){return e.handleClick(n,t)},href:c,ref:n}))})},t}(o.a.Component);function v(e){var t=e["aria-current"],n=e.activeClassName,r=e.activeStyle,i=e.className,u=e.exact,s=e.isActive,f=e.location,p=e.strict,v=e.style,h=e.to,m=Object(c.a)(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to"]),y="object"==typeof h?h.pathname:h,w=y&&y.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1");return o.a.createElement(a.a,{path:w,exact:u,strict:p,location:f,children:function(e){var a=e.location,u=e.match,c=!!(s?s(u,a):u),f=c?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter(function(e){return e}).join(" ")}(i,n):i,p=c?Object(l.a)({},v,r):v;return o.a.createElement(d,Object(l.a)({"aria-current":c&&t||null,className:f,style:p,to:h},m))}})}d.defaultProps={replace:!1},v.defaultProps={"aria-current":"page",activeClassName:"active"}},function(e,t,n){"use strict";n.d(t,"b",function(){return o}),n.d(t,"a",function(){return a});var r=n(0),i=n.n(r).a.createContext({currentLanguage:"en",_:function(){},changeLanguage:function(){}}),o=i.Provider,a=i.Consumer},function(e,t,n){var r=n(20),i=n(6)("toStringTag"),o="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?n:o?r(t):"Object"==(a=r(t))&&"function"==typeof t.callee?"Arguments":a}},function(e,t,n){var r=n(12),i=n(5),o=i["__core-js_shared__"]||(i["__core-js_shared__"]={});(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(25)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r=n(5),i=n(12),o=n(13),a=n(28),u=n(18),l=function(e,t,n){var c,s,f,p,d=e&l.F,v=e&l.G,h=e&l.S,m=e&l.P,y=e&l.B,w=v?r:h?r[t]||(r[t]={}):(r[t]||{}).prototype,g=v?i:i[t]||(i[t]={}),C=g.prototype||(g.prototype={});for(c in v&&(n=t),n)f=((s=!d&&w&&void 0!==w[c])?w:n)[c],p=y&&s?u(f,r):m&&"function"==typeof f?u(Function.call,f):f,w&&a(w,c,f,e&l.U),g[c]!=f&&o(g,c,p),m&&C[c]!=f&&(C[c]=f)};r.core=i,l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){var r=n(44),i=Math.min;e.exports=function(e){return e>0?i(r(e),9007199254740991):0}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r,i,o,a=n(18),u=n(71),l=n(46),c=n(27),s=n(5),f=s.process,p=s.setImmediate,d=s.clearImmediate,v=s.MessageChannel,h=s.Dispatch,m=0,y={},w=function(){var e=+this;if(y.hasOwnProperty(e)){var t=y[e];delete y[e],t()}},g=function(e){w.call(e.data)};p&&d||(p=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return y[++m]=function(){u("function"==typeof e?e:Function(e),t)},r(m),m},d=function(e){delete y[e]},"process"==n(20)(f)?r=function(e){f.nextTick(a(w,e,1))}:h&&h.now?r=function(e){h.now(a(w,e,1))}:v?(o=(i=new v).port2,i.port1.onmessage=g,r=a(o.postMessage,o,1)):s.addEventListener&&"function"==typeof postMessage&&!s.importScripts?(r=function(e){s.postMessage(e+"","*")},s.addEventListener("message",g,!1)):r="onreadystatechange"in c("script")?function(e){l.appendChild(c("script")).onreadystatechange=function(){l.removeChild(this),w.call(e)}}:function(e){setTimeout(a(w,e,1),0)}),e.exports={set:p,clear:d}},function(e,t,n){var r=n(5).document;e.exports=r&&r.documentElement},function(e,t,n){"use strict";var r=n(19);function i(e){var t,n;this.promise=new e(function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r}),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new i(e)}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,u=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var c in n=Object(arguments[l]))i.call(n,c)&&(u[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)o.call(n,a[s])&&(u[a[s]]=n[a[s]])}}return u}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){e.exports=function(){"use strict";return function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,i,o,a,u,l,c,s,f){switch(n){case 1:if(0===s&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===c)return r+"/*|*/";break;case 3:switch(c){case 102:case 112:return e(i[0]+r),"";default:return r+(0===f?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}}()},function(e,t,n){"use strict";t.a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1}},function(e){e.exports={games:[{name:"Switch Game A",platform:"Switch",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/e4000f/ffffff",hero:"https://via.placeholder.com/1920x368/e4000f/ffffff"},{name:"Switch Game B",platform:"Switch",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/e4000f/ffffff",hero:"https://via.placeholder.com/1920x368/e4000f/ffffff"},{name:"Switch Game C",platform:"Switch",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/e4000f/ffffff",hero:"https://via.placeholder.com/1920x368/e4000f/ffffff"},{name:"Xbox Game A",platform:"X1",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/0e7a0d/ffffff",hero:"https://via.placeholder.com/1920x368/0e7a0d/ffffff"},{name:"Xbox Game B",platform:"X1",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/0e7a0d/ffffff",hero:"https://via.placeholder.com/1920x368/0e7a0d/ffffff"},{name:"Xbox Game C",platform:"X1",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/0e7a0d/ffffff",hero:"https://via.placeholder.com/1920x368/0e7a0d/ffffff"},{name:"PlayStation Game A",platform:"PS4",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/003791/ffffff",hero:"https://via.placeholder.com/1920x368/003791/ffffff"},{name:"PlayStation Game B",platform:"PS4",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/003791/ffffff",hero:"https://via.placeholder.com/1920x368/003791/ffffff"},{name:"PlayStation Game C",platform:"PS4",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/003791/ffffff",hero:"https://via.placeholder.com/1920x368/003791/ffffff"},{name:"PC Game A",platform:"PC",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/003791/ffffff",hero:"https://via.placeholder.com/1920x368/003791/ffffff"},{name:"PC Game B",platform:"PC",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/003791/ffffff",hero:"https://via.placeholder.com/1920x368/003791/ffffff"},{name:"PC Game C",platform:"PC",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in vehicula nulla. Nullam id leo non mi gravida iaculis. Integer aliquam ex in ipsum cursus, ac accumsan nisl cursus. Curabitur quis lorem sed enim ultrices scelerisque sit amet et sapien. Integer elementum, eros vel dignissim consectetur, nibh tortor iaculis leo, nec varius dolor velit in nisl. Quisque ac nibh quis risus venenatis mollis. Aliquam dapibus, mauris nec iaculis ornare, neque nulla lacinia turpis, ac luctus nunc tortor et est. Donec tempor lorem ac eros semper, eget ultricies urna ultrices. Nunc feugiat eros dui, id pharetra risus hendrerit sit amet.",cover:"https://via.placeholder.com/359x411/003791/ffffff",hero:"https://via.placeholder.com/1920x368/003791/ffffff"}]}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,i,o,a,u){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,i,o,a,u],s=0;(l=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw l.framesToPop=1,l}}},function(e,t,n){"use strict";t.__esModule=!0;var r=o(n(0)),i=o(n(102));function o(e){return e&&e.__esModule?e:{default:e}}t.default=r.default.createContext||i.default,e.exports=t.default},function(e,t,n){"use strict";var r={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o=Object.defineProperty,a=Object.getOwnPropertyNames,u=Object.getOwnPropertySymbols,l=Object.getOwnPropertyDescriptor,c=Object.getPrototypeOf,s=c&&c(Object);e.exports=function e(t,n,f){if("string"!=typeof n){if(s){var p=c(n);p&&p!==s&&e(t,p,f)}var d=a(n);u&&(d=d.concat(u(n)));for(var v=0;v<d.length;++v){var h=d[v];if(!(r[h]||i[h]||f&&f[h])){var m=l(n,h);try{o(t,h,m)}catch(e){}}}return t}return t}},function(e){e.exports={"catalog.header.title":"Catalogue de jeux","detail.header.title":"Détails du jeux","notfoundpage.text.goback":"Retour A l'accueil","notfoundpage.text.pagenotfound":"Tout va bien, mais cette page n'existe pas!"}},function(e,t,n){"use strict";var r=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,i=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}(function(e){return r.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91});t.a=i},,function(e,t,n){n(62),n(79),e.exports=n(107)},function(e,t,n){"use strict";var r,i,o,a,u=n(25),l=n(5),c=n(18),s=n(38),f=n(40),p=n(14),d=n(19),v=n(65),h=n(66),m=n(70),y=n(45).set,w=n(72)(),g=n(47),C=n(73),x=n(74),T=n(75),b=l.TypeError,_=l.process,S=_&&_.versions,E=S&&S.v8||"",O=l.Promise,P="process"==s(_),N=function(){},A=i=g.f,j=!!function(){try{var e=O.resolve(1),t=(e.constructor={})[n(6)("species")]=function(e){e(N,N)};return(P||"function"==typeof PromiseRejectionEvent)&&e.then(N)instanceof t&&0!==E.indexOf("6.6")&&-1===x.indexOf("Chrome/66")}catch(e){}}(),I=function(e){var t;return!(!p(e)||"function"!=typeof(t=e.then))&&t},M=function(e,t){if(!e._n){e._n=!0;var n=e._c;w(function(){for(var r=e._v,i=1==e._s,o=0,a=function(t){var n,o,a,u=i?t.ok:t.fail,l=t.resolve,c=t.reject,s=t.domain;try{u?(i||(2==e._h&&D(e),e._h=1),!0===u?n=r:(s&&s.enter(),n=u(r),s&&(s.exit(),a=!0)),n===t.promise?c(b("Promise-chain cycle")):(o=I(n))?o.call(n,l,c):l(n)):c(r)}catch(e){s&&!a&&s.exit(),c(e)}};n.length>o;)a(n[o++]);e._c=[],e._n=!1,t&&!e._h&&F(e)})}},F=function(e){y.call(l,function(){var t,n,r,i=e._v,o=L(e);if(o&&(t=C(function(){P?_.emit("unhandledRejection",i,e):(n=l.onunhandledrejection)?n({promise:e,reason:i}):(r=l.console)&&r.error&&r.error("Unhandled promise rejection",i)}),e._h=P||L(e)?2:1),e._a=void 0,o&&t.e)throw t.v})},L=function(e){return 1!==e._h&&0===(e._a||e._c).length},D=function(e){y.call(l,function(){var t;P?_.emit("rejectionHandled",e):(t=l.onrejectionhandled)&&t({promise:e,reason:e._v})})},z=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),M(t,!0))},U=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw b("Promise can't be resolved itself");(t=I(e))?w(function(){var r={_w:n,_d:!1};try{t.call(e,c(U,r,1),c(z,r,1))}catch(e){z.call(r,e)}}):(n._v=e,n._s=1,M(n,!1))}catch(e){z.call({_w:n,_d:!1},e)}}};j||(O=function(e){v(this,O,"Promise","_h"),d(e),r.call(this);try{e(c(U,this,1),c(z,this,1))}catch(e){z.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(76)(O.prototype,{then:function(e,t){var n=A(m(this,O));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=P?_.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&M(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new r;this.promise=e,this.resolve=c(U,e,1),this.reject=c(z,e,1)},g.f=A=function(e){return e===O||e===a?new o(e):i(e)}),f(f.G+f.W+f.F*!j,{Promise:O}),n(29)(O,"Promise"),n(77)("Promise"),a=n(12).Promise,f(f.S+f.F*!j,"Promise",{reject:function(e){var t=A(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(u||!j),"Promise",{resolve:function(e){return T(u&&this===a?O:this,e)}}),f(f.S+f.F*!(j&&n(78)(function(e){O.all(e).catch(N)})),"Promise",{all:function(e){var t=this,n=A(t),r=n.resolve,i=n.reject,o=C(function(){var n=[],o=0,a=1;h(e,!1,function(e){var u=o++,l=!1;n.push(void 0),a++,t.resolve(e).then(function(e){l||(l=!0,n[u]=e,--a||r(n))},i)}),--a||r(n)});return o.e&&i(o.v),n.promise},race:function(e){var t=this,n=A(t),r=n.reject,i=C(function(){h(e,!1,function(e){t.resolve(e).then(n.resolve,r)})});return i.e&&r(i.v),n.promise}})},function(e,t,n){e.exports=!n(15)&&!n(41)(function(){return 7!=Object.defineProperty(n(27)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(14);e.exports=function(e,t){if(!r(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!r(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var r=n(18),i=n(67),o=n(68),a=n(9),u=n(43),l=n(69),c={},s={};(t=e.exports=function(e,t,n,f,p){var d,v,h,m,y=p?function(){return e}:l(e),w=r(n,f,t?2:1),g=0;if("function"!=typeof y)throw TypeError(e+" is not iterable!");if(o(y)){for(d=u(e.length);d>g;g++)if((m=t?w(a(v=e[g])[0],v[1]):w(e[g]))===c||m===s)return m}else for(h=y.call(e);!(v=h.next()).done;)if((m=i(h,w,v.value,t))===c||m===s)return m}).BREAK=c,t.RETURN=s},function(e,t,n){var r=n(9);e.exports=function(e,t,n,i){try{return i?t(r(n)[0],n[1]):t(n)}catch(t){var o=e.return;throw void 0!==o&&r(o.call(e)),t}}},function(e,t,n){var r=n(23),i=n(6)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||o[i]===e)}},function(e,t,n){var r=n(38),i=n(6)("iterator"),o=n(23);e.exports=n(12).getIteratorMethod=function(e){if(null!=e)return e[i]||e["@@iterator"]||o[r(e)]}},function(e,t,n){var r=n(9),i=n(19),o=n(6)("species");e.exports=function(e,t){var n,a=r(e).constructor;return void 0===a||null==(n=r(a)[o])?t:i(n)}},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(5),i=n(45).set,o=r.MutationObserver||r.WebKitMutationObserver,a=r.process,u=r.Promise,l="process"==n(20)(a);e.exports=function(){var e,t,n,c=function(){var r,i;for(l&&(r=a.domain)&&r.exit();e;){i=e.fn,e=e.next;try{i()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(l)n=function(){a.nextTick(c)};else if(!o||r.navigator&&r.navigator.standalone)if(u&&u.resolve){var s=u.resolve(void 0);n=function(){s.then(c)}}else n=function(){i.call(r,c)};else{var f=!0,p=document.createTextNode("");new o(c).observe(p,{characterData:!0}),n=function(){p.data=f=!f}}return function(r){var i={fn:r,next:void 0};t&&(t.next=i),e||(e=i,n()),t=i}}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(5).navigator;e.exports=r&&r.userAgent||""},function(e,t,n){var r=n(9),i=n(14),o=n(47);e.exports=function(e,t){if(r(e),i(t)&&t.constructor===e)return t;var n=o.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){var r=n(28);e.exports=function(e,t,n){for(var i in t)r(e,i,t[i],n);return e}},function(e,t,n){"use strict";var r=n(5),i=n(21),o=n(15),a=n(6)("species");e.exports=function(e){var t=r[e];o&&t&&!t[a]&&i.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,n){var r=n(6)("iterator"),i=!1;try{var o=[7][r]();o.return=function(){i=!0},Array.from(o,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var n=!1;try{var o=[7],a=o[r]();a.next=function(){return{done:n=!0}},o[r]=function(){return a},e(o)}catch(e){}return n}},function(e,t,n){"use strict";var r=n(80),i=n(81),o=n(23),a=n(30);e.exports=n(83)(Array,"Array",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,i(1)):i(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])},"values"),o.Arguments=o.Array,r("keys"),r("values"),r("entries")},function(e,t,n){var r=n(6)("unscopables"),i=Array.prototype;null==i[r]&&n(13)(i,r,{}),e.exports=function(e){i[r][e]=!0}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){var r=n(20);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t,n){"use strict";var r=n(25),i=n(40),o=n(28),a=n(13),u=n(23),l=n(84),c=n(29),s=n(91),f=n(6)("iterator"),p=!([].keys&&"next"in[].keys()),d=function(){return this};e.exports=function(e,t,n,v,h,m,y){l(n,t,v);var w,g,C,x=function(e){if(!p&&e in S)return S[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},T=t+" Iterator",b="values"==h,_=!1,S=e.prototype,E=S[f]||S["@@iterator"]||h&&S[h],O=E||x(h),P=h?b?x("entries"):O:void 0,N="Array"==t&&S.entries||E;if(N&&(C=s(N.call(new e)))!==Object.prototype&&C.next&&(c(C,T,!0),r||"function"==typeof C[f]||a(C,f,d)),b&&E&&"values"!==E.name&&(_=!0,O=function(){return E.call(this)}),r&&!y||!p&&!_&&S[f]||a(S,f,O),u[t]=O,u[T]=d,h)if(w={values:b?O:x("values"),keys:m?O:x("keys"),entries:P},y)for(g in w)g in S||o(S,g,w[g]);else i(i.P+i.F*(p||_),t,w);return w}},function(e,t,n){"use strict";var r=n(85),i=n(42),o=n(29),a={};n(13)(a,n(6)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(a,{next:i(1,n)}),o(e,t+" Iterator")}},function(e,t,n){var r=n(9),i=n(86),o=n(49),a=n(31)("IE_PROTO"),u=function(){},l=function(){var e,t=n(27)("iframe"),r=o.length;for(t.style.display="none",n(46).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),l=e.F;r--;)delete l.prototype[o[r]];return l()};e.exports=Object.create||function(e,t){var n;return null!==e?(u.prototype=r(e),n=new u,u.prototype=null,n[a]=e):n=l(),void 0===t?n:i(n,t)}},function(e,t,n){var r=n(21),i=n(9),o=n(87);e.exports=n(15)?Object.defineProperties:function(e,t){i(e);for(var n,a=o(t),u=a.length,l=0;u>l;)r.f(e,n=a[l++],t[n]);return e}},function(e,t,n){var r=n(88),i=n(49);e.exports=Object.keys||function(e){return r(e,i)}},function(e,t,n){var r=n(22),i=n(30),o=n(89)(!1),a=n(31)("IE_PROTO");e.exports=function(e,t){var n,u=i(e),l=0,c=[];for(n in u)n!=a&&r(u,n)&&c.push(n);for(;t.length>l;)r(u,n=t[l++])&&(~o(c,n)||c.push(n));return c}},function(e,t,n){var r=n(30),i=n(43),o=n(90);e.exports=function(e){return function(t,n,a){var u,l=r(t),c=i(l.length),s=o(a,c);if(e&&n!=n){for(;c>s;)if((u=l[s++])!=u)return!0}else for(;c>s;s++)if((e||s in l)&&l[s]===n)return e||s||0;return!e&&-1}}},function(e,t,n){var r=n(44),i=Math.max,o=Math.min;e.exports=function(e,t){return(e=r(e))<0?i(e+t,0):o(e,t)}},function(e,t,n){var r=n(22),i=n(92),o=n(31)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=i(e),r(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,n){var r=n(48);e.exports=function(e){return Object(r(e))}},function(e,t,n){"use strict";
/** @license React v16.7.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(50),i="function"==typeof Symbol&&Symbol.for,o=i?Symbol.for("react.element"):60103,a=i?Symbol.for("react.portal"):60106,u=i?Symbol.for("react.fragment"):60107,l=i?Symbol.for("react.strict_mode"):60108,c=i?Symbol.for("react.profiler"):60114,s=i?Symbol.for("react.provider"):60109,f=i?Symbol.for("react.context"):60110,p=i?Symbol.for("react.concurrent_mode"):60111,d=i?Symbol.for("react.forward_ref"):60112,v=i?Symbol.for("react.suspense"):60113,h=i?Symbol.for("react.memo"):60115,m=i?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function w(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,i,o,a,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,i,o,a,u],c=0;(e=Error(t.replace(/%s/g,function(){return l[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C={};function x(e,t,n){this.props=e,this.context=t,this.refs=C,this.updater=n||g}function T(){}function b(e,t,n){this.props=e,this.context=t,this.refs=C,this.updater=n||g}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&w("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},T.prototype=x.prototype;var _=b.prototype=new T;_.constructor=b,r(_,x.prototype),_.isPureReactComponent=!0;var S={current:null,currentDispatcher:null},E=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r=void 0,i={},a=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(a=""+t.key),t)E.call(t,r)&&!O.hasOwnProperty(r)&&(i[r]=t[r]);var l=arguments.length-2;if(1===l)i.children=n;else if(1<l){for(var c=Array(l),s=0;s<l;s++)c[s]=arguments[s+2];i.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===i[r]&&(i[r]=l[r]);return{$$typeof:o,type:e,key:a,ref:u,props:i,_owner:S.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var A=/\/+/g,j=[];function I(e,t,n,r){if(j.length){var i=j.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=r,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>j.length&&j.push(e)}function F(e,t,n){return null==e?0:function e(t,n,r,i){var u=typeof t;"undefined"!==u&&"boolean"!==u||(t=null);var l=!1;if(null===t)l=!0;else switch(u){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case o:case a:l=!0}}if(l)return r(i,t,""===n?"."+L(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+L(u=t[c],c);l+=e(u,s,r,i)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=y&&t[y]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(u=t.next()).done;)l+=e(u=u.value,s=n+L(u,c++),r,i);else"object"===u&&w("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return l}(e,"",t,n)}function L(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function D(e,t){e.func.call(e.context,t,e.count++)}function z(e,t,n){var r=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?U(e,r,n,function(e){return e}):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,i+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(A,"$&/")+"/")+n)),r.push(e))}function U(e,t,n,r,i){var o="";null!=n&&(o=(""+n).replace(A,"$&/")+"/"),F(e,z,t=I(t,o,r,i)),M(t)}var k={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return U(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;F(e,D,t=I(null,null,t,n)),M(t)},count:function(e){return F(e,function(){return null},null)},toArray:function(e){var t=[];return U(e,t,null,function(e){return e}),t},only:function(e){return N(e)||w("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:b,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},Fragment:u,StrictMode:l,Suspense:v,createElement:P,cloneElement:function(e,t,n){null==e&&w("267",e);var i=void 0,a=r({},e.props),u=e.key,l=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,c=S.current),void 0!==t.key&&(u=""+t.key);var s=void 0;for(i in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)E.call(t,i)&&!O.hasOwnProperty(i)&&(a[i]=void 0===t[i]&&void 0!==s?s[i]:t[i])}if(1===(i=arguments.length-2))a.children=n;else if(1<i){s=Array(i);for(var f=0;f<i;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:o,type:e.type,key:u,ref:l,props:a,_owner:c}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:N,version:"16.7.0",unstable_ConcurrentMode:p,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:S,assign:r}},R={default:k},$=R&&k||R;e.exports=$.default||$},function(e,t,n){"use strict";
/** @license React v16.7.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),i=n(50),o=n(95);function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,i,o,a,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,i,o,a,u],c=0;(e=Error(t.replace(/%s/g,function(){return l[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var u=!1,l=null,c=!1,s=null,f={onError:function(e){u=!0,l=e}};function p(e,t,n,r,i,o,a,c,s){u=!1,l=null,function(e,t,n,r,i,o,a,u,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var d=null,v={};function h(){if(d)for(var e in v){var t=v[e],n=d.indexOf(e);if(-1<n||a("96",e),!y[n])for(var r in t.extractEvents||a("97",e),y[n]=t,n=t.eventTypes){var i=void 0,o=n[r],u=t,l=r;w.hasOwnProperty(l)&&a("99",l),w[l]=o;var c=o.phasedRegistrationNames;if(c){for(i in c)c.hasOwnProperty(i)&&m(c[i],u,l);i=!0}else o.registrationName?(m(o.registrationName,u,l),i=!0):i=!1;i||a("98",r,e)}}}function m(e,t,n){g[e]&&a("100",e),g[e]=t,C[e]=t.eventTypes[n].dependencies}var y=[],w={},g={},C={},x=null,T=null,b=null;function _(e,t,n){var r=e.type||"unknown-event";e.currentTarget=b(n),function(e,t,n,r,i,o,f,d,v){if(p.apply(this,arguments),u){if(u){var h=l;u=!1,l=null}else a("198"),h=void 0;c||(c=!0,s=h)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function E(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var O=null;function P(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)_(e,t[r],n[r]);else t&&_(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var N={injectEventPluginOrder:function(e){d&&a("101"),d=Array.prototype.slice.call(e),h()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];v.hasOwnProperty(t)&&v[t]===r||(v[t]&&a("102",t),v[t]=r,n=!0)}n&&h()}};function A(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function j(e){if(null!==e&&(O=S(O,e)),e=O,O=null,e&&(E(e,P),O&&a("95"),c))throw e=s,c=!1,s=null,e}var I=Math.random().toString(36).slice(2),M="__reactInternalInstance$"+I,F="__reactEventHandlers$"+I;function L(e){if(e[M])return e[M];for(;!e[M];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[M]).tag||6===e.tag?e:null}function D(e){return!(e=e[M])||5!==e.tag&&6!==e.tag?null:e}function z(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function U(e){return e[F]||null}function k(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function R(e,t,n){(t=A(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function $(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=k(t);for(t=n.length;0<t--;)R(n[t],"captured",e);for(t=0;t<n.length;t++)R(n[t],"bubbled",e)}}function W(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=A(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function Q(e){e&&e.dispatchConfig.registrationName&&W(e._targetInst,null,e)}function X(e){E(e,$)}var Y=!("undefined"==typeof window||!window.document||!window.document.createElement);function K(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var q={animationend:K("Animation","AnimationEnd"),animationiteration:K("Animation","AnimationIteration"),animationstart:K("Animation","AnimationStart"),transitionend:K("Transition","TransitionEnd")},V={},Z={};function J(e){if(V[e])return V[e];if(!q[e])return e;var t,n=q[e];for(t in n)if(n.hasOwnProperty(t)&&t in Z)return V[e]=n[t];return e}Y&&(Z=document.createElement("div").style,"AnimationEvent"in window||(delete q.animationend.animation,delete q.animationiteration.animation,delete q.animationstart.animation),"TransitionEvent"in window||delete q.transitionend.transition);var G=J("animationend"),B=J("animationiteration"),H=J("animationstart"),ee=J("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,ie=null;function oe(){if(ie)return ie;var e,t,n=re,r=n.length,i="value"in ne?ne.value:ne.textContent,o=i.length;for(e=0;e<r&&n[e]===i[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===i[o-t];t++);return ie=i.slice(e,1<t?1-t:void 0)}function ae(){return!0}function ue(){return!1}function le(e,t,n,r){for(var i in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(i)&&((t=e[i])?this[i]=t(n):"target"===i?this.target=r:this[i]=n[i]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ae:ue,this.isPropagationStopped=ue,this}function ce(e,t,n,r){if(this.eventPool.length){var i=this.eventPool.pop();return this.call(i,e,t,n,r),i}return new this(e,t,n,r)}function se(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}i(le.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ae)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ae)},persist:function(){this.isPersistent=ae},isPersistent:ue,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ue,this._dispatchInstances=this._dispatchListeners=null}}),le.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},le.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(le);var pe=le.extend({data:null}),de=le.extend({data:null}),ve=[9,13,27,32],he=Y&&"CompositionEvent"in window,me=null;Y&&"documentMode"in document&&(me=document.documentMode);var ye=Y&&"TextEvent"in window&&!me,we=Y&&(!he||me&&8<me&&11>=me),ge=String.fromCharCode(32),Ce={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function Te(e,t){switch(e){case"keyup":return-1!==ve.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function be(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var _e=!1;var Se={eventTypes:Ce,extractEvents:function(e,t,n,r){var i=void 0,o=void 0;if(he)e:{switch(e){case"compositionstart":i=Ce.compositionStart;break e;case"compositionend":i=Ce.compositionEnd;break e;case"compositionupdate":i=Ce.compositionUpdate;break e}i=void 0}else _e?Te(e,n)&&(i=Ce.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=Ce.compositionStart);return i?(we&&"ko"!==n.locale&&(_e||i!==Ce.compositionStart?i===Ce.compositionEnd&&_e&&(o=oe()):(re="value"in(ne=r)?ne.value:ne.textContent,_e=!0)),i=pe.getPooled(i,t,n,r),o?i.data=o:null!==(o=be(n))&&(i.data=o),X(i),o=i):o=null,(e=ye?function(e,t){switch(e){case"compositionend":return be(t);case"keypress":return 32!==t.which?null:(xe=!0,ge);case"textInput":return(e=t.data)===ge&&xe?null:e;default:return null}}(e,n):function(e,t){if(_e)return"compositionend"===e||!he&&Te(e,t)?(e=oe(),ie=re=ne=null,_e=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return we&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=de.getPooled(Ce.beforeInput,t,n,r)).data=e,X(t)):t=null,null===o?t:null===t?o:[o,t]}},Ee=null,Oe=null,Pe=null;function Ne(e){if(e=T(e)){"function"!=typeof Ee&&a("280");var t=x(e.stateNode);Ee(e.stateNode,e.type,t)}}function Ae(e){Oe?Pe?Pe.push(e):Pe=[e]:Oe=e}function je(){if(Oe){var e=Oe,t=Pe;if(Pe=Oe=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function Ie(e,t){return e(t)}function Me(e,t,n){return e(t,n)}function Fe(){}var Le=!1;function De(e,t){if(Le)return e(t);Le=!0;try{return Ie(e,t)}finally{Le=!1,(null!==Oe||null!==Pe)&&(Fe(),je())}}var ze={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ue(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ze[e.type]:"textarea"===t}function ke(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Re(e){if(!Y)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function $e(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function We(e){e._valueTracker||(e._valueTracker=function(e){var t=$e(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var i=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Qe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=$e(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var Xe=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Ye=/^(.*)[\\\/]/,Ke="function"==typeof Symbol&&Symbol.for,qe=Ke?Symbol.for("react.element"):60103,Ve=Ke?Symbol.for("react.portal"):60106,Ze=Ke?Symbol.for("react.fragment"):60107,Je=Ke?Symbol.for("react.strict_mode"):60108,Ge=Ke?Symbol.for("react.profiler"):60114,Be=Ke?Symbol.for("react.provider"):60109,He=Ke?Symbol.for("react.context"):60110,et=Ke?Symbol.for("react.concurrent_mode"):60111,tt=Ke?Symbol.for("react.forward_ref"):60112,nt=Ke?Symbol.for("react.suspense"):60113,rt=Ke?Symbol.for("react.memo"):60115,it=Ke?Symbol.for("react.lazy"):60116,ot="function"==typeof Symbol&&Symbol.iterator;function at(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=ot&&e[ot]||e["@@iterator"])?e:null}function ut(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ze:return"Fragment";case Ve:return"Portal";case Ge:return"Profiler";case Je:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case He:return"Context.Consumer";case Be:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return ut(e.type);case it:if(e=1===e._status?e._result:null)return ut(e)}return null}function lt(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,i=e._debugSource,o=ut(e.type);n=null,r&&(n=ut(r.type)),r=o,o="",i?o=" (at "+i.fileName.replace(Ye,"")+":"+i.lineNumber+")":n&&(o=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+o}t+=n,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},pt={};function dt(e,t,n,r,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t}var vt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){vt[e]=new dt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];vt[t]=new dt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){vt[e]=new dt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){vt[e]=new dt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){vt[e]=new dt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){vt[e]=new dt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){vt[e]=new dt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){vt[e]=new dt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){vt[e]=new dt(e,5,!1,e.toLowerCase(),null)});var ht=/[\-:]([a-z])/g;function mt(e){return e[1].toUpperCase()}function yt(e,t,n,r){var i=vt.hasOwnProperty(t)?vt[t]:null;(null!==i?0===i.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!st.call(pt,e)||!st.call(ft,e)&&(ct.test(e)?pt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function wt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function gt(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ct(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=wt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xt(e,t){null!=(t=t.checked)&&yt(e,"checked",t,!1)}function Tt(e,t){xt(e,t);var n=wt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?_t(e,t.type,n):t.hasOwnProperty("defaultValue")&&_t(e,t.type,wt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function bt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function _t(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(ht,mt);vt[t]=new dt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(ht,mt);vt[t]=new dt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(ht,mt);vt[t]=new dt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),vt.tabIndex=new dt("tabIndex",1,!1,"tabindex",null);var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Et(e,t,n){return(e=le.getPooled(St.change,e,t,n)).type="change",Ae(n),X(e),e}var Ot=null,Pt=null;function Nt(e){j(e)}function At(e){if(Qe(z(e)))return e}function jt(e,t){if("change"===e)return t}var It=!1;function Mt(){Ot&&(Ot.detachEvent("onpropertychange",Ft),Pt=Ot=null)}function Ft(e){"value"===e.propertyName&&At(Pt)&&De(Nt,e=Et(Pt,e,ke(e)))}function Lt(e,t,n){"focus"===e?(Mt(),Pt=n,(Ot=t).attachEvent("onpropertychange",Ft)):"blur"===e&&Mt()}function Dt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return At(Pt)}function zt(e,t){if("click"===e)return At(t)}function Ut(e,t){if("input"===e||"change"===e)return At(t)}Y&&(It=Re("input")&&(!document.documentMode||9<document.documentMode));var kt={eventTypes:St,_isInputEventSupported:It,extractEvents:function(e,t,n,r){var i=t?z(t):window,o=void 0,a=void 0,u=i.nodeName&&i.nodeName.toLowerCase();if("select"===u||"input"===u&&"file"===i.type?o=jt:Ue(i)?It?o=Ut:(o=Dt,a=Lt):(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(o=zt),o&&(o=o(e,t)))return Et(o,n,r);a&&a(e,i,t),"blur"===e&&(e=i._wrapperState)&&e.controlled&&"number"===i.type&&_t(i,"number",i.value)}},Rt=le.extend({view:null,detail:null}),$t={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Wt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=$t[e])&&!!t[e]}function Qt(){return Wt}var Xt=0,Yt=0,Kt=!1,qt=!1,Vt=Rt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Xt;return Xt=e.screenX,Kt?"mousemove"===e.type?e.screenX-t:0:(Kt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Yt;return Yt=e.screenY,qt?"mousemove"===e.type?e.screenY-t:0:(qt=!0,0)}}),Zt=Vt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Jt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Gt={eventTypes:Jt,extractEvents:function(e,t,n,r){var i="mouseover"===e||"pointerover"===e,o="mouseout"===e||"pointerout"===e;if(i&&(n.relatedTarget||n.fromElement)||!o&&!i)return null;if(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,o?(o=t,t=(t=n.relatedTarget||n.toElement)?L(t):null):o=null,o===t)return null;var a=void 0,u=void 0,l=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(a=Vt,u=Jt.mouseLeave,l=Jt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Zt,u=Jt.pointerLeave,l=Jt.pointerEnter,c="pointer");var s=null==o?i:z(o);if(i=null==t?i:z(t),(e=a.getPooled(u,o,n,r)).type=c+"leave",e.target=s,e.relatedTarget=i,(n=a.getPooled(l,t,n,r)).type=c+"enter",n.target=i,n.relatedTarget=s,r=t,o&&r)e:{for(i=r,c=0,a=t=o;a;a=k(a))c++;for(a=0,l=i;l;l=k(l))a++;for(;0<c-a;)t=k(t),c--;for(;0<a-c;)i=k(i),a--;for(;c--;){if(t===i||t===i.alternate)break e;t=k(t),i=k(i)}t=null}else t=null;for(i=t,t=[];o&&o!==i&&(null===(c=o.alternate)||c!==i);)t.push(o),o=k(o);for(o=[];r&&r!==i&&(null===(c=r.alternate)||c!==i);)o.push(r),r=k(r);for(r=0;r<t.length;r++)W(t[r],"bubbled",e);for(r=o.length;0<r--;)W(o[r],"captured",n);return[e,n]}},Bt=Object.prototype.hasOwnProperty;function Ht(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function en(e,t){if(Ht(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Bt.call(t,n[r])||!Ht(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&a("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var i=n.return,o=i?i.alternate:null;if(!i||!o)break;if(i.child===o.child){for(var u=i.child;u;){if(u===n)return nn(i),e;if(u===r)return nn(i),t;u=u.sibling}a("188")}if(n.return!==r.return)n=i,r=o;else{u=!1;for(var l=i.child;l;){if(l===n){u=!0,n=i,r=o;break}if(l===r){u=!0,r=i,n=o;break}l=l.sibling}if(!u){for(l=o.child;l;){if(l===n){u=!0,n=o,r=i;break}if(l===r){u=!0,r=o,n=i;break}l=l.sibling}u||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=le.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=le.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),un=Rt.extend({relatedTarget:null});function ln(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=Rt.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=ln(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qt,charCode:function(e){return"keypress"===e.type?ln(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ln(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),pn=Vt.extend({dataTransfer:null}),dn=Rt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qt}),vn=le.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),hn=Vt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),mn=[["abort","abort"],[G,"animationEnd"],[B,"animationIteration"],[H,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],yn={},wn={};function gn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},yn[e]=t,wn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){gn(e,!0)}),mn.forEach(function(e){gn(e,!1)});var Cn={eventTypes:yn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=wn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var i=wn[e];if(!i)return null;switch(e){case"keypress":if(0===ln(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=un;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Vt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=dn;break;case G:case B:case H:e=on;break;case ee:e=vn;break;case"scroll":e=Rt;break;case"wheel":e=hn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Zt;break;default:e=le}return X(t=e.getPooled(i,t,n,r)),t}},xn=Cn.isInteractiveTopLevelEventType,Tn=[];function bn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=L(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var i=ke(e.nativeEvent);r=e.topLevelType;for(var o=e.nativeEvent,a=null,u=0;u<y.length;u++){var l=y[u];l&&(l=l.extractEvents(r,t,o,i))&&(a=S(a,l))}j(a)}}var _n=!0;function Sn(e,t){if(!t)return null;var n=(xn(e)?On:Pn).bind(null,e);t.addEventListener(e,n,!1)}function En(e,t){if(!t)return null;var n=(xn(e)?On:Pn).bind(null,e);t.addEventListener(e,n,!0)}function On(e,t){Me(Pn,e,t)}function Pn(e,t){if(_n){var n=ke(t);if(null===(n=L(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),Tn.length){var r=Tn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{De(bn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Tn.length&&Tn.push(e)}}}var Nn={},An=0,jn="_reactListenersID"+(""+Math.random()).slice(2);function In(e){return Object.prototype.hasOwnProperty.call(e,jn)||(e[jn]=An++,Nn[e[jn]]={}),Nn[e[jn]]}function Mn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Ln(e,t){var n,r=Fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Fn(r)}}function Dn(){for(var e=window,t=Mn();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=Mn(e.document)}return t}function zn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Un=Y&&"documentMode"in document&&11>=document.documentMode,kn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Rn=null,$n=null,Wn=null,Qn=!1;function Xn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Qn||null==Rn||Rn!==Mn(n)?null:("selectionStart"in(n=Rn)&&zn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Wn&&en(Wn,n)?null:(Wn=n,(e=le.getPooled(kn.select,$n,e,t)).type="select",e.target=Rn,X(e),e))}var Yn={eventTypes:kn,extractEvents:function(e,t,n,r){var i,o=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(i=!o)){e:{o=In(o),i=C.onSelect;for(var a=0;a<i.length;a++){var u=i[a];if(!o.hasOwnProperty(u)||!o[u]){o=!1;break e}}o=!0}i=!o}if(i)return null;switch(o=t?z(t):window,e){case"focus":(Ue(o)||"true"===o.contentEditable)&&(Rn=o,$n=t,Wn=null);break;case"blur":Wn=$n=Rn=null;break;case"mousedown":Qn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Qn=!1,Xn(n,r);case"selectionchange":if(Un)break;case"keydown":case"keyup":return Xn(n,r)}return null}};function Kn(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function qn(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+wt(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function Vn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Zn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:wt(n)}}function Jn(e,t){var n=wt(t.value),r=wt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Gn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}N.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=U,T=D,b=z,N.injectEventPluginsByName({SimpleEventPlugin:Cn,EnterLeaveEventPlugin:Gt,ChangeEventPlugin:kt,SelectEventPlugin:Yn,BeforeInputEventPlugin:Se});var Bn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Hn(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function er(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Hn(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var tr,nr=void 0,rr=(tr=function(e,t){if(e.namespaceURI!==Bn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return tr(e,t)})}:tr);function ir(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var or={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ar=["Webkit","ms","Moz","O"];function ur(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||or.hasOwnProperty(e)&&or[e]?(""+t).trim():t+"px"}function lr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=ur(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(or).forEach(function(e){ar.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),or[t]=or[e]})});var cr=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function sr(e,t){t&&(cr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pr(e,t){var n=In(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=C[t];for(var r=0;r<t.length;r++){var i=t[r];if(!n.hasOwnProperty(i)||!n[i]){switch(i){case"scroll":En("scroll",e);break;case"focus":case"blur":En("focus",e),En("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Re(i)&&En(i,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(i)&&Sn(i,e)}n[i]=!0}}}function dr(){}var vr=null,hr=null;function mr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var wr="function"==typeof setTimeout?setTimeout:void 0,gr="function"==typeof clearTimeout?clearTimeout:void 0;function Cr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function xr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Tr=[],br=-1;function _r(e){0>br||(e.current=Tr[br],Tr[br]=null,br--)}function Sr(e,t){Tr[++br]=e.current,e.current=t}var Er={},Or={current:Er},Pr={current:!1},Nr=Er;function Ar(e,t){var n=e.type.contextTypes;if(!n)return Er;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,o={};for(i in n)o[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function jr(e){return null!=(e=e.childContextTypes)}function Ir(e){_r(Pr),_r(Or)}function Mr(e){_r(Pr),_r(Or)}function Fr(e,t,n){Or.current!==Er&&a("168"),Sr(Or,t),Sr(Pr,n)}function Lr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())o in e||a("108",ut(t)||"Unknown",o);return i({},n,r)}function Dr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Er,Nr=Or.current,Sr(Or,t),Sr(Pr,Pr.current),!0}function zr(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Lr(e,t,Nr),r.__reactInternalMemoizedMergedChildContext=t,_r(Pr),_r(Or),Sr(Or,t)):_r(Pr),Sr(Pr,n)}var Ur=null,kr=null;function Rr(e){return function(t){try{return e(t)}catch(e){}}}function $r(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Wr(e,t,n,r){return new $r(e,t,n,r)}function Qr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Xr(e,t){var n=e.alternate;return null===n?((n=Wr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.firstContextDependency=e.firstContextDependency,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Yr(e,t,n,r,i,o){var u=2;if(r=e,"function"==typeof e)Qr(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case Ze:return Kr(n.children,i,o,t);case et:return qr(n,3|i,o,t);case Je:return qr(n,2|i,o,t);case Ge:return(e=Wr(12,n,t,4|i)).elementType=Ge,e.type=Ge,e.expirationTime=o,e;case nt:return(e=Wr(13,n,t,i)).elementType=nt,e.type=nt,e.expirationTime=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Be:u=10;break e;case He:u=9;break e;case tt:u=11;break e;case rt:u=14;break e;case it:u=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=Wr(u,n,t,i)).elementType=e,t.type=r,t.expirationTime=o,t}function Kr(e,t,n,r){return(e=Wr(7,e,r,t)).expirationTime=n,e}function qr(e,t,n,r){return e=Wr(8,e,r,t),t=0==(1&t)?Je:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Vr(e,t,n){return(e=Wr(6,e,null,t)).expirationTime=n,e}function Zr(e,t,n){return(t=Wr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Jr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),Hr(t,e)}function Gr(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),Hr(t,e)}function Br(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function Hr(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,i=t.earliestPendingTime,o=t.latestPingedTime;0===(i=0!==i?i:o)&&(0===e||r<e)&&(i=r),0!==(e=i)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=i,t.expirationTime=e}var ei=!1;function ti(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ni(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ri(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function ii(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function oi(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,i=null;null===r&&(r=e.updateQueue=ti(e.memoizedState))}else r=e.updateQueue,i=n.updateQueue,null===r?null===i?(r=e.updateQueue=ti(e.memoizedState),i=n.updateQueue=ti(n.memoizedState)):r=e.updateQueue=ni(i):null===i&&(i=n.updateQueue=ni(r));null===i||r===i?ii(r,t):null===r.lastUpdate||null===i.lastUpdate?(ii(r,t),ii(i,t)):(ii(r,t),i.lastUpdate=t)}function ai(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=ti(e.memoizedState):ui(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ui(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=ni(t)),t}function li(e,t,n,r,o,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,o):e;case 3:e.effectTag=-2049&e.effectTag|64;case 0:if(null==(o="function"==typeof(e=n.payload)?e.call(a,r,o):e))break;return i({},r,o);case 2:ei=!0}return r}function ci(e,t,n,r,i){ei=!1;for(var o=(t=ui(e,t)).baseState,a=null,u=0,l=t.firstUpdate,c=o;null!==l;){var s=l.expirationTime;s<i?(null===a&&(a=l,o=c),u<s&&(u=s)):(c=li(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=l:(t.lastEffect.nextEffect=l,t.lastEffect=l))),l=l.next}for(s=null,l=t.firstCapturedUpdate;null!==l;){var f=l.expirationTime;f<i?(null===s&&(s=l,null===a&&(o=c)),u<f&&(u=f)):(c=li(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=l:(t.lastCapturedEffect.nextEffect=l,t.lastCapturedEffect=l))),l=l.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(o=c),t.baseState=o,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=u,e.memoizedState=c}function si(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),fi(t.firstEffect,n),t.firstEffect=t.lastEffect=null,fi(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function fi(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function pi(e,t){return{value:e,source:t,stack:lt(t)}}var di={current:null},vi=null,hi=null,mi=null;function yi(e,t){var n=e.type._context;Sr(di,n._currentValue),n._currentValue=t}function wi(e){var t=di.current;_r(di),e.type._context._currentValue=t}function gi(e){vi=e,mi=hi=null,e.firstContextDependency=null}function Ci(e,t){return mi!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(mi=e,t=1073741823),t={context:e,observedBits:t,next:null},null===hi?(null===vi&&a("293"),vi.firstContextDependency=hi=t):hi=hi.next=t),e._currentValue}var xi={},Ti={current:xi},bi={current:xi},_i={current:xi};function Si(e){return e===xi&&a("174"),e}function Ei(e,t){Sr(_i,t),Sr(bi,e),Sr(Ti,xi);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:er(null,"");break;default:t=er(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}_r(Ti),Sr(Ti,t)}function Oi(e){_r(Ti),_r(bi),_r(_i)}function Pi(e){Si(_i.current);var t=Si(Ti.current),n=er(t,e.type);t!==n&&(Sr(bi,e),Sr(Ti,n))}function Ni(e){bi.current===e&&(_r(Ti),_r(bi))}function Ai(e,t){if(e&&e.defaultProps)for(var n in t=i({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ji=Xe.ReactCurrentOwner,Ii=(new r.Component).refs;function Mi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:i({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Fi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ea(),i=ri(r=Bo(r,e));i.payload=t,null!=n&&(i.callback=n),qo(),oi(e,i),ta(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ea(),i=ri(r=Bo(r,e));i.tag=1,i.payload=t,null!=n&&(i.callback=n),qo(),oi(e,i),ta(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ea(),r=ri(n=Bo(n,e));r.tag=2,null!=t&&(r.callback=t),qo(),oi(e,r),ta(e,n)}};function Li(e,t,n,r,i,o,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,a):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(i,o))}function Di(e,t,n){var r=!1,i=Er,o=t.contextType;return"object"==typeof o&&null!==o?o=ji.currentDispatcher.readContext(o):(i=jr(t)?Nr:Or.current,o=(r=null!=(r=t.contextTypes))?Ar(e,i):Er),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Fi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),t}function zi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Fi.enqueueReplaceState(t,t.state,null)}function Ui(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=Ii;var o=t.contextType;"object"==typeof o&&null!==o?i.context=ji.currentDispatcher.readContext(o):(o=jr(t)?Nr:Or.current,i.context=Ar(e,o)),null!==(o=e.updateQueue)&&(ci(e,o,n,i,r),i.state=e.memoizedState),"function"==typeof(o=t.getDerivedStateFromProps)&&(Mi(e,t,o,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&Fi.enqueueReplaceState(i,i.state,null),null!==(o=e.updateQueue)&&(ci(e,o,n,i,r),i.state=e.memoizedState)),"function"==typeof i.componentDidMount&&(e.effectTag|=4)}var ki=Array.isArray;function Ri(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&a("289"),r=n.stateNode),r||a("147",e);var i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:((t=function(e){var t=r.refs;t===Ii&&(t=r.refs={}),null===e?delete t[i]:t[i]=e})._stringRef=i,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function $i(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Wi(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t,n){return(e=Xr(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Vr(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=i(t,n.props)).ref=Ri(e,t,n),r.return=e,r):((r=Yr(n.type,n.key,n.props,null,e.mode,r)).ref=Ri(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Zr(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Kr(n,e.mode,r,o)).return=e,t):((t=i(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Vr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case qe:return(n=Yr(t.type,t.key,t.props,null,e.mode,n)).ref=Ri(e,null,t),n.return=e,n;case Ve:return(t=Zr(t,e.mode,n)).return=e,t}if(ki(t)||at(t))return(t=Kr(t,e.mode,n,null)).return=e,t;$i(e,t)}return null}function d(e,t,n,r){var i=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==i?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case qe:return n.key===i?n.type===Ze?f(e,t,n.props.children,r,i):c(e,t,n,r):null;case Ve:return n.key===i?s(e,t,n,r):null}if(ki(n)||at(n))return null!==i?null:f(e,t,n,r,null);$i(e,n)}return null}function v(e,t,n,r,i){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case qe:return e=e.get(null===r.key?n:r.key)||null,r.type===Ze?f(t,e,r.props.children,i,r.key):c(t,e,r,i);case Ve:return s(t,e=e.get(null===r.key?n:r.key)||null,r,i)}if(ki(r)||at(r))return f(t,e=e.get(n)||null,r,i,null);$i(t,r)}return null}function h(i,a,u,l){for(var c=null,s=null,f=a,h=a=0,m=null;null!==f&&h<u.length;h++){f.index>h?(m=f,f=null):m=f.sibling;var y=d(i,f,u[h],l);if(null===y){null===f&&(f=m);break}e&&f&&null===y.alternate&&t(i,f),a=o(y,a,h),null===s?c=y:s.sibling=y,s=y,f=m}if(h===u.length)return n(i,f),c;if(null===f){for(;h<u.length;h++)(f=p(i,u[h],l))&&(a=o(f,a,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(i,f);h<u.length;h++)(m=v(f,i,h,u[h],l))&&(e&&null!==m.alternate&&f.delete(null===m.key?h:m.key),a=o(m,a,h),null===s?c=m:s.sibling=m,s=m);return e&&f.forEach(function(e){return t(i,e)}),c}function m(i,u,l,c){var s=at(l);"function"!=typeof s&&a("150"),null==(l=s.call(l))&&a("151");for(var f=s=null,h=u,m=u=0,y=null,w=l.next();null!==h&&!w.done;m++,w=l.next()){h.index>m?(y=h,h=null):y=h.sibling;var g=d(i,h,w.value,c);if(null===g){h||(h=y);break}e&&h&&null===g.alternate&&t(i,h),u=o(g,u,m),null===f?s=g:f.sibling=g,f=g,h=y}if(w.done)return n(i,h),s;if(null===h){for(;!w.done;m++,w=l.next())null!==(w=p(i,w.value,c))&&(u=o(w,u,m),null===f?s=w:f.sibling=w,f=w);return s}for(h=r(i,h);!w.done;m++,w=l.next())null!==(w=v(h,i,m,w.value,c))&&(e&&null!==w.alternate&&h.delete(null===w.key?m:w.key),u=o(w,u,m),null===f?s=w:f.sibling=w,f=w);return e&&h.forEach(function(e){return t(i,e)}),s}return function(e,r,o,l){var c="object"==typeof o&&null!==o&&o.type===Ze&&null===o.key;c&&(o=o.props.children);var s="object"==typeof o&&null!==o;if(s)switch(o.$$typeof){case qe:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?o.type===Ze:c.elementType===o.type){n(e,c.sibling),(r=i(c,o.type===Ze?o.props.children:o.props)).ref=Ri(e,c,o),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}o.type===Ze?((r=Kr(o.props.children,e.mode,l,o.key)).return=e,e=r):((l=Yr(o.type,o.key,o.props,null,e.mode,l)).ref=Ri(e,r,o),l.return=e,e=l)}return u(e);case Ve:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=i(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Zr(o,e.mode,l)).return=e,e=r}return u(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=i(r,o)).return=e,e=r):(n(e,r),(r=Vr(o,e.mode,l)).return=e,e=r),u(e);if(ki(o))return h(e,r,o,l);if(at(o))return m(e,r,o,l);if(s&&$i(e,o),void 0===o&&!c)switch(e.tag){case 1:case 0:a("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var Qi=Wi(!0),Xi=Wi(!1),Yi=null,Ki=null,qi=!1;function Vi(e,t){var n=Wr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Zi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Ji(e){if(qi){var t=Ki;if(t){var n=t;if(!Zi(e,t)){if(!(t=Cr(n))||!Zi(e,t))return e.effectTag|=2,qi=!1,void(Yi=e);Vi(Yi,n)}Yi=e,Ki=xr(t)}else e.effectTag|=2,qi=!1,Yi=e}}function Gi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;Yi=e}function Bi(e){if(e!==Yi)return!1;if(!qi)return Gi(e),qi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yr(t,e.memoizedProps))for(t=Ki;t;)Vi(e,t),t=Cr(t);return Gi(e),Ki=Yi?Cr(e.stateNode):null,!0}function Hi(){Ki=Yi=null,qi=!1}var eo=Xe.ReactCurrentOwner;function to(e,t,n,r){t.child=null===e?Xi(t,null,n,r):Qi(t,e.child,n,r)}function no(e,t,n,r,i){n=n.render;var o=t.ref;return gi(t),r=n(r,o),t.effectTag|=1,to(e,t,r,i),t.child}function ro(e,t,n,r,i,o){if(null===e){var a=n.type;return"function"!=typeof a||Qr(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Yr(n.type,null,r,null,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,io(e,t,a,r,i,o))}return a=e.child,i<o&&(i=a.memoizedProps,(n=null!==(n=n.compare)?n:en)(i,r)&&e.ref===t.ref)?fo(e,t,o):(t.effectTag|=1,(e=Xr(a,r)).ref=t.ref,e.return=t,t.child=e)}function io(e,t,n,r,i,o){return null!==e&&i<o&&en(e.memoizedProps,r)&&e.ref===t.ref?fo(e,t,o):ao(e,t,n,r,o)}function oo(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ao(e,t,n,r,i){var o=jr(n)?Nr:Or.current;return o=Ar(t,o),gi(t),n=n(r,o),t.effectTag|=1,to(e,t,n,i),t.child}function uo(e,t,n,r,i){if(jr(n)){var o=!0;Dr(t)}else o=!1;if(gi(t),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Di(t,n,r),Ui(t,n,r,i),r=!0;else if(null===e){var a=t.stateNode,u=t.memoizedProps;a.props=u;var l=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=ji.currentDispatcher.readContext(c):c=Ar(t,c=jr(n)?Nr:Or.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==c)&&zi(t,a,r,c),ei=!1;var p=t.memoizedState;l=a.state=p;var d=t.updateQueue;null!==d&&(ci(t,d,r,a,i),l=t.memoizedState),u!==r||p!==l||Pr.current||ei?("function"==typeof s&&(Mi(t,n,s,r),l=t.memoizedState),(u=ei||Li(t,n,u,r,p,l,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),a.props=r,a.state=l,a.context=c,r=u):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,u=t.memoizedProps,a.props=t.type===t.elementType?u:Ai(t.type,u),l=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=ji.currentDispatcher.readContext(c):c=Ar(t,c=jr(n)?Nr:Or.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==c)&&zi(t,a,r,c),ei=!1,l=t.memoizedState,p=a.state=l,null!==(d=t.updateQueue)&&(ci(t,d,r,a,i),p=t.memoizedState),u!==r||l!==p||Pr.current||ei?("function"==typeof s&&(Mi(t,n,s,r),p=t.memoizedState),(s=ei||Li(t,n,u,r,l,p,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),a.props=r,a.state=p,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return lo(e,t,n,r,o,i)}function lo(e,t,n,r,i,o){oo(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return i&&zr(t,n,!1),fo(e,t,o);r=t.stateNode,eo.current=t;var u=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Qi(t,e.child,null,o),t.child=Qi(t,null,u,o)):to(e,t,u,o),t.memoizedState=r.state,i&&zr(t,n,!0),t.child}function co(e){var t=e.stateNode;t.pendingContext?Fr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Fr(0,t.context,!1),Ei(e,t.containerInfo)}function so(e,t,n){var r=t.mode,i=t.pendingProps,o=t.memoizedState;if(0==(64&t.effectTag)){o=null;var a=!1}else o={timedOutAt:null!==o?o.timedOutAt:0},a=!0,t.effectTag&=-65;if(null===e)if(a){var u=i.fallback;e=Kr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Kr(u,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=Xi(t,null,i.children,n);else null!==e.memoizedState?(u=(r=e.child).sibling,a?(n=i.fallback,i=Xr(r,r.pendingProps),0==(1&t.mode)&&((a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(i.child=a)),r=i.sibling=Xr(u,n,u.expirationTime),n=i,i.childExpirationTime=0,n.return=r.return=t):n=r=Qi(t,r.child,i.children,n)):(u=e.child,a?(a=i.fallback,(i=Kr(null,r,0,null)).child=u,0==(1&t.mode)&&(i.child=null!==t.memoizedState?t.child.child:t.child),(r=i.sibling=Kr(a,r,n,null)).effectTag|=2,n=i,i.childExpirationTime=0,n.return=r.return=t):r=n=Qi(t,u,i.children,n)),t.stateNode=e.stateNode;return t.memoizedState=o,t.child=n,r}function fo(e,t,n){if(null!==e&&(t.firstContextDependency=e.firstContextDependency),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=Xr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Xr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function po(e,t,n){var r=t.expirationTime;if(null!==e&&e.memoizedProps===t.pendingProps&&!Pr.current&&r<n){switch(t.tag){case 3:co(t),Hi();break;case 5:Pi(t);break;case 1:jr(t.type)&&Dr(t);break;case 4:Ei(t,t.stateNode.containerInfo);break;case 10:yi(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?so(e,t,n):null!==(t=fo(e,t,n))?t.sibling:null}return fo(e,t,n)}switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var i=Ar(t,Or.current);if(gi(t),i=r(e,i),t.effectTag|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof){if(t.tag=1,jr(r)){var o=!0;Dr(t)}else o=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null;var u=r.getDerivedStateFromProps;"function"==typeof u&&Mi(t,r,u,e),i.updater=Fi,t.stateNode=i,i._reactInternalFiber=t,Ui(t,r,e,n),t=lo(null,t,r,!0,o,n)}else t.tag=0,to(null,t,i,n),t=t.child;return t;case 16:switch(i=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),o=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:throw e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._result=t,t}}(i),t.type=e,i=t.tag=function(e){if("function"==typeof e)return Qr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),o=Ai(e,o),u=void 0,i){case 0:u=ao(null,t,e,o,n);break;case 1:u=uo(null,t,e,o,n);break;case 11:u=no(null,t,e,o,n);break;case 14:u=ro(null,t,e,Ai(e.type,o),r,n);break;default:a("306",e,"")}return u;case 0:return r=t.type,i=t.pendingProps,ao(e,t,r,i=t.elementType===r?i:Ai(r,i),n);case 1:return r=t.type,i=t.pendingProps,uo(e,t,r,i=t.elementType===r?i:Ai(r,i),n);case 3:return co(t),null===(r=t.updateQueue)&&a("282"),i=null!==(i=t.memoizedState)?i.element:null,ci(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===i?(Hi(),t=fo(e,t,n)):(i=t.stateNode,(i=(null===e||null===e.child)&&i.hydrate)&&(Ki=xr(t.stateNode.containerInfo),Yi=t,i=qi=!0),i?(t.effectTag|=2,t.child=Xi(t,null,r,n)):(to(e,t,r,n),Hi()),t=t.child),t;case 5:return Pi(t),null===e&&Ji(t),r=t.type,i=t.pendingProps,o=null!==e?e.memoizedProps:null,u=i.children,yr(r,i)?u=null:null!==o&&yr(r,o)&&(t.effectTag|=16),oo(e,t),1!==n&&1&t.mode&&i.hidden?(t.expirationTime=1,t=null):(to(e,t,u,n),t=t.child),t;case 6:return null===e&&Ji(t),null;case 13:return so(e,t,n);case 4:return Ei(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Qi(t,null,r,n):to(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,no(e,t,r,i=t.elementType===r?i:Ai(r,i),n);case 7:return to(e,t,t.pendingProps,n),t.child;case 8:case 12:return to(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,i=t.pendingProps,u=t.memoizedProps,yi(t,o=i.value),null!==u){var l=u.value;if(0===(o=l===o&&(0!==l||1/l==1/o)||l!=l&&o!=o?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,o):1073741823))){if(u.children===i.children&&!Pr.current){t=fo(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){if(null!==(l=u.firstContextDependency))do{if(l.context===r&&0!=(l.observedBits&o)){if(1===u.tag){var c=ri(n);c.tag=2,oi(u,c)}u.expirationTime<n&&(u.expirationTime=n),null!==(c=u.alternate)&&c.expirationTime<n&&(c.expirationTime=n);for(var s=u.return;null!==s;){if(c=s.alternate,s.childExpirationTime<n)s.childExpirationTime=n,null!==c&&c.childExpirationTime<n&&(c.childExpirationTime=n);else{if(!(null!==c&&c.childExpirationTime<n))break;c.childExpirationTime=n}s=s.return}}c=u.child,l=l.next}while(null!==l);else c=10===u.tag&&u.type===t.type?null:u.child;if(null!==c)c.return=u;else for(c=u;null!==c;){if(c===t){c=null;break}if(null!==(u=c.sibling)){u.return=c.return,c=u;break}c=c.return}u=c}}to(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=(o=t.pendingProps).children,gi(t),r=r(i=Ci(i,o.unstable_observedBits)),t.effectTag|=1,to(e,t,r,n),t.child;case 14:return o=Ai(i=t.type,t.pendingProps),ro(e,t,i,o=Ai(i.type,o),r,n);case 15:return io(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Ai(r,i),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,jr(r)?(e=!0,Dr(t)):e=!1,gi(t),Di(t,r,i),Ui(t,r,i,n),lo(null,t,r,!0,e,n);default:a("156")}}function vo(e){e.effectTag|=4}var ho=void 0,mo=void 0,yo=void 0,wo=void 0;ho=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},mo=function(){},yo=function(e,t,n,r,o){var a=e.memoizedProps;if(a!==r){var u=t.stateNode;switch(Si(Ti.current),e=null,n){case"input":a=gt(u,a),r=gt(u,r),e=[];break;case"option":a=Kn(u,a),r=Kn(u,r),e=[];break;case"select":a=i({},a,{value:void 0}),r=i({},r,{value:void 0}),e=[];break;case"textarea":a=Vn(u,a),r=Vn(u,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(u.onclick=dr)}sr(n,r),u=n=void 0;var l=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(u in c)c.hasOwnProperty(u)&&(l||(l={}),l[u]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(g.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(l||(l={}),l[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(l||(l={}),l[u]=s[u])}else l||(e||(e=[]),e.push(n,l)),l=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(g.hasOwnProperty(n)?(null!=s&&pr(o,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}l&&(e=e||[]).push("style",l),o=e,(t.updateQueue=o)&&vo(t)}},wo=function(e,t,n,r){n!==r&&vo(t)};var go="function"==typeof WeakSet?WeakSet:Set;function Co(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=lt(n)),null!==n&&ut(n.type),t=t.value,null!==e&&1===e.tag&&ut(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function xo(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Go(e,t)}else t.current=null}function To(e){switch("function"==typeof kr&&kr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(null!==r){var i=e;try{r()}catch(e){Go(i,e)}}n=n.next}while(n!==t)}break;case 1:if(xo(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Go(e,t)}break;case 5:xo(e);break;case 4:So(e)}}function bo(e){return 5===e.tag||3===e.tag||4===e.tag}function _o(e){e:{for(var t=e.return;null!==t;){if(bo(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(ir(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||bo(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var i=e;;){if(5===i.tag||6===i.tag)if(n)if(r){var o=t,u=i.stateNode,l=n;8===o.nodeType?o.parentNode.insertBefore(u,l):o.insertBefore(u,l)}else t.insertBefore(i.stateNode,n);else r?(u=t,l=i.stateNode,8===u.nodeType?(o=u.parentNode).insertBefore(l,u):(o=u).appendChild(l),null!=(u=u._reactRootContainer)||null!==o.onclick||(o.onclick=dr)):t.appendChild(i.stateNode);else if(4!==i.tag&&null!==i.child){i.child.return=i,i=i.child;continue}if(i===e)break;for(;null===i.sibling;){if(null===i.return||i.return===e)return;i=i.return}i.sibling.return=i.return,i=i.sibling}}function So(e){for(var t=e,n=!1,r=void 0,i=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,i=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,i=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var o=t,u=o;;)if(To(u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===o)break;for(;null===u.sibling;){if(null===u.return||u.return===o)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}i?(o=r,u=t.stateNode,8===o.nodeType?o.parentNode.removeChild(u):o.removeChild(u)):r.removeChild(t.stateNode)}else if(4===t.tag?(r=t.stateNode.containerInfo,i=!0):To(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Eo(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var i=t.type,o=t.updateQueue;t.updateQueue=null,null!==o&&function(e,t,n,r,i){e[F]=i,"input"===n&&"radio"===i.type&&null!=i.name&&xt(e,i),fr(n,r),r=fr(n,i);for(var o=0;o<t.length;o+=2){var a=t[o],u=t[o+1];"style"===a?lr(e,u):"dangerouslySetInnerHTML"===a?rr(e,u):"children"===a?ir(e,u):yt(e,a,u,r)}switch(n){case"input":Tt(e,i);break;case"textarea":Jn(e,i);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!i.multiple,null!=(n=i.value)?qn(e,!!i.multiple,n,!1):t!==!!i.multiple&&(null!=i.defaultValue?qn(e,!!i.multiple,i.defaultValue,!0):qn(e,!!i.multiple,i.multiple?[]:"",!1))}}(n,o,i,e,r)}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=Ea())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var i=n.memoizedProps.style;i=null!=i&&i.hasOwnProperty("display")?i.display:null,r.style.display=ur("display",i)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var u=t.stateNode;null===u&&(u=t.stateNode=new go),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Bo(t=Ea(),e),null!==(e=ea(e,t))&&(Jr(e,t),0!==(t=e.expirationTime)&&Oa(e,t))}.bind(null,t,e);u.has(e)||(u.add(e),e.then(n,n))})}break;case 17:break;default:a("163")}}var Oo="function"==typeof WeakMap?WeakMap:Map;function Po(e,t,n){(n=ri(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Da(r),Co(e,t)},n}function No(e,t,n){(n=ri(n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var i=t.value;n.payload=function(){return r(i)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Yo?Yo=new Set([this]):Yo.add(this));var n=t.value,i=t.stack;Co(e,t),this.componentDidCatch(n,{componentStack:null!==i?i:""})}),n}function Ao(e){switch(e.tag){case 1:jr(e.type)&&Ir();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Oi(),Mr(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-2049&t|64,e;case 5:return Ni(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 4:return Oi(),null;case 10:return wi(e),null;default:return null}}var jo={readContext:Ci},Io=Xe.ReactCurrentOwner,Mo=1073741822,Fo=0,Lo=!1,Do=null,zo=null,Uo=0,ko=-1,Ro=!1,$o=null,Wo=!1,Qo=null,Xo=null,Yo=null;function Ko(){if(null!==Do)for(var e=Do.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Ir();break;case 3:Oi(),Mr();break;case 5:Ni(t);break;case 4:Oi();break;case 10:wi(t)}e=e.return}zo=null,Uo=0,ko=-1,Ro=!1,Do=null}function qo(){null!==Xo&&(o.unstable_cancelCallback(Qo),Xo())}function Vo(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Do=e;e:{var o=t,u=Uo,l=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:jr(t.type)&&Ir();break;case 3:Oi(),Mr(),(l=t.stateNode).pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),null!==o&&null!==o.child||(Bi(t),t.effectTag&=-3),mo(t);break;case 5:Ni(t);var c=Si(_i.current);if(u=t.type,null!==o&&null!=t.stateNode)yo(o,t,u,l,c),o.ref!==t.ref&&(t.effectTag|=128);else if(l){var s=Si(Ti.current);if(Bi(t)){o=(l=t).stateNode;var f=l.type,p=l.memoizedProps,d=c;switch(o[M]=l,o[F]=p,u=void 0,c=f){case"iframe":case"object":Sn("load",o);break;case"video":case"audio":for(f=0;f<te.length;f++)Sn(te[f],o);break;case"source":Sn("error",o);break;case"img":case"image":case"link":Sn("error",o),Sn("load",o);break;case"form":Sn("reset",o),Sn("submit",o);break;case"details":Sn("toggle",o);break;case"input":Ct(o,p),Sn("invalid",o),pr(d,"onChange");break;case"select":o._wrapperState={wasMultiple:!!p.multiple},Sn("invalid",o),pr(d,"onChange");break;case"textarea":Zn(o,p),Sn("invalid",o),pr(d,"onChange")}for(u in sr(c,p),f=null,p)p.hasOwnProperty(u)&&(s=p[u],"children"===u?"string"==typeof s?o.textContent!==s&&(f=["children",s]):"number"==typeof s&&o.textContent!==""+s&&(f=["children",""+s]):g.hasOwnProperty(u)&&null!=s&&pr(d,u));switch(c){case"input":We(o),bt(o,p,!0);break;case"textarea":We(o),Gn(o);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(o.onclick=dr)}u=f,l.updateQueue=u,(l=null!==u)&&vo(t)}else{p=t,o=u,d=l,f=9===c.nodeType?c:c.ownerDocument,s===Bn.html&&(s=Hn(o)),s===Bn.html?"script"===o?((o=f.createElement("div")).innerHTML="<script><\/script>",f=o.removeChild(o.firstChild)):"string"==typeof d.is?f=f.createElement(o,{is:d.is}):(f=f.createElement(o),"select"===o&&d.multiple&&(f.multiple=!0)):f=f.createElementNS(s,o),(o=f)[M]=p,o[F]=l,ho(o,t,!1,!1),d=o;var v=c,h=fr(f=u,p=l);switch(f){case"iframe":case"object":Sn("load",d),c=p;break;case"video":case"audio":for(c=0;c<te.length;c++)Sn(te[c],d);c=p;break;case"source":Sn("error",d),c=p;break;case"img":case"image":case"link":Sn("error",d),Sn("load",d),c=p;break;case"form":Sn("reset",d),Sn("submit",d),c=p;break;case"details":Sn("toggle",d),c=p;break;case"input":Ct(d,p),c=gt(d,p),Sn("invalid",d),pr(v,"onChange");break;case"option":c=Kn(d,p);break;case"select":d._wrapperState={wasMultiple:!!p.multiple},c=i({},p,{value:void 0}),Sn("invalid",d),pr(v,"onChange");break;case"textarea":Zn(d,p),c=Vn(d,p),Sn("invalid",d),pr(v,"onChange");break;default:c=p}sr(f,c),s=void 0;var m=f,y=d,w=c;for(s in w)if(w.hasOwnProperty(s)){var C=w[s];"style"===s?lr(y,C):"dangerouslySetInnerHTML"===s?null!=(C=C?C.__html:void 0)&&rr(y,C):"children"===s?"string"==typeof C?("textarea"!==m||""!==C)&&ir(y,C):"number"==typeof C&&ir(y,""+C):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(g.hasOwnProperty(s)?null!=C&&pr(v,s):null!=C&&yt(y,s,C,h))}switch(f){case"input":We(d),bt(d,p,!1);break;case"textarea":We(d),Gn(d);break;case"option":null!=p.value&&d.setAttribute("value",""+wt(p.value));break;case"select":(c=d).multiple=!!p.multiple,null!=(d=p.value)?qn(c,!!p.multiple,d,!1):null!=p.defaultValue&&qn(c,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof c.onClick&&(d.onclick=dr)}(l=mr(u,l))&&vo(t),t.stateNode=o}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:o&&null!=t.stateNode?wo(o,t,o.memoizedProps,l):("string"!=typeof l&&(null===t.stateNode&&a("166")),o=Si(_i.current),Si(Ti.current),Bi(t)?(u=(l=t).stateNode,o=l.memoizedProps,u[M]=l,(l=u.nodeValue!==o)&&vo(t)):(u=t,(l=(9===o.nodeType?o:o.ownerDocument).createTextNode(l))[M]=t,u.stateNode=l));break;case 11:break;case 13:if(l=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=u,Do=t;break e}l=null!==l,u=null!==o&&null!==o.memoizedState,null!==o&&!l&&u&&(null!==(o=o.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=o,o.nextEffect=c):(t.firstEffect=t.lastEffect=o,o.nextEffect=null),o.effectTag=8)),(l!==u||0==(1&t.effectTag)&&l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Oi(),mo(t);break;case 10:wi(t);break;case 9:case 14:break;case 17:jr(t.type)&&Ir();break;default:a("156")}Do=null}if(t=e,1===Uo||1!==t.childExpirationTime){for(l=0,u=t.child;null!==u;)(o=u.expirationTime)>l&&(l=o),(c=u.childExpirationTime)>l&&(l=c),u=u.sibling;t.childExpirationTime=l}if(null!==Do)return Do;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Ao(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function Zo(e){var t=po(e.alternate,e,Uo);return e.memoizedProps=e.pendingProps,null===t&&(t=Vo(e)),Io.current=null,t}function Jo(e,t){Lo&&a("243"),qo(),Lo=!0,Io.currentDispatcher=jo;var n=e.nextExpirationTimeToWorkOn;n===Uo&&e===zo&&null!==Do||(Ko(),Uo=n,Do=Xr((zo=e).current,null),e.pendingCommitExpirationTime=0);for(var r=!1;;){try{if(t)for(;null!==Do&&!Aa();)Do=Zo(Do);else for(;null!==Do;)Do=Zo(Do)}catch(t){if(mi=hi=vi=null,null===Do)r=!0,Da(t);else{null===Do&&a("271");var i=Do,o=i.return;if(null!==o){e:{var u=e,l=o,c=i,s=t;if(o=Uo,c.effectTag|=1024,c.firstEffect=c.lastEffect=null,null!==s&&"object"==typeof s&&"function"==typeof s.then){var f=s;s=l;var p=-1,d=-1;do{if(13===s.tag){var v=s.alternate;if(null!==v&&null!==(v=v.memoizedState)){d=10*(1073741822-v.timedOutAt);break}"number"==typeof(v=s.pendingProps.maxDuration)&&(0>=v?p=0:(-1===p||v<p)&&(p=v))}s=s.return}while(null!==s);s=l;do{if((v=13===s.tag)&&(v=void 0!==s.memoizedProps.fallback&&null===s.memoizedState),v){if(null===(l=s.updateQueue)?s.updateQueue=new Set([f]):l.add(f),0==(1&s.mode)){s.effectTag|=64,c.effectTag&=-1957,1===c.tag&&(null===c.alternate?c.tag=17:((o=ri(1073741823)).tag=2,oi(c,o))),c.expirationTime=1073741823;break e}null===(c=u.pingCache)?(c=u.pingCache=new Oo,l=new Set,c.set(f,l)):void 0===(l=c.get(f))&&(l=new Set,c.set(f,l)),l.has(o)||(l.add(o),c=Ho.bind(null,u,f,o),f.then(c,c)),-1===p?u=1073741823:(-1===d&&(d=10*(1073741822-Br(u,o))-5e3),u=d+p),0<=u&&ko<u&&(ko=u),s.effectTag|=2048,s.expirationTime=o;break e}s=s.return}while(null!==s);s=Error((ut(c.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+lt(c))}Ro=!0,s=pi(s,c),u=l;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=o,ai(u,o=Po(u,s,o));break e;case 1:if(f=s,p=u.type,d=u.stateNode,0==(64&u.effectTag)&&("function"==typeof p.getDerivedStateFromError||null!==d&&"function"==typeof d.componentDidCatch&&(null===Yo||!Yo.has(d)))){u.effectTag|=2048,u.expirationTime=o,ai(u,o=No(u,f,o));break e}}u=u.return}while(null!==u)}Do=Vo(i);continue}r=!0,Da(t)}}break}if(Lo=!1,mi=hi=vi=Io.currentDispatcher=null,r)zo=null,e.finishedWork=null;else if(null!==Do)e.finishedWork=null;else{if(null===(r=e.current.alternate)&&a("281"),zo=null,Ro){if(i=e.latestPendingTime,o=e.latestSuspendedTime,u=e.latestPingedTime,0!==i&&i<n||0!==o&&o<n||0!==u&&u<n)return Gr(e,n),void Sa(e,r,n,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,n=e.nextExpirationTimeToWorkOn=n,t=e.expirationTime=1073741823,void Sa(e,r,n,t,-1)}t&&-1!==ko?(Gr(e,n),(t=10*(1073741822-Br(e,n)))<ko&&(ko=t),t=10*(1073741822-Ea()),t=ko-t,Sa(e,r,n,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=n,e.finishedWork=r)}}function Go(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Yo||!Yo.has(r)))return oi(n,e=No(n,e=pi(t,e),1073741823)),void ta(n,1073741823);break;case 3:return oi(n,e=Po(n,e=pi(t,e),1073741823)),void ta(n,1073741823)}n=n.return}3===e.tag&&(oi(e,n=Po(e,n=pi(t,e),1073741823)),ta(e,1073741823))}function Bo(e,t){return 0!==Fo?e=Fo:Lo?e=Wo?1073741823:Uo:1&t.mode?(e=ha?1073741822-10*(1+((1073741822-e+15)/10|0)):1073741822-25*(1+((1073741822-e+500)/25|0)),null!==zo&&e===Uo&&--e):e=1073741823,ha&&(0===sa||e<sa)&&(sa=e),e}function Ho(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==zo&&Uo===n?zo=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),Hr(n,e),0!==(n=e.expirationTime)&&Oa(e,n)))}function ea(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,i=null;if(null===r&&3===e.tag)i=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){i=r.stateNode;break}r=r.return}return i}function ta(e,t){null!==(e=ea(e,t))&&(!Lo&&0!==Uo&&t>Uo&&Ko(),Jr(e,t),Lo&&!Wo&&zo===e||Oa(e,e.expirationTime),xa>Ca&&(xa=0,a("185")))}function na(e,t,n,r,i){var o=Fo;Fo=1073741823;try{return e(t,n,r,i)}finally{Fo=o}}var ra=null,ia=null,oa=0,aa=void 0,ua=!1,la=null,ca=0,sa=0,fa=!1,pa=null,da=!1,va=!1,ha=!1,ma=null,ya=o.unstable_now(),wa=1073741822-(ya/10|0),ga=wa,Ca=50,xa=0,Ta=null;function ba(){wa=1073741822-((o.unstable_now()-ya)/10|0)}function _a(e,t){if(0!==oa){if(t<oa)return;null!==aa&&o.unstable_cancelCallback(aa)}oa=t,e=o.unstable_now()-ya,aa=o.unstable_scheduleCallback(ja,{timeout:10*(1073741822-t)-e})}function Sa(e,t,n,r,i){e.expirationTime=r,0!==i||Aa()?0<i&&(e.timeoutHandle=wr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,ba(),ga=wa,Ma(e,n)}.bind(null,e,t,n),i)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function Ea(){return ua?ga:(Pa(),0!==ca&&1!==ca||(ba(),ga=wa),ga)}function Oa(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===ia?(ra=ia=e,e.nextScheduledRoot=e):(ia=ia.nextScheduledRoot=e).nextScheduledRoot=ra):t>e.expirationTime&&(e.expirationTime=t),ua||(da?va&&(la=e,ca=1073741823,Fa(e,1073741823,!1)):1073741823===t?Ia(1073741823,!1):_a(e,t))}function Pa(){var e=0,t=null;if(null!==ia)for(var n=ia,r=ra;null!==r;){var i=r.expirationTime;if(0===i){if((null===n||null===ia)&&a("244"),r===r.nextScheduledRoot){ra=ia=r.nextScheduledRoot=null;break}if(r===ra)ra=i=r.nextScheduledRoot,ia.nextScheduledRoot=i,r.nextScheduledRoot=null;else{if(r===ia){(ia=n).nextScheduledRoot=ra,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(i>e&&(e=i,t=r),r===ia)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}la=t,ca=e}var Na=!1;function Aa(){return!!Na||!!o.unstable_shouldYield()&&(Na=!0)}function ja(){try{if(!Aa()&&null!==ra){ba();var e=ra;do{var t=e.expirationTime;0!==t&&wa<=t&&(e.nextExpirationTimeToWorkOn=wa),e=e.nextScheduledRoot}while(e!==ra)}Ia(0,!0)}finally{Na=!1}}function Ia(e,t){if(Pa(),t)for(ba(),ga=wa;null!==la&&0!==ca&&e<=ca&&!(Na&&wa>ca);)Fa(la,ca,wa>ca),Pa(),ba(),ga=wa;else for(;null!==la&&0!==ca&&e<=ca;)Fa(la,ca,!1),Pa();if(t&&(oa=0,aa=null),0!==ca&&_a(la,ca),xa=0,Ta=null,null!==ma)for(e=ma,ma=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){fa||(fa=!0,pa=e)}}if(fa)throw e=pa,pa=null,fa=!1,e}function Ma(e,t){ua&&a("253"),la=e,ca=t,Fa(e,t,!1),Ia(1073741823,!1)}function Fa(e,t,n){if(ua&&a("245"),ua=!0,n){var r=e.finishedWork;null!==r?La(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),Jo(e,n),null!==(r=e.finishedWork)&&(Aa()?e.finishedWork=r:La(e,r,t)))}else null!==(r=e.finishedWork)?La(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),Jo(e,n),null!==(r=e.finishedWork)&&La(e,r,t));ua=!1}function La(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===ma?ma=[r]:ma.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===Ta?xa++:(Ta=e,xa=0),Wo=Lo=!0,e.current===t&&a("177"),0===(n=e.pendingCommitExpirationTime)&&a("261"),e.pendingCommitExpirationTime=0,r=t.expirationTime;var i=t.childExpirationTime;if(r=i>r?i:r,e.didError=!1,0===r?(e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0):(r<e.latestPingedTime&&(e.latestPingedTime=0),0!==(i=e.latestPendingTime)&&(i>r?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>r&&(e.earliestPendingTime=e.latestPendingTime)),0===(i=e.earliestSuspendedTime)?Jr(e,r):r<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Jr(e,r)):r>i&&Jr(e,r)),Hr(0,e),Io.current=null,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,vr=_n,zn(i=Dn())){if("selectionStart"in i)var o={start:i.selectionStart,end:i.selectionEnd};else e:{var u=(o=(o=i.ownerDocument)&&o.defaultView||window).getSelection&&o.getSelection();if(u&&0!==u.rangeCount){o=u.anchorNode;var l=u.anchorOffset,c=u.focusNode;u=u.focusOffset;try{o.nodeType,c.nodeType}catch(e){o=null;break e}var s=0,f=-1,p=-1,d=0,v=0,h=i,m=null;t:for(;;){for(var y;h!==o||0!==l&&3!==h.nodeType||(f=s+l),h!==c||0!==u&&3!==h.nodeType||(p=s+u),3===h.nodeType&&(s+=h.nodeValue.length),null!==(y=h.firstChild);)m=h,h=y;for(;;){if(h===i)break t;if(m===o&&++d===l&&(f=s),m===c&&++v===u&&(p=s),null!==(y=h.nextSibling))break;m=(h=m).parentNode}h=y}o=-1===f||-1===p?null:{start:f,end:p}}else o=null}o=o||{start:0,end:0}}else o=null;for(hr={focusedElem:i,selectionRange:o},_n=!1,$o=r;null!==$o;){i=!1,o=void 0;try{for(;null!==$o;){if(256&$o.effectTag)e:{var w=$o.alternate;switch((l=$o).tag){case 0:case 11:case 15:break e;case 1:if(256&l.effectTag&&null!==w){var g=w.memoizedProps,C=w.memoizedState,x=l.stateNode,T=x.getSnapshotBeforeUpdate(l.elementType===l.type?g:Ai(l.type,g),C);x.__reactInternalSnapshotBeforeUpdate=T}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}$o=$o.nextEffect}}catch(e){i=!0,o=e}i&&(null===$o&&a("178"),Go($o,o),null!==$o&&($o=$o.nextEffect))}for($o=r;null!==$o;){w=!1,g=void 0;try{for(;null!==$o;){var b=$o.effectTag;if(16&b&&ir($o.stateNode,""),128&b){var _=$o.alternate;if(null!==_){var S=_.ref;null!==S&&("function"==typeof S?S(null):S.current=null)}}switch(14&b){case 2:_o($o),$o.effectTag&=-3;break;case 6:_o($o),$o.effectTag&=-3,Eo($o.alternate,$o);break;case 4:Eo($o.alternate,$o);break;case 8:So(C=$o),C.return=null,C.child=null,C.memoizedState=null,C.updateQueue=null;var E=C.alternate;null!==E&&(E.return=null,E.child=null,E.memoizedState=null,E.updateQueue=null)}$o=$o.nextEffect}}catch(e){w=!0,g=e}w&&(null===$o&&a("178"),Go($o,g),null!==$o&&($o=$o.nextEffect))}if(S=hr,_=Dn(),b=S.focusedElem,w=S.selectionRange,_!==b&&b&&b.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(b.ownerDocument.documentElement,b)){null!==w&&zn(b)&&(_=w.start,void 0===(S=w.end)&&(S=_),"selectionStart"in b?(b.selectionStart=_,b.selectionEnd=Math.min(S,b.value.length)):(S=(_=b.ownerDocument||document)&&_.defaultView||window).getSelection&&(S=S.getSelection(),g=b.textContent.length,E=Math.min(w.start,g),w=void 0===w.end?E:Math.min(w.end,g),!S.extend&&E>w&&(g=w,w=E,E=g),g=Ln(b,E),C=Ln(b,w),g&&C&&(1!==S.rangeCount||S.anchorNode!==g.node||S.anchorOffset!==g.offset||S.focusNode!==C.node||S.focusOffset!==C.offset)&&((_=_.createRange()).setStart(g.node,g.offset),S.removeAllRanges(),E>w?(S.addRange(_),S.extend(C.node,C.offset)):(_.setEnd(C.node,C.offset),S.addRange(_))))),_=[];for(S=b;S=S.parentNode;)1===S.nodeType&&_.push({element:S,left:S.scrollLeft,top:S.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<_.length;b++)(S=_[b]).element.scrollLeft=S.left,S.element.scrollTop=S.top}for(hr=null,_n=!!vr,vr=null,e.current=t,$o=r;null!==$o;){r=!1,b=void 0;try{for(_=n;null!==$o;){var O=$o.effectTag;if(36&O){var P=$o.alternate;switch(E=_,(S=$o).tag){case 0:case 11:case 15:break;case 1:var N=S.stateNode;if(4&S.effectTag)if(null===P)N.componentDidMount();else{var A=S.elementType===S.type?P.memoizedProps:Ai(S.type,P.memoizedProps);N.componentDidUpdate(A,P.memoizedState,N.__reactInternalSnapshotBeforeUpdate)}var j=S.updateQueue;null!==j&&si(0,j,N);break;case 3:var I=S.updateQueue;if(null!==I){if(w=null,null!==S.child)switch(S.child.tag){case 5:w=S.child.stateNode;break;case 1:w=S.child.stateNode}si(0,I,w)}break;case 5:var M=S.stateNode;null===P&&4&S.effectTag&&mr(S.type,S.memoizedProps)&&M.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}if(128&O){var F=$o.ref;if(null!==F){var L=$o.stateNode;switch($o.tag){case 5:var D=L;break;default:D=L}"function"==typeof F?F(D):F.current=D}}$o=$o.nextEffect}}catch(e){r=!0,b=e}r&&(null===$o&&a("178"),Go($o,b),null!==$o&&($o=$o.nextEffect))}Lo=Wo=!1,"function"==typeof Ur&&Ur(t.stateNode),O=t.expirationTime,0===(t=(t=t.childExpirationTime)>O?t:O)&&(Yo=null),e.expirationTime=t,e.finishedWork=null}function Da(e){null===la&&a("246"),la.expirationTime=0,fa||(fa=!0,pa=e)}function za(e,t){var n=da;da=!0;try{return e(t)}finally{(da=n)||ua||Ia(1073741823,!1)}}function Ua(e,t){if(da&&!va){va=!0;try{return e(t)}finally{va=!1}}return e(t)}function ka(e,t,n){if(ha)return e(t,n);da||ua||0===sa||(Ia(sa,!1),sa=0);var r=ha,i=da;da=ha=!0;try{return e(t,n)}finally{ha=r,(da=i)||ua||Ia(1073741823,!1)}}function Ra(e,t,n,r,i){var o=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||a("170");var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(jr(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);a("171"),u=void 0}if(1===n.tag){var l=n.type;if(jr(l)){n=Lr(n,l,u);break e}}n=u}else n=Er;return null===t.context?t.context=n:t.pendingContext=n,t=i,(i=ri(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(i.callback=t),qo(),oi(o,i),ta(o,r),r}function $a(e,t,n,r){var i=t.current;return Ra(e,t,n,i=Bo(Ea(),i),r)}function Wa(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Qa(e){var t=1073741822-25*(1+((1073741822-Ea()+500)/25|0));t>=Mo&&(t=Mo-1),this._expirationTime=Mo=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Xa(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Ya(e,t,n){e={current:t=Wr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Ka(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function qa(e,t,n,r,i){Ka(n)||a("200");var o=n._reactRootContainer;if(o){if("function"==typeof i){var u=i;i=function(){var e=Wa(o._internalRoot);u.call(e)}}null!=e?o.legacy_renderSubtreeIntoContainer(e,t,i):o.render(t,i)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ya(e,!1,t)}(n,r),"function"==typeof i){var l=i;i=function(){var e=Wa(o._internalRoot);l.call(e)}}Ua(function(){null!=e?o.legacy_renderSubtreeIntoContainer(e,t,i):o.render(t,i)})}return Wa(o._internalRoot)}function Va(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Ka(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ve,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ee=function(e,t,n){switch(t){case"input":if(Tt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=U(r);i||a("90"),Qe(r),Tt(r,i)}}}break;case"textarea":Jn(e,n);break;case"select":null!=(t=n.value)&&qn(e,!!n.multiple,t,!1)}},Qa.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Xa;return Ra(e,t,null,n,r._onCommit),r},Qa.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Qa.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,i=t;i!==this;)r=i,i=i._next;null===r&&a("251"),r._next=i._next,this._next=t,e.firstBatch=this}this._defer=!1,Ma(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Qa.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Xa.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Xa.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},Ya.prototype.render=function(e,t){var n=this._internalRoot,r=new Xa;return null!==(t=void 0===t?null:t)&&r.then(t),$a(e,n,null,r._onCommit),r},Ya.prototype.unmount=function(e){var t=this._internalRoot,n=new Xa;return null!==(e=void 0===e?null:e)&&n.then(e),$a(null,t,null,n._onCommit),n},Ya.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,i=new Xa;return null!==(n=void 0===n?null:n)&&i.then(n),$a(t,r,e,i._onCommit),i},Ya.prototype.createBatch=function(){var e=new Qa(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ie=za,Me=ka,Fe=function(){ua||0===sa||(Ia(sa,!1),sa=0)};var Za={createPortal:Va,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return qa(null,e,t,!0,n)},render:function(e,t,n){return qa(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&a("38"),qa(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Ka(e)||a("40"),!!e._reactRootContainer&&(Ua(function(){qa(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Va.apply(void 0,arguments)},unstable_batchedUpdates:za,unstable_interactiveUpdates:ka,flushSync:function(e,t){ua&&a("187");var n=da;da=!0;try{return na(e,t)}finally{da=n,Ia(1073741823,!1)}},unstable_createRoot:function(e,t){return Ka(e)||a("299","unstable_createRoot"),new Ya(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=da;da=!0;try{na(e)}finally{(da=t)||ua||Ia(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[D,z,U,N.injectEventPluginsByName,w,X,function(e){E(e,Q)},Ae,je,Pn,j]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Ur=Rr(function(e){return t.onCommitFiberRoot(n,e)}),kr=Rr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(i({},e,{overrideProps:null,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:L,bundleType:0,version:"16.7.0",rendererPackageName:"react-dom"});var Ja={default:Za},Ga=Ja&&Za||Ja;e.exports=Ga.default||Ga},function(e,t,n){"use strict";e.exports=n(96)},function(e,t,n){"use strict";(function(e){
/** @license React v0.12.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,i=3,o=-1,a=-1,u=!1,l=!1;function c(){if(!u){var e=n.expirationTime;l?b():l=!0,T(p,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var o=i,u=a;i=e,a=t;try{var l=r()}finally{i=o,a=u}if("function"==typeof l)if(l={callback:l,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=l.next=l.previous=l;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=l,c()),(t=r.previous).next=r.previous=l,l.next=r,l.previous=t}}function f(){if(-1===o&&null!==n&&1===n.priorityLevel){u=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{u=!1,null!==n?c():l=!1}}}function p(e){u=!0;var i=r;r=e;try{if(e)for(;null!==n;){var o=t.unstable_now();if(!(n.expirationTime<=o))break;do{s()}while(null!==n&&n.expirationTime<=o)}else if(null!==n)do{s()}while(null!==n&&!_())}finally{u=!1,r=i,null!==n?c():l=!1,f()}}var d,v,h=Date,m="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,w="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,g="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function C(e){d=w(function(t){y(v),e(t)}),v=m(function(){g(d),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return h.now()};var T,b,_,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var E=S._schedMock;T=E[0],b=E[1],_=E[2],t.unstable_now=E[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var O=null,P=function(e){if(null!==O)try{O(e)}finally{O=null}};T=function(e){null!==O?setTimeout(T,0,e):(O=e,setTimeout(P,0,!1))},b=function(){O=null},_=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof w&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var N=null,A=!1,j=-1,I=!1,M=!1,F=0,L=33,D=33;_=function(){return F<=t.unstable_now()};var z=new MessageChannel,U=z.port2;z.port1.onmessage=function(){A=!1;var e=N,n=j;N=null,j=-1;var r=t.unstable_now(),i=!1;if(0>=F-r){if(!(-1!==n&&n<=r))return I||(I=!0,C(k)),N=e,void(j=n);i=!0}if(null!==e){M=!0;try{e(i)}finally{M=!1}}};var k=function(e){if(null!==N){C(k);var t=e-F+D;t<D&&L<D?(8>t&&(t=8),D=t<L?L:t):L=t,F=e+D,A||(A=!0,U.postMessage(void 0))}else I=!1};T=function(e,t){N=e,j=t,M||0>t?U.postMessage(void 0):I||(I=!0,C(k))},b=function(){N=null,A=!1,j=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=i,a=o;i=e,o=t.unstable_now();try{return n()}finally{i=r,o=a,f()}},t.unstable_scheduleCallback=function(e,r){var a=-1!==o?o:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=a+r.timeout;else switch(i){case 1:r=a+-1;break;case 2:r=a+250;break;case 5:r=a+1073741823;break;case 4:r=a+1e4;break;default:r=a+5e3}if(e={callback:e,priorityLevel:i,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{a=null;var u=n;do{if(u.expirationTime>r){a=u;break}u=u.next}while(u!==n);null===a?a=n:a===n&&(n=e,c()),(r=a.previous).next=a.previous=e,e.next=a,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=i;return function(){var r=i,a=o;i=n,o=t.unstable_now();try{return e.apply(this,arguments)}finally{i=r,o=a,f()}}},t.unstable_getCurrentPriorityLevel=function(){return i},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<a||_())},t.unstable_continueExecution=function(){null!==n&&c()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(51))},function(e,t,n){"use strict";var r=n(98);function i(){}e.exports=function(){function e(e,t,n,i,o,a){if(a!==r){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=i,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){var n,r,i=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function u(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var l,c=[],s=!1,f=-1;function p(){s&&l&&(s=!1,l.length?c=l.concat(c):f=-1,c.length&&d())}function d(){if(!s){var e=u(p);s=!0;for(var t=c.length;t;){for(l=c,c=[];++f<t;)l&&l[f].run();f=-1,t=c.length}l=null,s=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function v(e,t){this.fun=e,this.array=t}function h(){}i.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new v(e,t)),1!==c.length||s||u(d)},v.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=h,i.addListener=h,i.once=h,i.off=h,i.removeListener=h,i.removeAllListeners=h,i.emit=h,i.prependListener=h,i.prependOnceListener=h,i.listeners=function(e){return[]},i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(e,t,n){"use strict";
/** @license React v16.7.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,i=r?Symbol.for("react.element"):60103,o=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,u=r?Symbol.for("react.strict_mode"):60108,l=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,p=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,v=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.memo"):60115,m=r?Symbol.for("react.lazy"):60116;function y(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case i:switch(e=e.type){case f:case p:case a:case l:case u:case v:return e;default:switch(e=e&&e.$$typeof){case s:case d:case c:return e;default:return t}}case m:case h:case o:return t}}}function w(e){return y(e)===p}t.typeOf=y,t.AsyncMode=f,t.ConcurrentMode=p,t.ContextConsumer=s,t.ContextProvider=c,t.Element=i,t.ForwardRef=d,t.Fragment=a,t.Lazy=m,t.Memo=h,t.Portal=o,t.Profiler=l,t.StrictMode=u,t.Suspense=v,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===p||e===l||e===u||e===v||"object"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===h||e.$$typeof===c||e.$$typeof===s||e.$$typeof===d)},t.isAsyncMode=function(e){return w(e)||y(e)===f},t.isConcurrentMode=w,t.isContextConsumer=function(e){return y(e)===s},t.isContextProvider=function(e){return y(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===i},t.isForwardRef=function(e){return y(e)===d},t.isFragment=function(e){return y(e)===a},t.isLazy=function(e){return y(e)===m},t.isMemo=function(e){return y(e)===h},t.isPortal=function(e){return y(e)===o},t.isProfiler=function(e){return y(e)===l},t.isStrictMode=function(e){return y(e)===u},t.isSuspense=function(e){return y(e)===v}},function(e,t,n){"use strict";var r=function(){};e.exports=r},function(e,t,n){"use strict";t.__esModule=!0;var r=n(0),i=(a(r),a(n(2))),o=a(n(103));a(n(104));function a(e){return e&&e.__esModule?e:{default:e}}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var s=1073741823;t.default=function(e,t){var n,a,f="__create-react-context-"+(0,o.default)()+"__",p=function(e){function n(){var t,r,i,o;u(this,n);for(var a=arguments.length,c=Array(a),s=0;s<a;s++)c[s]=arguments[s];return t=r=l(this,e.call.apply(e,[this].concat(c))),r.emitter=(i=r.props.value,o=[],{on:function(e){o.push(e)},off:function(e){o=o.filter(function(t){return t!==e})},get:function(){return i},set:function(e,t){i=e,o.forEach(function(e){return e(i,t)})}}),l(r,t)}return c(n,e),n.prototype.getChildContext=function(){var e;return(e={})[f]=this.emitter,e},n.prototype.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n=this.props.value,r=e.value,i=void 0;((o=n)===(a=r)?0!==o||1/o==1/a:o!=o&&a!=a)?i=0:(i="function"==typeof t?t(n,r):s,0!=(i|=0)&&this.emitter.set(e.value,i))}var o,a},n.prototype.render=function(){return this.props.children},n}(r.Component);p.childContextTypes=((n={})[f]=i.default.object.isRequired,n);var d=function(t){function n(){var e,r;u(this,n);for(var i=arguments.length,o=Array(i),a=0;a<i;a++)o[a]=arguments[a];return e=r=l(this,t.call.apply(t,[this].concat(o))),r.state={value:r.getValue()},r.onUpdate=function(e,t){0!=((0|r.observedBits)&t)&&r.setState({value:r.getValue()})},l(r,e)}return c(n,t),n.prototype.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?s:t},n.prototype.componentDidMount=function(){this.context[f]&&this.context[f].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?s:e},n.prototype.componentWillUnmount=function(){this.context[f]&&this.context[f].off(this.onUpdate)},n.prototype.getValue=function(){return this.context[f]?this.context[f].get():e},n.prototype.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return d.contextTypes=((a={})[f]=i.default.object,a),{Provider:p,Consumer:d}},e.exports=t.default},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(51))},function(e,t,n){"use strict";var r=n(105);e.exports=r},function(e,t,n){"use strict";function r(e){return function(){return e}}var i=function(){};i.thatReturns=r,i.thatReturnsFalse=r(!1),i.thatReturnsTrue=r(!0),i.thatReturnsNull=r(null),i.thatReturnsThis=function(){return this},i.thatReturnsArgument=function(e){return e},e.exports=i},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),o=n(24),a=n.n(o),u=n(2),l=n.n(u),c=n(36),s=n(10),f=n(3),p=n(17),d=f.c.div.withConfig({displayName:"Loader__Overlay",componentId:"sc-1kdbz4n-0"})(["",""],function(e){return e.backgroundColor&&"\n  background-color: ".concat(e.backgroundColor,";\n    position:absolute;\n    top:0;\n    left:0;\n    right:0;\n    bottom:0;\n  ")}),v=f.c.div.withConfig({displayName:"Loader__BounceCircle",componentId:"sc-1kdbz4n-1"})(["width:",";height:",";position:absolute;left:50%;top:50%;"],function(e){return e.size},function(e){return e.size}),h=Object(f.d)(["0%{transform:scale(0.0);}50%{transform:scale(1.0);}100%{transform:scale(0.0);}"]),m=f.c.div.withConfig({displayName:"Loader__Shared",componentId:"sc-1kdbz4n-2"})(["width:100%;height:100%;border-radius:50%;background-color:",";opacity:0.6;position:absolute;top:0;left:0;animation:"," 3s infinite ease-in-out;"],function(e){return e.color},h),y=Object(f.c)(m).withConfig({displayName:"Loader__FirstCircle",componentId:"sc-1kdbz4n-3"})([""]),w=Object(f.c)(m).withConfig({displayName:"Loader__SecondCircle",componentId:"sc-1kdbz4n-4"})(["animation-delay:-1s;"]),g=function(e){return i.a.createElement(d,{backgroundColor:e.backgroundColor},i.a.createElement(v,{size:e.size},i.a.createElement(y,{color:e.color}),i.a.createElement(w,{color:e.color})))};g.propTypes={backgroundColor:l.a.string,size:l.a.string,color:l.a.string},g.defaultProps={backgroundColor:void 0,size:"40px",color:"black"};var C=g,x=n(54);function T(){return(T=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(e,t){return!t||"object"!==b(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function O(e,t){return(O=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  @import url('https://fonts.googleapis.com/css?family=Roboto');\n  html,body {\n    box-sizing: border-box;\n    margin: 0;\n    font-family:  'Roboto', sans-serif; \n    background: ",";\n  }\n  img {\n    display: block;\n  }\n"]);return P=function(){return e},e}var N,A,j,I=Object(r.lazy)(function(){return n.e(2).then(n.bind(null,115))}),M=Object(r.lazy)(function(){return Promise.all([n.e(0),n.e(3)]).then(n.bind(null,116))}),F=Object(r.lazy)(function(){return n.e(0).then(n.bind(null,113))}),L=Object(f.a)(P(),p.b.lightGrey),D=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),S(this,E(t).apply(this,arguments))}var n,o,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&O(e,t)}(t,r["Component"]),n=t,(o=[{key:"render",value:function(){return i.a.createElement(r.Fragment,null,this.props.children(x))}}])&&_(n.prototype,o),a&&_(n,a),t}();N=D,A="propTypes",j={children:l.a.func},A in N?Object.defineProperty(N,A,{value:j,enumerable:!0,configurable:!0,writable:!0}):N[A]=j;var z=function(){return i.a.createElement(r.Fragment,null,i.a.createElement(D,null,function(e){return i.a.createElement(c.a,null,i.a.createElement(r.Suspense,{fallback:i.a.createElement(C,{backgroundColor:p.b.black,size:"60px",color:p.b.white})},i.a.createElement(s.c,null,i.a.createElement(s.a,{exact:!0,path:"/",component:function(t){return i.a.createElement(I,T({},t,{data:e.games}))}}),i.a.createElement(s.a,{path:"/:gameName",component:function(t){return i.a.createElement(M,T({},t,{data:e.games}))}}),i.a.createElement(s.a,{component:F}))))}),i.a.createElement(L,null))},U=n(35),k=n(58),R=n(37);function $(e){return($="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function W(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Q(e){return(Q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function X(e,t){return(X=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Y(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var K=function(e){function t(){var e,n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,(e=!(r=Q(t).call(this))||"object"!==$(r)&&"function"!=typeof r?Y(n):r).state={currentLanguage:"en",translationFile:U},e.handleChangeLanguage=e.handleChangeLanguage.bind(Y(Y(e))),e.translate=e.translate.bind(Y(Y(e))),e}var n,o,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&X(e,t)}(t,r["Component"]),n=t,a=[{key:"getTranslationFile",value:function(e){switch(e){case"fr":return k;case"en":default:return U}}}],(o=[{key:"handleChangeLanguage",value:function(e){var n=t.getTranslationFile(e);this.setState({currentLanguage:e,translationFile:n})}},{key:"translate",value:function(e){var t=this.state.translationFile;return t[e]?t[e]:"#".concat(e)}},{key:"render",value:function(){var e=this.props.children,t=this.state.currentLanguage;return i.a.createElement(R.b,{value:{currentLanguage:t,changeLanguage:this.handleChangeLanguage,_:this.translate}},e)}}])&&W(n.prototype,o),a&&W(n,a),t}();!function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(K,"propTypes",{children:l.a.element.isRequired}),a.a.render(i.a.createElement(K,null,i.a.createElement(z,null)),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZWQtY29tcG9uZW50cy9kaXN0L3N0eWxlZC1jb21wb25lbnRzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZXNvbHZlLXBhdGhuYW1lL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92YWx1ZS1lcXVhbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hbi1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lc20vcmVhY3Qtcm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvcmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faGlkZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9zdHlsZVV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2N0eC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hLWZ1bmN0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZHAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faGFzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXJhdG9ycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2xpYnJhcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdWlkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RvbS1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVkZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXRvLXN0cmluZy10YWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8taW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zaGFyZWQta2V5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsaXMvc3R5bGlzLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWVtb2l6ZS1vbmUvZGlzdC9tZW1vaXplLW9uZS5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXNtL3JlYWN0LXJvdXRlci1kb20uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRleHRzL0kxOG5Db250ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NsYXNzb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2hhcmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2V4cG9ydC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mYWlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wcm9wZXJ0eS1kZXNjLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWxlbmd0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3Rhc2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faHRtbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RlZmluZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZW51bS1idWcta2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsaXMtcnVsZS1zaGVldC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NyZWF0ZS1yZWFjdC1jb250ZXh0L2xpYi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaXMtcHJvcC12YWxpZC9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2lzLXByb3AtdmFsaWQvZGlzdC9pcy1wcm9wLXZhbGlkLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnByb21pc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faWU4LWRvbS1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FuLWluc3RhbmNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2Zvci1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWNhbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zcGVjaWVzLWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ludm9rZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19taWNyb3Rhc2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcGVyZm9ybS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL191c2VyLWFnZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3Byb21pc2UtcmVzb2x2ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWRlZmluZS1hbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXNwZWNpZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1kZXRlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYWRkLXRvLXVuc2NvcGFibGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItc3RlcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pb2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItZGVmaW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWRwcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qta2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qta2V5cy1pbnRlcm5hbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1hYnNvbHV0ZS1pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ3BvLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvd2FybmluZy93YXJuaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jcmVhdGUtcmVhY3QtY29udGV4dC9saWIvaW1wbGVtZW50YXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2d1ZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvd2FybmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0xvYWRlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwLmpzIiwid2VicGFjazovLy8uL3NyYy9jb250ZXh0cy9JMThuUHJvdmlkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbIndlYnBhY2tKc29ucENhbGxiYWNrIiwiZGF0YSIsIm1vZHVsZUlkIiwiY2h1bmtJZCIsImNodW5rSWRzIiwibW9yZU1vZHVsZXMiLCJpIiwicmVzb2x2ZXMiLCJsZW5ndGgiLCJpbnN0YWxsZWRDaHVua3MiLCJwdXNoIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibW9kdWxlcyIsInBhcmVudEpzb25wRnVuY3Rpb24iLCJzaGlmdCIsImluc3RhbGxlZE1vZHVsZXMiLCIxIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwiZSIsInByb21pc2VzIiwiaW5zdGFsbGVkQ2h1bmtEYXRhIiwicHJvbWlzZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwib25TY3JpcHRDb21wbGV0ZSIsInNjcmlwdCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNoYXJzZXQiLCJ0aW1lb3V0IiwibmMiLCJzZXRBdHRyaWJ1dGUiLCJzcmMiLCJwIiwianNvbnBTY3JpcHRTcmMiLCJldmVudCIsIm9uZXJyb3IiLCJvbmxvYWQiLCJjbGVhclRpbWVvdXQiLCJjaHVuayIsImVycm9yVHlwZSIsInR5cGUiLCJyZWFsU3JjIiwidGFyZ2V0IiwiZXJyb3IiLCJFcnJvciIsInJlcXVlc3QiLCJ1bmRlZmluZWQiLCJzZXRUaW1lb3V0IiwiaGVhZCIsImFwcGVuZENoaWxkIiwiYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsIm9lIiwiZXJyIiwiY29uc29sZSIsImpzb25wQXJyYXkiLCJ3aW5kb3ciLCJvbGRKc29ucEZ1bmN0aW9uIiwic2xpY2UiLCJzIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJhcmd1bWVudHMiLCJzb3VyY2UiLCJhcHBseSIsInRoaXMiLCJfX3dlYnBhY2tfZXhwb3J0c19fIiwicHJvY2VzcyIsImNzcyIsImtleWZyYW1lcyIsImNyZWF0ZUdsb2JhbFN0eWxlIiwic3R5bGlzX3N0eWxpc19taW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsInN0eWxpc19zdHlsaXNfbWluX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdCIsInN0eWxpc19ydWxlX3NoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJzdHlsaXNfcnVsZV9zaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQiLCJyZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX19kZWZhdWx0IiwiX2Vtb3Rpb25fdW5pdGxlc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsInJlYWN0X2lzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18iLCJtZW1vaXplX29uZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fIiwiX2Vtb3Rpb25faXNfcHJvcF92YWxpZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fIiwiaW50ZXJsZWF2ZSIsInN0cmluZ3MiLCJpbnRlcnBvbGF0aW9ucyIsInJlc3VsdCIsImxlbiIsIl90eXBlb2YiLCJpdGVyYXRvciIsIm9iaiIsImNvbnN0cnVjdG9yIiwiY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwicHJvcHMiLCJkZXNjcmlwdG9yIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJpbmhlcml0cyIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwib2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJrZXlzIiwiaW5kZXhPZiIsInBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJpc1BsYWluT2JqZWN0IiwieCIsIkVNUFRZX0FSUkFZIiwiZnJlZXplIiwiRU1QVFlfT0JKRUNUIiwiaXNGdW5jdGlvbiIsInRlc3QiLCJnZXRDb21wb25lbnROYW1lIiwiZGlzcGxheU5hbWUiLCJpc1N0eWxlZENvbXBvbmVudCIsInN0eWxlZENvbXBvbmVudElkIiwiU0NfQVRUUiIsImVudiIsIklTX0JST1dTRVIiLCJESVNBQkxFX1NQRUVEWSIsIlNDX0RJU0FCTEVfU1BFRURZIiwiU1RBVElDX0VYRUNVVElPTl9DT05URVhUIiwiU3R5bGVkQ29tcG9uZW50c0Vycm9yIiwiX0Vycm9yIiwiY29kZSIsIl9sZW4iLCJBcnJheSIsIl9rZXkiLCJfdGhpcyIsImpvaW4iLCJTQ19DT01QT05FTlRfSUQiLCJleHRyYWN0Q29tcHMiLCJtYXliZUNTUyIsImV4aXN0aW5nQ29tcG9uZW50cyIsInJlcGxhY2UiLCJtYXRjaCIsImNvbXBvbmVudElkIiwibWF0Y2hJbmRleCIsIm1hcCIsIl9yZWYiLCJuZXh0Q29tcCIsImNzc0Zyb21ET00iLCJDT01NRU5UX1JFR0VYIiwic3R5bGlzU3BsaXR0ZXIiLCJhIiwiZ2xvYmFsIiwiY2FzY2FkZSIsImtleWZyYW1lIiwicHJlZml4IiwiY29tcHJlc3MiLCJzZW1pY29sb24iLCJzdHlsaXMiLCJwYXJzaW5nUnVsZXMiLCJyZXR1cm5SdWxlc1BsdWdpbiIsImNvbnRleHQiLCJwYXJzZWRSdWxlcyIsInBhcnNlUnVsZXNQbHVnaW4iLCJydWxlIiwiX2NvbXBvbmVudElkIiwiX3NlbGVjdG9yIiwiX3NlbGVjdG9yUmVnZXhwIiwic2VsZlJlZmVyZW5jZVJlcGxhY2VyIiwib2Zmc2V0Iiwic3RyaW5nIiwidXNlIiwiXyIsInNlbGVjdG9ycyIsImxhc3RJbmRleE9mIiwic3RyaW5naWZ5UnVsZXMiLCJydWxlcyIsInNlbGVjdG9yIiwiZmxhdENTUyIsImNzc1N0ciIsIlJlZ0V4cCIsImdldE5vbmNlIiwiYWRkTmFtZUZvcklkIiwibmFtZXMiLCJpZCIsInJlc2V0SWROYW1lcyIsImhhc05hbWVGb3JJZCIsInN0cmluZ2lmeU5hbWVzIiwic3RyIiwidHJpbSIsInNoZWV0Rm9yVGFnIiwidGFnIiwic2hlZXQiLCJzaXplIiwic3R5bGVTaGVldHMiLCJvd25lck5vZGUiLCJzYWZlSW5zZXJ0UnVsZSIsImNzc1J1bGUiLCJpbmRleCIsIm1heEluZGV4IiwiY3NzUnVsZXMiLCJpbnNlcnRSdWxlIiwibWFrZVRleHRNYXJrZXIiLCJhZGRVcFVudGlsSW5kZXgiLCJzaXplcyIsInRvdGFsVXBUb0luZGV4Iiwid3JhcEFzSHRtbFRhZyIsImFkZGl0aW9uYWxBdHRycyIsIm5vbmNlIiwiU0NfVkVSU0lPTl9BVFRSIiwiZmlsdGVyIiwiQm9vbGVhbiIsIndyYXBBc0VsZW1lbnQiLCJfcHJvcHMiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImdldElkc0Zyb21NYXJrZXJzRmFjdG9yeSIsIm1hcmtlcnMiLCJtYWtlVGV4dE5vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsIm1ha2VTZXJ2ZXJUYWciLCJuYW1lc0FyZyIsIm1hcmtlcnNBcmciLCJpbnNlcnRNYXJrZXIiLCJwcmV2IiwiY3NzRm9ySWQiLCJjbG9uZSIsIm5hbWVzQ2xvbmUiLCJjbG9uZU5hbWVzIiwibWFya2Vyc0Nsb25lIiwiZ2V0SWRzIiwiaW5zZXJ0UnVsZXMiLCJyZW1vdmVSdWxlcyIsIm1hcmtlciIsInNlYWxlZCIsInN0eWxlVGFnIiwidG9FbGVtZW50IiwidG9IVE1MIiwibWFrZVRhZyIsInRhZ0VsIiwiZm9yY2VTZXJ2ZXIiLCJpbnNlcnRCZWZvcmUiLCJnZXRJbXBvcnRSdWxlVGFnIiwiZWwiLCJwYXJlbnROb2RlIiwibmV4dFNpYmxpbmciLCJtYWtlU3R5bGVUYWciLCJleHRyYWN0SW1wb3J0IiwidXNlZEltcG9ydFJ1bGVUYWciLCJpbXBvcnRSdWxlcyIsImNzc1J1bGVzU2l6ZSIsIm1heUhhdmVJbXBvcnQiLCJzZXBhcmF0b3IiLCJhcHBlbmREYXRhIiwibmV3TWFya2VyIiwicmVwbGFjZUNoaWxkIiwibWFrZUJyb3dzZXJUYWciLCJlbmQiLCJjc3NUZXh0IiwiaW5zZXJ0SW5kZXgiLCJpbmplY3RlZFJ1bGVzIiwicmVtb3ZhbEluZGV4IiwibG93ZXJCb3VuZCIsImRlbGV0ZVJ1bGUiLCJkZWxldGVSdWxlcyIsIm1ha2VTcGVlZHlUYWciLCJTUExJVF9SRUdFWCIsIk1BWF9TSVpFIiwic2hlZXRSdW5uaW5nSWQiLCJtYXN0ZXIiLCJTdHlsZVNoZWV0IiwiaW1wb3J0UnVsZVRhZyIsImZpcnN0VGFnIiwidGFncyIsInRhZ01hcCIsImRlZmVycmVkIiwicmVoeWRyYXRlZE5hbWVzIiwiaWdub3JlUmVoeWRyYXRlZE5hbWVzIiwiY2FwYWNpdHkiLCJjbG9uZXMiLCJyZWh5ZHJhdGUiLCJlbHMiLCJleHRyYWN0ZWQiLCJpc1N0cmVhbWVkIiwibm9kZXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibm9kZXNTaXplIiwiZ2V0QXR0cmlidXRlIiwiZWxOYW1lcyIsInNwbGl0IiwiZWxOYW1lc1NpemUiLCJqIiwidGV4dENvbnRlbnQiLCJleHRyYWN0ZWRTaXplIiwiX2V4dHJhY3RlZCRpIiwiX2kiLCJyZW1vdmVDaGlsZCIsIk1hdGgiLCJtYXgiLCJfaiIsInJlc2V0IiwiaWRzIiwibmV3VGFnIiwic2VhbEFsbFRhZ3MiLCJmb3JFYWNoIiwibGFzdEVsIiwiZ2V0VGFnRm9ySWQiLCJoYXNJZCIsImRlZmVycmVkSW5qZWN0IiwiaW5qZWN0IiwiY29uY2F0IiwicmVtb3ZlIiwidG9SZWFjdEVsZW1lbnRzIiwiS2V5ZnJhbWVzIiwic3R5bGVTaGVldCIsInRvU3RyaW5nIiwiU3RyaW5nIiwiZ2V0TmFtZSIsInVwcGVyY2FzZVBhdHRlcm4iLCJtc1BhdHRlcm4iLCJpc0ZhbHNpc2giLCJvYmpUb0NzcyIsInByZXZLZXkiLCJ0b0xvd2VyQ2FzZSIsImZsYXR0ZW4iLCJleGVjdXRpb25Db250ZXh0IiwiaXNBcnJheSIsInJ1bGVTZXQiLCJzaG91bGRUaHJvdyIsInN0eWxlcyIsIm11cm11cmhhc2giLCJiIiwiY2hhckNvZGVBdCIsImNoYXJzTGVuZ3RoIiwiZ2V0QWxwaGFiZXRpY0NoYXIiLCJmcm9tQ2hhckNvZGUiLCJnZW5lcmF0ZUFscGhhYmV0aWNOYW1lIiwiZmxvb3IiLCJpc1N0YXRpY1J1bGVzIiwiYXR0cnMiLCJzb21lIiwiaGFzRnVuY3Rpb25PYmplY3RLZXkiLCJfVFlQRV9TVEFUSUNTIiwiaXNITVJFbmFibGVkIiwiaGFzaGVyIiwiQ29tcG9uZW50U3R5bGUiLCJpc1N0YXRpYyIsImdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzIiwibGFzdENsYXNzTmFtZSIsImdlbmVyYXRlTmFtZSIsImRldGVybWluZVRoZW1lIiwiZmFsbGJhY2tUaGVtZSIsImRlZmF1bHRQcm9wcyIsImlzRGVmYXVsdFRoZW1lIiwidGhlbWUiLCJlc2NhcGVSZWdleCIsImRhc2hlc0F0RW5kcyIsImVzY2FwZSIsImlzVGFnIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGVzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwicHJvcFR5cGVzIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImNhbGxlZSIsImFyaXR5IiwiVFlQRV9TVEFUSUNTIiwiJCR0eXBlb2YiLCJyZW5kZXIiLCJkZWZpbmVQcm9wZXJ0eSQxIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsIl9PYmplY3QkZ2V0T3duUHJvcGVydCIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiYXJyYXlQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiVGhlbWVDb250ZXh0IiwiVGhlbWVDb25zdW1lciIsIkNvbnN1bWVyIiwiU3R5bGVTaGVldENvbnRleHQiLCJfQ29tcG9uZW50IiwiVGhlbWVQcm92aWRlciIsImdldENvbnRleHQiLCJyZW5kZXJJbm5lciIsImNoaWxkcmVuIiwib3V0ZXJUaGVtZSIsIlByb3ZpZGVyIiwiQ2hpbGRyZW4iLCJvbmx5IiwiZ2V0VGhlbWUiLCJTZXJ2ZXJTdHlsZVNoZWV0IiwibWFzdGVyU2hlZXQiLCJzZWFsIiwic3BsaWNlIiwiY29sbGVjdFN0eWxlcyIsIlN0eWxlU2hlZXRNYW5hZ2VyIiwiZ2V0U3R5bGVUYWdzIiwiZ2V0U3R5bGVFbGVtZW50IiwiaW50ZXJsZWF2ZVdpdGhOb2RlU3RyZWFtIiwicmVhZGFibGVTdHJlYW0iLCJTdHlsZVNoZWV0Q29uc3VtZXIiLCJpZGVudGlmaWVycyIsIlNldCIsIlN0eWxlZENvbXBvbmVudCIsInJlbmRlck91dGVyIiwiZm9yd2FyZGVkQ29tcG9uZW50IiwiY29tcG9uZW50U3R5bGUiLCJfcHJvcHMkZm9yd2FyZGVkQ29tcG8iLCJmb2xkZWRDb21wb25lbnRJZHMiLCJnZW5lcmF0ZWRDbGFzc05hbWUiLCJlbGVtZW50VG9CZUNyZWF0ZWQiLCJhcyIsImlzVGFyZ2V0VGFnIiwicHJvcHNGb3JFbGVtZW50IiwiY29tcHV0ZWRQcm9wcyIsInJlZiIsInN0eWxlIiwiY2xhc3NOYW1lIiwiYnVpbGRFeGVjdXRpb25Db250ZXh0IiwiX3RoaXMyIiwiYXR0ckRlZiIsImZuIiwicmVzb2x2ZWRBdHRyRGVmIiwiYXR0ckRlZldhc0ZuIiwiYXR0ciIsImlzUmVhY3RDb21wb25lbnQiLCJfcHJvcHMkZm9yd2FyZGVkQ29tcG8yIiwid2FyblRvb01hbnlDbGFzc2VzIiwiY3JlYXRlU3R5bGVkQ29tcG9uZW50Iiwib3B0aW9ucyIsImlzVGFyZ2V0U3R5bGVkQ29tcCIsImlzQ2xhc3MiLCJfb3B0aW9ucyRkaXNwbGF5TmFtZSIsImdlbmVyYXRlRGlzcGxheU5hbWUiLCJfb3B0aW9ucyRjb21wb25lbnRJZCIsIl9Db21wb25lbnRTdHlsZSIsIl9kaXNwbGF5TmFtZSIsInBhcmVudENvbXBvbmVudElkIiwibnIiLCJnZW5lcmF0ZUlkIiwiX29wdGlvbnMkUGFyZW50Q29tcG9uIiwiUGFyZW50Q29tcG9uZW50IiwiX29wdGlvbnMkYXR0cnMiLCJmaW5hbEF0dHJzIiwiV3JhcHBlZFN0eWxlZENvbXBvbmVudCIsImZvcndhcmRSZWYiLCJmb3J3YXJkZWRSZWYiLCJ3aXRoQ29tcG9uZW50IiwicHJldmlvdXNDb21wb25lbnRJZCIsIm9wdGlvbnNUb0NvcHkiLCJuZXdDb21wb25lbnRJZCIsInN0eWxlZCIsImNvbnN0cnVjdFdpdGhPcHRpb25zIiwiY29tcG9uZW50Q29uc3RydWN0b3IiLCJ0ZW1wbGF0ZUZ1bmN0aW9uIiwid2l0aENvbmZpZyIsImNvbmZpZyIsImRvbUVsZW1lbnQiLCJHbG9iYWxTdHlsZSIsImNyZWF0ZVN0eWxlcyIsInJlbW92ZVN0eWxlcyIsInJlbmRlclN0eWxlcyIsIkpTT04iLCJzdHJpbmdpZnkiLCJHbG9iYWxTdHlsZUNvbXBvbmVudCIsIl9SZWFjdCRDb21wb25lbnQiLCJfdGhpcyRjb25zdHJ1Y3RvciIsImdsb2JhbFN0eWxlIiwic2NDR1NITVJDYWNoZSIsInN0YXRlIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJDb21wb25lbnQiLCJyZXBsYWNlV2hpdGVzcGFjZSIsImlzQWJzb2x1dGUiLCJwYXRobmFtZSIsImNoYXJBdCIsInNwbGljZU9uZSIsImxpc3QiLCJrIiwicG9wIiwicmVzb2x2ZV9wYXRobmFtZSIsInRvIiwiZnJvbSIsInRvUGFydHMiLCJmcm9tUGFydHMiLCJpc1RvQWJzIiwiaXNGcm9tQWJzIiwibXVzdEVuZEFicyIsImhhc1RyYWlsaW5nU2xhc2giLCJsYXN0IiwidXAiLCJwYXJ0IiwidW5zaGlmdCIsInN1YnN0ciIsInZhbHVlX2VxdWFsIiwidmFsdWVFcXVhbCIsImV2ZXJ5IiwiaXRlbSIsImFUeXBlIiwiYVZhbHVlIiwidmFsdWVPZiIsImJWYWx1ZSIsImFLZXlzIiwiYktleXMiLCJhZGRMZWFkaW5nU2xhc2giLCJwYXRoIiwic3RyaXBMZWFkaW5nU2xhc2giLCJzdHJpcEJhc2VuYW1lIiwiaGFzQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJjcmVhdGVQYXRoIiwibG9jYXRpb24iLCJzZWFyY2giLCJoYXNoIiwiY3JlYXRlTG9jYXRpb24iLCJjdXJyZW50TG9jYXRpb24iLCJoYXNoSW5kZXgiLCJzZWFyY2hJbmRleCIsInBhcnNlUGF0aCIsImVzbV9leHRlbmRzIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJsb2NhdGlvbnNBcmVFcXVhbCIsImNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0IiwibGlzdGVuZXJzIiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJhY3Rpb24iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiY2FsbGJhY2siLCJhcHBlbmRMaXN0ZW5lciIsImlzQWN0aXZlIiwibGlzdGVuZXIiLCJub3RpZnlMaXN0ZW5lcnMiLCJhcmdzIiwiY3JlYXRlQnJvd3Nlckhpc3RvcnkiLCJjcmVhdGVIYXNoSGlzdG9yeSIsImNyZWF0ZU1lbW9yeUhpc3RvcnkiLCJjYW5Vc2VET00iLCJnZXRDb25maXJtYXRpb24iLCJtZXNzYWdlIiwiY29uZmlybSIsIlBvcFN0YXRlRXZlbnQiLCJIYXNoQ2hhbmdlRXZlbnQiLCJnZXRIaXN0b3J5U3RhdGUiLCJoaXN0b3J5IiwidGlueV9pbnZhcmlhbnRfZXNtIiwidWEiLCJnbG9iYWxIaXN0b3J5IiwiY2FuVXNlSGlzdG9yeSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm5lZWRzSGFzaENoYW5nZUxpc3RlbmVyIiwiX3Byb3BzJGZvcmNlUmVmcmVzaCIsImZvcmNlUmVmcmVzaCIsIl9wcm9wcyRnZXRVc2VyQ29uZmlybSIsIl9wcm9wcyRrZXlMZW5ndGgiLCJrZXlMZW5ndGgiLCJiYXNlbmFtZSIsImdldERPTUxvY2F0aW9uIiwiaGlzdG9yeVN0YXRlIiwiX3dpbmRvdyRsb2NhdGlvbiIsImNyZWF0ZUtleSIsInJhbmRvbSIsInRyYW5zaXRpb25NYW5hZ2VyIiwic2V0U3RhdGUiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwib2siLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwicmV2ZXJ0UG9wIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaXNCbG9ja2VkIiwiaHJlZiIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZVN0YXRlIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwiYmxvY2siLCJ1bmJsb2NrIiwibGlzdGVuIiwidW5saXN0ZW4iLCJIYXNoQ2hhbmdlRXZlbnQkMSIsIkhhc2hQYXRoQ29kZXJzIiwiaGFzaGJhbmciLCJlbmNvZGVQYXRoIiwiZGVjb2RlUGF0aCIsIm5vc2xhc2giLCJzbGFzaCIsImdldEhhc2hQYXRoIiwic3Vic3RyaW5nIiwicmVwbGFjZUhhc2hQYXRoIiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsInB1c2hIYXNoUGF0aCIsIm5leHRQYXRocyIsImNsYW1wIiwidXBwZXJCb3VuZCIsIm1pbiIsIl9wcm9wcyRpbml0aWFsRW50cmllcyIsImluaXRpYWxFbnRyaWVzIiwiX3Byb3BzJGluaXRpYWxJbmRleCIsImluaXRpYWxJbmRleCIsImVudHJpZXMiLCJlbnRyeSIsIm5leHRJbmRleCIsIm5leHRFbnRyaWVzIiwiY2FuR28iLCJGdW5jdGlvbiIsIl9fZyIsInN0b3JlIiwidWlkIiwiVVNFX1NZTUJPTCIsIl9pbmhlcml0c0xvb3NlIiwiaXNQcm9kdWN0aW9uIiwiY29uZGl0aW9uIiwiaXNPYmplY3QiLCJpdCIsIlJvdXRlIiwiUm91dGVyIiwiU3dpdGNoIiwid2l0aFJvdXRlciIsImNyZWF0ZV9yZWFjdF9jb250ZXh0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJjcmVhdGVfcmVhY3RfY29udGV4dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQiLCJfYmFiZWxfcnVudGltZV9oZWxwZXJzX2VzbV9leHRlbmRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfYmFiZWxfcnVudGltZV9oZWxwZXJzX2VzbV9pbmhlcml0c0xvb3NlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJyZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX19kZWZhdWx0IiwicHJvcF90eXBlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwicHJvcF90eXBlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fX2RlZmF1bHQiLCJoaXN0b3J5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJ0aW55X2ludmFyaWFudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fIiwicGF0aF90b19yZWdleHBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXyIsInBhdGhfdG9fcmVnZXhwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19fZGVmYXVsdCIsIl9iYWJlbF9ydW50aW1lX2hlbHBlcnNfZXNtX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfXyIsImhvaXN0X25vbl9yZWFjdF9zdGF0aWNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fIiwiaG9pc3Rfbm9uX3JlYWN0X3N0YXRpY3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX19fZGVmYXVsdCIsImNvbXB1dGVSb290TWF0Y2giLCJzdGF0aWNDb250ZXh0IiwiX2lzTW91bnRlZCIsIl9wZW5kaW5nTG9jYXRpb24iLCJ1cmwiLCJwYXJhbXMiLCJpc0V4YWN0IiwiX3Byb3RvIiwiY29tcG9uZW50RGlkTW91bnQiLCJjb250ZXh0JCQxIiwiY3JlYXRlQ29udGV4dCIsInJvdXRlciIsImlzUmVxdWlyZWQiLCJnZXRDaGlsZENvbnRleHQiLCJjYWNoZSQxIiwiY2FjaGVMaW1pdCQxIiwiY2FjaGVDb3VudCQxIiwibWF0Y2hQYXRoIiwiX29wdGlvbnMiLCJfb3B0aW9ucyRleGFjdCIsImV4YWN0IiwiX29wdGlvbnMkc3RyaWN0Iiwic3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwic2Vuc2l0aXZlIiwicmVkdWNlIiwibWF0Y2hlZCIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwicGF0aENhY2hlIiwicmVnZXhwIiwiY29tcGlsZVBhdGgkMSIsImV4ZWMiLCJ2YWx1ZXMiLCJtZW1vIiwiZ2V0Q29udGV4dCQxIiwiY29tcHV0ZWRNYXRjaCIsIl90aGlzJHByb3BzIiwiY29tcG9uZW50IiwiY291bnQiLCJpc0VtcHR5Q2hpbGRyZW4iLCJhZGRCYXNlbmFtZSIsImJhc2UiLCJjcmVhdGVVUkwiLCJzdGF0aWNIYW5kbGVyIiwibWV0aG9kTmFtZSIsIm5vb3AiLCJwYXJlbnRDb250ZXh0IiwiU3RhdGljUm91dGVyIiwiaGFuZGxlUHVzaCIsImhhbmRsZVJlcGxhY2UiLCJfdGhpcyRwcm9wczIiLCJoYW5kbGVMaXN0ZW4iLCJoYW5kbGVCbG9jayIsIl90aGlzJHByb3BzMyIsInJlc3QiLCJlbGVtZW50IiwiY2hpbGQiLCJpc1ZhbGlkRWxlbWVudCIsImNsb25lRWxlbWVudCIsIkMiLCJ3cmFwcGVkQ29tcG9uZW50UmVmIiwicmVtYWluaW5nUHJvcHMiLCJyb3V0ZUNvbXBvbmVudFByb3BzIiwiV3JhcHBlZENvbXBvbmVudCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwiY29yZSIsInZlcnNpb24iLCJfX2UiLCJkUCIsImNyZWF0ZURlc2MiLCJmIiwiY29sb3JQYWxldHRlcyIsInRoZW1lQ29sb3JzIiwidGV4dFNpemVzIiwibWFyZ2lucyIsImhlYWRlckhlaWdodCIsImNhcmRTaXplIiwibWVkaWEiLCJzdHlsZWRfY29tcG9uZW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiYmxhY2siLCJ3aGl0ZSIsInJlZCIsImxpZ2h0R3JleSIsImRlZmF1bHQiLCJzZWxlY3RlZCIsImxpbmsiLCJib3JkZXJHcmV5Iiwic21hbGxUZXh0Iiwibm9ybWFsVGV4dCIsInRpdGxlVGV4dCIsInNtYWxsIiwibWVkaXVtIiwibGFyZ2UiLCJ3aWR0aCIsImhlaWdodCIsInBob25lV2lkdGgiLCJnaWFudCIsImRlc2t0b3AiLCJ0YWJsZXQiLCJwaG9uZSIsImFjYyIsImxhYmVsIiwiYUZ1bmN0aW9uIiwidGhhdCIsImFuT2JqZWN0IiwiSUU4X0RPTV9ERUZJTkUiLCJ0b1ByaW1pdGl2ZSIsIk8iLCJQIiwiQXR0cmlidXRlcyIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwicHgiLCJpcyIsImhpZGUiLCJoYXMiLCJTUkMiLCIkdG9TdHJpbmciLCJUUEwiLCJpbnNwZWN0U291cmNlIiwidmFsIiwic2FmZSIsImRlZiIsIlRBRyIsInN0YXQiLCJJT2JqZWN0IiwiZGVmaW5lZCIsInNoYXJlZCIsImgiLCJ1IiwiZyIsIkEiLCJ3IiwidiIsIiQiLCJ5IiwieiIsIk4iLCJTIiwiRiIsIlciLCJxIiwiQiIsIkQiLCJFIiwiRyIsIkgiLCJJIiwiSiIsIksiLCJMIiwiTSIsIlEiLCJSIiwiVCIsIlUiLCJWIiwiWCIsIlkiLCJaIiwiZWUiLCJhZSIsInJlIiwiY2UiLCJzZSIsInRlIiwiaWUiLCJmZSIsIm5lIiwibGUiLCJoZSIsInVlIiwiZGUiLCJiZSIsInBlIiwia2UiLCJnZSIsIkFlIiwiQ2UiLCJ3ZSIsInZlIiwibWUiLCJ4ZSIsIiRlIiwieWUiLCJPZSIsImplIiwiemUiLCJOZSIsIlNlIiwiRmUiLCJXZSIsInFlIiwiQmUiLCJEZSIsIkVlIiwiR2UiLCJIZSIsIkplIiwiUmUiLCJUZSIsIlVlIiwiVmUiLCJYZSIsIlllIiwiUWUiLCJJZSIsIlBlIiwiTWUiLCJMZSIsIktlIiwiaXNOYU4iLCJwYXJzZUZsb2F0Iiwic2V0Iiwic2ltcGxlSXNFcXVhbCIsInJlc3VsdEZuIiwiaXNFcXVhbCIsImxhc3RUaGlzIiwibGFzdFJlc3VsdCIsImxhc3RBcmdzIiwiY2FsbGVkT25jZSIsImlzTmV3QXJnRXF1YWxUb0xhc3QiLCJuZXdBcmciLCJuZXdBcmdzIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhcnNlIiwiY29tcGlsZSIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwicmVzIiwidG9rZW5zIiwiZGVmYXVsdERlbGltaXRlciIsImRlbGltaXRlciIsImVzY2FwZWQiLCJuZXh0IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJhc3RlcmlzayIsInBhcnRpYWwiLCJyZXBlYXQiLCJvcHRpb25hbCIsInBhdHRlcm4iLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsIm9wdHMiLCJlbmNvZGUiLCJwcmV0dHkiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ0b2tlbiIsInNlZ21lbnQiLCJhdHRhY2hLZXlzIiwiZmxhZ3MiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiZ3JvdXBzIiwicmVnZXhwVG9SZWdleHAiLCJwYXJ0cyIsImFycmF5VG9SZWdleHAiLCJzdHJpbmdUb1JlZ2V4cCIsIkJyb3dzZXJSb3V0ZXIiLCJOYXZMaW5rIiwiX2JhYmVsX3J1bnRpbWVfaGVscGVyc19lc21faW5oZXJpdHNMb29zZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsInJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdCIsInJlYWN0X3JvdXRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiaGlzdG9yeV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwiX2JhYmVsX3J1bnRpbWVfaGVscGVyc19lc21fZXh0ZW5kc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fIiwiX2JhYmVsX3J1bnRpbWVfaGVscGVyc19lc21fb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fIiwiaW52YXJpYW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18iLCJpbnZhcmlhbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX19kZWZhdWx0IiwiTGluayIsImhhbmRsZUNsaWNrIiwib25DbGljayIsImRlZmF1bHRQcmV2ZW50ZWQiLCJidXR0b24iLCJtZXRhS2V5IiwiYWx0S2V5IiwiY3RybEtleSIsInNoaWZ0S2V5IiwiaXNNb2RpZmllZEV2ZW50IiwicHJldmVudERlZmF1bHQiLCJpbm5lclJlZiIsImFyaWFDdXJyZW50IiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiaXNBY3RpdmVQcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJfcmVmMiIsImNsYXNzbmFtZXMiLCJqb2luQ2xhc3NuYW1lcyIsImFyaWEtY3VycmVudCIsInJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJSZWFjdCIsImN1cnJlbnRMYW5ndWFnZSIsImNoYW5nZUxhbmd1YWdlIiwiY29mIiwiQVJHIiwidHJ5R2V0IiwiY29weXJpZ2h0IiwicmVkZWZpbmUiLCJjdHgiLCIkZXhwb3J0Iiwib3duIiwib3V0IiwiZXhwIiwiSVNfRk9SQ0VEIiwiSVNfR0xPQkFMIiwiSVNfU1RBVElDIiwiSVNfUFJPVE8iLCJJU19CSU5EIiwiZXhwUHJvdG8iLCJiaXRtYXAiLCJ0b0ludGVnZXIiLCJjZWlsIiwiZGVmZXIiLCJjaGFubmVsIiwicG9ydCIsImludm9rZSIsImh0bWwiLCJjZWwiLCJzZXRUYXNrIiwic2V0SW1tZWRpYXRlIiwiY2xlYXJUYXNrIiwiY2xlYXJJbW1lZGlhdGUiLCJNZXNzYWdlQ2hhbm5lbCIsIkRpc3BhdGNoIiwiY291bnRlciIsInF1ZXVlIiwicnVuIiwibmV4dFRpY2siLCJub3ciLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJpbXBvcnRTY3JpcHRzIiwiY2xlYXIiLCJkb2N1bWVudEVsZW1lbnQiLCJQcm9taXNlQ2FwYWJpbGl0eSIsIiQkcmVzb2x2ZSIsIiQkcmVqZWN0IiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidGVzdDEiLCJ0ZXN0MiIsInRlc3QzIiwibGV0dGVyIiwic2hvdWxkVXNlTmF0aXZlIiwic3ltYm9scyIsInRvT2JqZWN0IiwidG9TaGVldCIsImNvbnRlbnQiLCJwYXJlbnRzIiwibGluZSIsImNvbHVtbiIsImRlcHRoIiwiYXQiLCJmYWN0b3J5IiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsIm1zR3JpZFJvdyIsIm1zR3JpZFJvd1NwYW4iLCJtc0dyaWRDb2x1bW4iLCJtc0dyaWRDb2x1bW5TcGFuIiwiZm9udFdlaWdodCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJXZWJraXRMaW5lQ2xhbXAiLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJmb3JtYXQiLCJhcmdJbmRleCIsImZyYW1lc1RvUG9wIiwiX3JlYWN0MiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfaW1wbGVtZW50YXRpb24yIiwiZ2V0RGVmYXVsdFByb3BzIiwibWl4aW5zIiwicmVhY3RQcm9wc1JlZ2V4IiwiY2FjaGUiLCJhcmciLCJtZW1vaXplX2Jyb3dzZXJfZXNtIiwicHJvcCIsIkludGVybmFsIiwibmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5IiwiT3duUHJvbWlzZUNhcGFiaWxpdHkiLCJXcmFwcGVyIiwiTElCUkFSWSIsImNsYXNzb2YiLCJhbkluc3RhbmNlIiwiZm9yT2YiLCJzcGVjaWVzQ29uc3RydWN0b3IiLCJ0YXNrIiwibWljcm90YXNrIiwibmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUiLCJwZXJmb3JtIiwicHJvbWlzZVJlc29sdmUiLCJ2ZXJzaW9ucyIsInY4IiwiJFByb21pc2UiLCJpc05vZGUiLCJlbXB0eSIsIm5ld1Byb21pc2VDYXBhYmlsaXR5IiwiVVNFX05BVElWRSIsIkZha2VQcm9taXNlIiwiUHJvbWlzZVJlamVjdGlvbkV2ZW50IiwidGhlbiIsImlzVGhlbmFibGUiLCJub3RpZnkiLCJpc1JlamVjdCIsIl9uIiwiY2hhaW4iLCJfYyIsIl92IiwiX3MiLCJyZWFjdGlvbiIsImV4aXRlZCIsImhhbmRsZXIiLCJmYWlsIiwiZG9tYWluIiwiX2giLCJvbkhhbmRsZVVuaGFuZGxlZCIsImVudGVyIiwiZXhpdCIsIm9uVW5oYW5kbGVkIiwidW5oYW5kbGVkIiwiaXNVbmhhbmRsZWQiLCJlbWl0Iiwib251bmhhbmRsZWRyZWplY3Rpb24iLCJyZWFzb24iLCJfYSIsIm9ucmVqZWN0aW9uaGFuZGxlZCIsIiRyZWplY3QiLCJfZCIsIl93IiwiJHJlc29sdmUiLCJ3cmFwcGVyIiwiZXhlY3V0b3IiLCJvbkZ1bGZpbGxlZCIsIm9uUmVqZWN0ZWQiLCJjYXRjaCIsImNhcGFiaWxpdHkiLCJpdGVyIiwiaXRlcmFibGUiLCJyZW1haW5pbmciLCIkaW5kZXgiLCJhbHJlYWR5Q2FsbGVkIiwicmFjZSIsImZvcmJpZGRlbkZpZWxkIiwiaXNBcnJheUl0ZXIiLCJ0b0xlbmd0aCIsImdldEl0ZXJGbiIsIkJSRUFLIiwiUkVUVVJOIiwiSVRFUkFUT1IiLCJzdGVwIiwiaXRlckZuIiwiZG9uZSIsInJldCIsIkl0ZXJhdG9ycyIsIkFycmF5UHJvdG8iLCJnZXRJdGVyYXRvck1ldGhvZCIsIlNQRUNJRVMiLCJ1biIsIm1hY3JvdGFzayIsIk9ic2VydmVyIiwiTXV0YXRpb25PYnNlcnZlciIsIldlYktpdE11dGF0aW9uT2JzZXJ2ZXIiLCJmbHVzaCIsInBhcmVudCIsInN0YW5kYWxvbmUiLCJ0b2dnbGUiLCJub2RlIiwib2JzZXJ2ZSIsImNoYXJhY3RlckRhdGEiLCJwcm9taXNlQ2FwYWJpbGl0eSIsIkRFU0NSSVBUT1JTIiwiS0VZIiwiU0FGRV9DTE9TSU5HIiwicml0ZXIiLCJza2lwQ2xvc2luZyIsImFyciIsImFkZFRvVW5zY29wYWJsZXMiLCJ0b0lPYmplY3QiLCJpdGVyYXRlZCIsImtpbmQiLCJfdCIsIl9rIiwiQXJndW1lbnRzIiwiVU5TQ09QQUJMRVMiLCIkaXRlckNyZWF0ZSIsInNldFRvU3RyaW5nVGFnIiwiQlVHR1kiLCJyZXR1cm5UaGlzIiwiQmFzZSIsIk5BTUUiLCJERUZBVUxUIiwiSVNfU0VUIiwiRk9SQ0VEIiwibWV0aG9kcyIsIkl0ZXJhdG9yUHJvdG90eXBlIiwiZ2V0TWV0aG9kIiwicHJvdG8iLCJERUZfVkFMVUVTIiwiVkFMVUVTX0JVRyIsIiRuYXRpdmUiLCIkZGVmYXVsdCIsIiRlbnRyaWVzIiwiJGFueU5hdGl2ZSIsImRQcyIsImVudW1CdWdLZXlzIiwiSUVfUFJPVE8iLCJFbXB0eSIsImNyZWF0ZURpY3QiLCJpZnJhbWVEb2N1bWVudCIsImlmcmFtZSIsImRpc3BsYXkiLCJjb250ZW50V2luZG93Iiwib3BlbiIsIndyaXRlIiwibHQiLCJjbG9zZSIsIlByb3BlcnRpZXMiLCJnZXRLZXlzIiwiJGtleXMiLCJhcnJheUluZGV4T2YiLCJ0b0Fic29sdXRlSW5kZXgiLCJJU19JTkNMVURFUyIsIiR0aGlzIiwiT2JqZWN0UHJvdG8iLCJmb3IiLCJhYSIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJyZWZzIiwidXBkYXRlciIsImZvcmNlVXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJjdXJyZW50IiwiY3VycmVudERpc3BhdGNoZXIiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIl9vd25lciIsImtleVByZWZpeCIsImZ1bmMiLCI9IiwiOiIsImNhIiwiZGEiLCJiYSIsInRvQXJyYXkiLCJjcmVhdGVSZWYiLCJQdXJlQ29tcG9uZW50IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiX2NvbnRleHQiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImNvbXBhcmUiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNyZWF0ZUZhY3RvcnkiLCJ1bnN0YWJsZV9Db25jdXJyZW50TW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnRPd25lciIsImVhIiwiZmEiLCJoYSIsImlhIiwiamEiLCJvbkVycm9yIiwia2EiLCJtYSIsIm5hIiwib2EiLCJwYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwicWEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInJhIiwicmVnaXN0cmF0aW9uTmFtZSIsInNhIiwidGEiLCJkZXBlbmRlbmNpZXMiLCJ2YSIsIndhIiwieGEiLCJjdXJyZW50VGFyZ2V0IiwibGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIkNhIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIkRhIiwic3RhdGVOb2RlIiwiZGlzYWJsZWQiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJyZXR1cm4iLCJOYSIsImRpc3BhdGNoQ29uZmlnIiwiT2EiLCJfdGFyZ2V0SW5zdCIsIlBhIiwiUWEiLCJSYSIsIlNhIiwiVGEiLCJVYSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlZhIiwiV2EiLCJYYSIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJZYSIsIlphIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImtiIiwiZXZlbnRQb29sIiwibGIiLCJkZXN0cnVjdG9yIiwiamIiLCJnZXRQb29sZWQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsImlzVHJ1c3RlZCIsImV4dGVuZCIsIm1iIiwibmIiLCJvYiIsInBiIiwicWIiLCJkb2N1bWVudE1vZGUiLCJyYiIsInNiIiwidGIiLCJ1YiIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJ2YiIsIndiIiwia2V5Q29kZSIsInhiIiwiZGV0YWlsIiwieWIiLCJCYiIsImxvY2FsZSIsIndoaWNoIiwiemIiLCJjaGFyIiwiQWIiLCJDYiIsIkRiIiwiRWIiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJOYiIsIk9iIiwiUGIiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsIm51bWJlciIsInBhc3N3b3JkIiwicmFuZ2UiLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsIndlZWsiLCJRYiIsIm5vZGVOYW1lIiwiUmIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJub2RlVHlwZSIsIlNiIiwiVGIiLCJWYiIsIl92YWx1ZVRyYWNrZXIiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWIiLCJXYiIsImNoZWNrZWQiLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJjYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJvYyIsInBjIiwicWMiLCJyYyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJ2YyIsIndjIiwieGMiLCJ0YyIsInVjIiwic2MiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInljIiwiemMiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkFjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkJjIiwiQ2MiLCJEYyIsIkVjIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJ0YWJJbmRleCIsIkZjIiwiY2hhbmdlIiwiR2MiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsImRldGFjaEV2ZW50IiwiUWMiLCJSYyIsImF0dGFjaEV2ZW50IiwiU2MiLCJUYyIsIlVjIiwiVmMiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiV2MiLCJ2aWV3IiwiWGMiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiWWMiLCJnZXRNb2RpZmllclN0YXRlIiwiWmMiLCIkYyIsImFkIiwiYmQiLCJjZCIsImRkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiZWQiLCJwb2ludGVySWQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiZmQiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsImdkIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJhbHRlcm5hdGUiLCJoZCIsImpkIiwia2QiLCJlZmZlY3RUYWciLCJsZCIsIm5kIiwic2libGluZyIsIm1kIiwib2QiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwicGQiLCJjbGlwYm9hcmREYXRhIiwicWQiLCJyZCIsImNoYXJDb2RlIiwic2QiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwidGQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwidWQiLCJ2ZCIsImRhdGFUcmFuc2ZlciIsIndkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInhkIiwieWQiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsInpkIiwiQWQiLCJCZCIsIkNkIiwiaXNJbnRlcmFjdGl2ZSIsIkRkIiwiaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlIiwiRWQiLCJGZCIsIkdkIiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsImNvbnRhaW5lckluZm8iLCJ0b3BMZXZlbFR5cGUiLCJIZCIsIklkIiwiSmQiLCJLZCIsIkxkIiwiTWQiLCJOZCIsIk9kIiwiUGQiLCJib2R5IiwiUWQiLCJmaXJzdENoaWxkIiwiUmQiLCJUZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiVWQiLCJjb250ZW50RWRpdGFibGUiLCJWZCIsIldkIiwic2VsZWN0IiwiWGQiLCJZZCIsIlpkIiwiJGQiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0Iiwib25TZWxlY3QiLCJkZWZhdWx0U2VsZWN0ZWQiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwibWF0aG1sIiwic3ZnIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsImdyaWRBcmVhIiwibGluZUNsYW1wIiwic2V0UHJvcGVydHkiLCJtZW51aXRlbSIsImFyZWEiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwiYmx1ciIsImZvY3VzIiwiYXV0b0ZvY3VzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJlbGVtZW50VHlwZSIsInBlbmRpbmdQcm9wcyIsImZpcnN0Q29udGV4dERlcGVuZGVuY3kiLCJtZW1vaXplZFN0YXRlIiwidXBkYXRlUXVldWUiLCJtZW1vaXplZFByb3BzIiwibGFzdEVmZmVjdCIsImZpcnN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJleHBpcmF0aW9uVGltZSIsImFmIiwiYmYiLCJjZiIsImRmIiwiZWYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImZmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJnZiIsImhmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJqZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwia2YiLCJsZiIsImJhc2VTdGF0ZSIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0IiwibWYiLCJuZiIsInBheWxvYWQiLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwidGYiLCJ1ZiIsInZmIiwid2YiLCJzdGFjayIsInhmIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsIkRmIiwiRWYiLCJvYnNlcnZlZEJpdHMiLCJGZiIsIkdmIiwiSGYiLCJJZiIsIkpmIiwidGFnTmFtZSIsIktmIiwiTGYiLCJNZiIsIk9mIiwiUGYiLCJRZiIsIlZmIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsIlJmIiwiU2YiLCJUZiIsIlVmIiwiV2YiLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJYZiIsImNvbnRleHRUeXBlIiwicmVhZENvbnRleHQiLCJaZiIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIiRmIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiYWciLCJiZyIsIl9zdHJpbmdSZWYiLCJjZyIsImRnIiwiTWFwIiwiZGVsZXRlIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsInNnIiwidGciLCJ1ZyIsInZnIiwid2ciLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJ4ZyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsInlnIiwicGVuZGluZ0NvbnRleHQiLCJ6ZyIsInRpbWVkT3V0QXQiLCJmYWxsYmFjayIsIkFnIiwiTmYiLCJaZSIsImh5ZHJhdGUiLCJoaWRkZW4iLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJCZyIsIkNnIiwiR2ciLCJIZyIsIklnIiwib25jbGljayIsIkpnIiwiV2Vha1NldCIsIktnIiwiTGciLCJNZyIsIk9nIiwiZGVzdHJveSIsIlBnIiwiUWciLCJSZyIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJTZyIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJOZyIsInRoIiwic2giLCJhZGQiLCJVZyIsIldlYWtNYXAiLCJWZyIsIldnIiwiWGciLCJjb21wb25lbnREaWRDYXRjaCIsIllnIiwiY29tcG9uZW50U3RhY2siLCJaZyIsIiRnIiwiYWgiLCJiaCIsImNoIiwiZGgiLCJlaCIsImZoIiwiZ2giLCJoaCIsImloIiwiamgiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsImtoIiwiY3JlYXRlRWxlbWVudE5TIiwibGgiLCJtaCIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsIm5oIiwibWF4RHVyYXRpb24iLCJwaW5nQ2FjaGUiLCJvaCIsImZpbmlzaGVkV29yayIsInBoIiwicWgiLCJyaCIsInVoIiwidmgiLCJ3aCIsInhoIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsInVuc3RhYmxlX25vdyIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwiTGgiLCJ0aW1lb3V0SGFuZGxlIiwiTmgiLCJPaCIsIm5leHRTY2hlZHVsZWRSb290IiwiUGgiLCJRaCIsIlJoIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJfb25Db21wbGV0ZSIsIlNoIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsInJhbmdlQ291bnQiLCJkYiIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJZZiIsIlZoIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJTZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsIkZiIiwiR2IiLCJIYyIsImlpIiwiRGciLCJFZyIsImppIiwiSWMiLCJGZyIsIlRoIiwiVWgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsImFpIiwiX3Jvb3QiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJiaSIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJjaSIsIl9pbnRlcm5hbFJvb3QiLCJkaSIsImZpIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwiZWkiLCJnaSIsIiRoIiwiZm9ybSIsImNvbW1pdCIsInVubW91bnQiLCJjcmVhdGVCYXRjaCIsImtpIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlcyIsImZsdXNoU3luYyIsInVuc3RhYmxlX2NyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIm92ZXJyaWRlUHJvcHMiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwibGkiLCJtaSIsInByZXZpb3VzIiwicHJpb3JpdHlMZXZlbCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicGVyZm9ybWFuY2UiLCJfc2NoZWRNb2NrIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJvb2wiLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiY2FjaGVkU2V0VGltZW91dCIsImNhY2hlZENsZWFyVGltZW91dCIsImRlZmF1bHRTZXRUaW1vdXQiLCJkZWZhdWx0Q2xlYXJUaW1lb3V0IiwicnVuVGltZW91dCIsImZ1biIsImN1cnJlbnRRdWV1ZSIsImRyYWluaW5nIiwicXVldWVJbmRleCIsImNsZWFuVXBOZXh0VGljayIsImRyYWluUXVldWUiLCJydW5DbGVhclRpbWVvdXQiLCJJdGVtIiwidGl0bGUiLCJicm93c2VyIiwiYXJndiIsIm9uIiwiYWRkTGlzdGVuZXIiLCJvbmNlIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwiYmluZGluZyIsImN3ZCIsImNoZGlyIiwiZGlyIiwidW1hc2siLCJ0eXBlT2YiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJGb3J3YXJkUmVmIiwiTGF6eSIsIk1lbW8iLCJQb3J0YWwiLCJQcm9maWxlciIsImlzVmFsaWRFbGVtZW50VHlwZSIsImlzQXN5bmNNb2RlIiwiaXNDb25jdXJyZW50TW9kZSIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJpc0VsZW1lbnQiLCJpc0ZvcndhcmRSZWYiLCJpc0ZyYWdtZW50IiwiaXNMYXp5IiwiaXNNZW1vIiwiaXNQb3J0YWwiLCJpc1Byb2ZpbGVyIiwiaXNTdHJpY3RNb2RlIiwiaXNTdXNwZW5zZSIsIndhcm5pbmciLCJfcmVhY3QiLCJfcHJvcFR5cGVzMiIsIl9ndWQyIiwiX2NsYXNzQ2FsbENoZWNrIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfaW5oZXJpdHMiLCJNQVhfU0lHTkVEXzMxX0JJVF9JTlQiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiX3RlbXAiLCJoYW5kbGVycyIsImVtaXR0ZXIiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwibmV4dFByb3BzIiwib2xkVmFsdWUiLCJfQ29tcG9uZW50MiIsIl90ZW1wMiIsIl9sZW4yIiwiX2tleTIiLCJvblVwZGF0ZSIsIm1ha2VFbXB0eUZ1bmN0aW9uIiwidGhhdFJldHVybnMiLCJ0aGF0UmV0dXJuc0ZhbHNlIiwidGhhdFJldHVybnNUcnVlIiwidGhhdFJldHVybnNOdWxsIiwidGhhdFJldHVybnNUaGlzIiwidGhhdFJldHVybnNBcmd1bWVudCIsIk92ZXJsYXkiLCJkaXYiLCJiYWNrZ3JvdW5kQ29sb3IiLCJCb3VuY2VDaXJjbGUiLCJib3VuY2UiLCJTaGFyZWQiLCJGaXJzdENpcmNsZSIsIlNlY29uZENpcmNsZSIsIkxvYWRlciIsInJlYWN0X2RlZmF1bHQiLCJDYXRhbG9nU2NyZWVuIiwiRGV0YWlsc1NjcmVlbiIsIk5vdEZvdW5kU2NyZWVuIiwiX3RlbXBsYXRlT2JqZWN0IiwiRGF0YVByb3ZpZGVyIiwicmVhY3QiLCJnYW1lc09iaiIsIkFwcCIsIkFwcF9EYXRhUHJvdmlkZXIiLCJyZWFjdF9yb3V0ZXJfZG9tIiwiY29tcG9uZW50c19Mb2FkZXIiLCJyZWFjdF9yb3V0ZXIiLCJnYW1lcyIsIkkxOG5Qcm92aWRlciIsIkkxOG5Qcm92aWRlcl9jbGFzc0NhbGxDaGVjayIsIkkxOG5Qcm92aWRlcl9nZXRQcm90b3R5cGVPZiIsInRyYW5zbGF0aW9uRmlsZSIsImVuIiwiaGFuZGxlQ2hhbmdlTGFuZ3VhZ2UiLCJJMThuUHJvdmlkZXJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwidHJhbnNsYXRlIiwibGFuZyIsImZyIiwiZ2V0VHJhbnNsYXRpb25GaWxlIiwiSTE4bkNvbnRleHQiLCJSZWFjdERPTSIsIkkxOG5Qcm92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d0QsdUpBcERZcXdELGNBQ0EsQ0FDakJyd0QsU0FBVXdwRCxJQUFVMzBDLFFBQVE1QyxhQ0hoQ2cvQyxJQUFTenlELE9BQ1Ard0QsRUFBQTErRCxFQUFBcEosY0FBQ3lwRSxFQUFELEtBQ0UzQixFQUFBMStELEVBQUFwSixjQUFDMHBFLEVBQUQsT0FFRjNwRSxTQUFTNHBFLGVBQWUiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSnNvbnBDYWxsYmFjayhkYXRhKSB7XG4gXHRcdHZhciBjaHVua0lkcyA9IGRhdGFbMF07XG4gXHRcdHZhciBtb3JlTW9kdWxlcyA9IGRhdGFbMV07XG5cblxuIFx0XHQvLyBhZGQgXCJtb3JlTW9kdWxlc1wiIHRvIHRoZSBtb2R1bGVzIG9iamVjdCxcbiBcdFx0Ly8gdGhlbiBmbGFnIGFsbCBcImNodW5rSWRzXCIgYXMgbG9hZGVkIGFuZCBmaXJlIGNhbGxiYWNrXG4gXHRcdHZhciBtb2R1bGVJZCwgY2h1bmtJZCwgaSA9IDAsIHJlc29sdmVzID0gW107XG4gXHRcdGZvcig7aSA8IGNodW5rSWRzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0Y2h1bmtJZCA9IGNodW5rSWRzW2ldO1xuIFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tjaHVua0lkXSkge1xuIFx0XHRcdFx0cmVzb2x2ZXMucHVzaChpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF1bMF0pO1xuIFx0XHRcdH1cbiBcdFx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSAwO1xuIFx0XHR9XG4gXHRcdGZvcihtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuIFx0XHRcdGlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG4gXHRcdFx0XHRtb2R1bGVzW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0aWYocGFyZW50SnNvbnBGdW5jdGlvbikgcGFyZW50SnNvbnBGdW5jdGlvbihkYXRhKTtcblxuIFx0XHR3aGlsZShyZXNvbHZlcy5sZW5ndGgpIHtcbiBcdFx0XHRyZXNvbHZlcy5zaGlmdCgpKCk7XG4gXHRcdH1cblxuIFx0fTtcblxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuIFx0Ly8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4gXHQvLyBQcm9taXNlID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxuIFx0dmFyIGluc3RhbGxlZENodW5rcyA9IHtcbiBcdFx0MTogMFxuIFx0fTtcblxuXG5cbiBcdC8vIHNjcmlwdCBwYXRoIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBqc29ucFNjcmlwdFNyYyhjaHVua0lkKSB7XG4gXHRcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBcIlwiICsgY2h1bmtJZCArIFwiLmJ1bmRsZS5qc1wiXG4gXHR9XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuIFx0Ly8gVGhpcyBmaWxlIGNvbnRhaW5zIG9ubHkgdGhlIGVudHJ5IGNodW5rLlxuIFx0Ly8gVGhlIGNodW5rIGxvYWRpbmcgZnVuY3Rpb24gZm9yIGFkZGl0aW9uYWwgY2h1bmtzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmUgPSBmdW5jdGlvbiByZXF1aXJlRW5zdXJlKGNodW5rSWQpIHtcbiBcdFx0dmFyIHByb21pc2VzID0gW107XG5cblxuIFx0XHQvLyBKU09OUCBjaHVuayBsb2FkaW5nIGZvciBqYXZhc2NyaXB0XG5cbiBcdFx0dmFyIGluc3RhbGxlZENodW5rRGF0YSA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcbiBcdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhICE9PSAwKSB7IC8vIDAgbWVhbnMgXCJhbHJlYWR5IGluc3RhbGxlZFwiLlxuXG4gXHRcdFx0Ly8gYSBQcm9taXNlIG1lYW5zIFwiY3VycmVudGx5IGxvYWRpbmdcIi5cbiBcdFx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEpIHtcbiBcdFx0XHRcdHByb21pc2VzLnB1c2goaW5zdGFsbGVkQ2h1bmtEYXRhWzJdKTtcbiBcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0Ly8gc2V0dXAgUHJvbWlzZSBpbiBjaHVuayBjYWNoZVxuIFx0XHRcdFx0dmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiBcdFx0XHRcdFx0aW5zdGFsbGVkQ2h1bmtEYXRhID0gaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gW3Jlc29sdmUsIHJlamVjdF07XG4gXHRcdFx0XHR9KTtcbiBcdFx0XHRcdHByb21pc2VzLnB1c2goaW5zdGFsbGVkQ2h1bmtEYXRhWzJdID0gcHJvbWlzZSk7XG5cbiBcdFx0XHRcdC8vIHN0YXJ0IGNodW5rIGxvYWRpbmdcbiBcdFx0XHRcdHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiBcdFx0XHRcdHZhciBvblNjcmlwdENvbXBsZXRlO1xuXG4gXHRcdFx0XHRzY3JpcHQuY2hhcnNldCA9ICd1dGYtOCc7XG4gXHRcdFx0XHRzY3JpcHQudGltZW91dCA9IDEyMDtcbiBcdFx0XHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKSB7XG4gXHRcdFx0XHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdHNjcmlwdC5zcmMgPSBqc29ucFNjcmlwdFNyYyhjaHVua0lkKTtcblxuIFx0XHRcdFx0b25TY3JpcHRDb21wbGV0ZSA9IGZ1bmN0aW9uIChldmVudCkge1xuIFx0XHRcdFx0XHQvLyBhdm9pZCBtZW0gbGVha3MgaW4gSUUuXG4gXHRcdFx0XHRcdHNjcmlwdC5vbmVycm9yID0gc2NyaXB0Lm9ubG9hZCA9IG51bGw7XG4gXHRcdFx0XHRcdGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiBcdFx0XHRcdFx0dmFyIGNodW5rID0gaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdO1xuIFx0XHRcdFx0XHRpZihjaHVuayAhPT0gMCkge1xuIFx0XHRcdFx0XHRcdGlmKGNodW5rKSB7XG4gXHRcdFx0XHRcdFx0XHR2YXIgZXJyb3JUeXBlID0gZXZlbnQgJiYgKGV2ZW50LnR5cGUgPT09ICdsb2FkJyA/ICdtaXNzaW5nJyA6IGV2ZW50LnR5cGUpO1xuIFx0XHRcdFx0XHRcdFx0dmFyIHJlYWxTcmMgPSBldmVudCAmJiBldmVudC50YXJnZXQgJiYgZXZlbnQudGFyZ2V0LnNyYztcbiBcdFx0XHRcdFx0XHRcdHZhciBlcnJvciA9IG5ldyBFcnJvcignTG9hZGluZyBjaHVuayAnICsgY2h1bmtJZCArICcgZmFpbGVkLlxcbignICsgZXJyb3JUeXBlICsgJzogJyArIHJlYWxTcmMgKyAnKScpO1xuIFx0XHRcdFx0XHRcdFx0ZXJyb3IudHlwZSA9IGVycm9yVHlwZTtcbiBcdFx0XHRcdFx0XHRcdGVycm9yLnJlcXVlc3QgPSByZWFsU3JjO1xuIFx0XHRcdFx0XHRcdFx0Y2h1bmtbMV0oZXJyb3IpO1xuIFx0XHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSB1bmRlZmluZWQ7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH07XG4gXHRcdFx0XHR2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiBcdFx0XHRcdFx0b25TY3JpcHRDb21wbGV0ZSh7IHR5cGU6ICd0aW1lb3V0JywgdGFyZ2V0OiBzY3JpcHQgfSk7XG4gXHRcdFx0XHR9LCAxMjAwMDApO1xuIFx0XHRcdFx0c2NyaXB0Lm9uZXJyb3IgPSBzY3JpcHQub25sb2FkID0gb25TY3JpcHRDb21wbGV0ZTtcbiBcdFx0XHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0cmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbiBcdH07XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvXCI7XG5cbiBcdC8vIG9uIGVycm9yIGZ1bmN0aW9uIGZvciBhc3luYyBsb2FkaW5nXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm9lID0gZnVuY3Rpb24oZXJyKSB7IGNvbnNvbGUuZXJyb3IoZXJyKTsgdGhyb3cgZXJyOyB9O1xuXG4gXHR2YXIganNvbnBBcnJheSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSB8fCBbXTtcbiBcdHZhciBvbGRKc29ucEZ1bmN0aW9uID0ganNvbnBBcnJheS5wdXNoLmJpbmQoanNvbnBBcnJheSk7XG4gXHRqc29ucEFycmF5LnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjaztcbiBcdGpzb25wQXJyYXkgPSBqc29ucEFycmF5LnNsaWNlKCk7XG4gXHRmb3IodmFyIGkgPSAwOyBpIDwganNvbnBBcnJheS5sZW5ndGg7IGkrKykgd2VicGFja0pzb25wQ2FsbGJhY2soanNvbnBBcnJheVtpXSk7XG4gXHR2YXIgcGFyZW50SnNvbnBGdW5jdGlvbiA9IG9sZEpzb25wRnVuY3Rpb247XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSA2MSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiaW1wb3J0IFN0eWxpcyBmcm9tICdzdHlsaXMvc3R5bGlzLm1pbic7XG5pbXBvcnQgX2luc2VydFJ1bGVQbHVnaW4gZnJvbSAnc3R5bGlzLXJ1bGUtc2hlZXQnO1xuaW1wb3J0IFJlYWN0LCB7IGNsb25lRWxlbWVudCwgY3JlYXRlQ29udGV4dCwgQ29tcG9uZW50LCBjcmVhdGVFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVuaXRsZXNzIGZyb20gJ0BlbW90aW9uL3VuaXRsZXNzJztcbmltcG9ydCB7IGlzRWxlbWVudCwgaXNWYWxpZEVsZW1lbnRUeXBlLCBGb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QtaXMnO1xuaW1wb3J0IG1lbW9pemUgZnJvbSAnbWVtb2l6ZS1vbmUnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHZhbGlkQXR0ciBmcm9tICdAZW1vdGlvbi9pcy1wcm9wLXZhbGlkJztcblxuLy8gXG5cbnZhciBpbnRlcmxlYXZlID0gKGZ1bmN0aW9uIChzdHJpbmdzLCBpbnRlcnBvbGF0aW9ucykge1xuICB2YXIgcmVzdWx0ID0gW3N0cmluZ3NbMF1dO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBpbnRlcnBvbGF0aW9ucy5sZW5ndGg7IGkgPCBsZW47IGkgKz0gMSkge1xuICAgIHJlc3VsdC5wdXNoKGludGVycG9sYXRpb25zW2ldLCBzdHJpbmdzW2kgKyAxXSk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufSk7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqO1xufSA6IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuXG52YXIgY2xhc3NDYWxsQ2hlY2sgPSBmdW5jdGlvbiAoaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufTtcblxudmFyIGNyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gICAgcmV0dXJuIENvbnN0cnVjdG9yO1xuICB9O1xufSgpO1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufTtcblxudmFyIGluaGVyaXRzID0gZnVuY3Rpb24gKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTtcbiAgfVxuXG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufTtcblxudmFyIG9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKG9iaiwga2V5cykge1xuICB2YXIgdGFyZ2V0ID0ge307XG5cbiAgZm9yICh2YXIgaSBpbiBvYmopIHtcbiAgICBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlO1xuICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlO1xuICAgIHRhcmdldFtpXSA9IG9ialtpXTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59O1xuXG52YXIgcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiA9IGZ1bmN0aW9uIChzZWxmLCBjYWxsKSB7XG4gIGlmICghc2VsZikge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmO1xufTtcblxuLy8gXG52YXIgaXNQbGFpbk9iamVjdCA9IChmdW5jdGlvbiAoeCkge1xuICByZXR1cm4gKHR5cGVvZiB4ID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZih4KSkgPT09ICdvYmplY3QnICYmIHguY29uc3RydWN0b3IgPT09IE9iamVjdDtcbn0pO1xuXG4vLyBcbnZhciBFTVBUWV9BUlJBWSA9IE9iamVjdC5mcmVlemUoW10pO1xudmFyIEVNUFRZX09CSkVDVCA9IE9iamVjdC5mcmVlemUoe30pO1xuXG4vLyBcbmZ1bmN0aW9uIGlzRnVuY3Rpb24odGVzdCkge1xuICByZXR1cm4gdHlwZW9mIHRlc3QgPT09ICdmdW5jdGlvbic7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBnZXRDb21wb25lbnROYW1lKHRhcmdldCkge1xuICByZXR1cm4gKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB0eXBlb2YgdGFyZ2V0ID09PSAnc3RyaW5nJyAmJiB0YXJnZXQgOiBmYWxzZSkgfHwgdGFyZ2V0LmRpc3BsYXlOYW1lIHx8IHRhcmdldC5uYW1lIHx8ICdDb21wb25lbnQnO1xufVxuXG4vLyBcbmZ1bmN0aW9uIGlzU3R5bGVkQ29tcG9uZW50KHRhcmdldCkge1xuICByZXR1cm4gdGFyZ2V0ICYmIHR5cGVvZiB0YXJnZXQuc3R5bGVkQ29tcG9uZW50SWQgPT09ICdzdHJpbmcnO1xufVxuXG4vLyBcblxudmFyIFNDX0FUVFIgPSB0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvY2Vzcy5lbnYuU0NfQVRUUiB8fCAnZGF0YS1zdHlsZWQnO1xuXG52YXIgU0NfVkVSU0lPTl9BVFRSID0gJ2RhdGEtc3R5bGVkLXZlcnNpb24nO1xuXG52YXIgU0NfU1RSRUFNX0FUVFIgPSAnZGF0YS1zdHlsZWQtc3RyZWFtZWQnO1xuXG52YXIgSVNfQlJPV1NFUiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICdIVE1MRWxlbWVudCcgaW4gd2luZG93O1xuXG52YXIgRElTQUJMRV9TUEVFRFkgPSB0eXBlb2YgU0NfRElTQUJMRV9TUEVFRFkgPT09ICdib29sZWFuJyAmJiBTQ19ESVNBQkxFX1NQRUVEWSB8fCBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nO1xuXG4vLyBTaGFyZWQgZW1wdHkgZXhlY3V0aW9uIGNvbnRleHQgd2hlbiBnZW5lcmF0aW5nIHN0YXRpYyBzdHlsZXNcbnZhciBTVEFUSUNfRVhFQ1VUSU9OX0NPTlRFWFQgPSB7fTtcblxuLy8gXG5cblxuLyoqXG4gKiBQYXJzZSBlcnJvcnMubWQgYW5kIHR1cm4gaXQgaW50byBhIHNpbXBsZSBoYXNoIG9mIGNvZGU6IG1lc3NhZ2VcbiAqL1xudmFyIEVSUk9SUyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB7XG4gIFwiMVwiOiBcIkNhbm5vdCBjcmVhdGUgc3R5bGVkLWNvbXBvbmVudCBmb3IgY29tcG9uZW50OiAlcy5cXG5cXG5cIixcbiAgXCIyXCI6IFwiQ2FuJ3QgY29sbGVjdCBzdHlsZXMgb25jZSB5b3UndmUgY29uc3VtZWQgYSBgU2VydmVyU3R5bGVTaGVldGAncyBzdHlsZXMhIGBTZXJ2ZXJTdHlsZVNoZWV0YCBpcyBhIG9uZSBvZmYgaW5zdGFuY2UgZm9yIGVhY2ggc2VydmVyLXNpZGUgcmVuZGVyIGN5Y2xlLlxcblxcbi0gQXJlIHlvdSB0cnlpbmcgdG8gcmV1c2UgaXQgYWNyb3NzIHJlbmRlcnM/XFxuLSBBcmUgeW91IGFjY2lkZW50YWxseSBjYWxsaW5nIGNvbGxlY3RTdHlsZXMgdHdpY2U/XFxuXFxuXCIsXG4gIFwiM1wiOiBcIlN0cmVhbWluZyBTU1IgaXMgb25seSBzdXBwb3J0ZWQgaW4gYSBOb2RlLmpzIGVudmlyb25tZW50OyBQbGVhc2UgZG8gbm90IHRyeSB0byBjYWxsIHRoaXMgbWV0aG9kIGluIHRoZSBicm93c2VyLlxcblxcblwiLFxuICBcIjRcIjogXCJUaGUgYFN0eWxlU2hlZXRNYW5hZ2VyYCBleHBlY3RzIGEgdmFsaWQgdGFyZ2V0IG9yIHNoZWV0IHByb3AhXFxuXFxuLSBEb2VzIHRoaXMgZXJyb3Igb2NjdXIgb24gdGhlIGNsaWVudCBhbmQgaXMgeW91ciB0YXJnZXQgZmFsc3k/XFxuLSBEb2VzIHRoaXMgZXJyb3Igb2NjdXIgb24gdGhlIHNlcnZlciBhbmQgaXMgdGhlIHNoZWV0IGZhbHN5P1xcblxcblwiLFxuICBcIjVcIjogXCJUaGUgY2xvbmUgbWV0aG9kIGNhbm5vdCBiZSB1c2VkIG9uIHRoZSBjbGllbnQhXFxuXFxuLSBBcmUgeW91IHJ1bm5pbmcgaW4gYSBjbGllbnQtbGlrZSBlbnZpcm9ubWVudCBvbiB0aGUgc2VydmVyP1xcbi0gQXJlIHlvdSB0cnlpbmcgdG8gcnVuIFNTUiBvbiB0aGUgY2xpZW50P1xcblxcblwiLFxuICBcIjZcIjogXCJUcnlpbmcgdG8gaW5zZXJ0IGEgbmV3IHN0eWxlIHRhZywgYnV0IHRoZSBnaXZlbiBOb2RlIGlzIHVubW91bnRlZCFcXG5cXG4tIEFyZSB5b3UgdXNpbmcgYSBjdXN0b20gdGFyZ2V0IHRoYXQgaXNuJ3QgbW91bnRlZD9cXG4tIERvZXMgeW91ciBkb2N1bWVudCBub3QgaGF2ZSBhIHZhbGlkIGhlYWQgZWxlbWVudD9cXG4tIEhhdmUgeW91IGFjY2lkZW50YWxseSByZW1vdmVkIGEgc3R5bGUgdGFnIG1hbnVhbGx5P1xcblxcblwiLFxuICBcIjdcIjogXCJUaGVtZVByb3ZpZGVyOiBQbGVhc2UgcmV0dXJuIGFuIG9iamVjdCBmcm9tIHlvdXIgXFxcInRoZW1lXFxcIiBwcm9wIGZ1bmN0aW9uLCBlLmcuXFxuXFxuYGBganNcXG50aGVtZT17KCkgPT4gKHt9KX1cXG5gYGBcXG5cXG5cIixcbiAgXCI4XCI6IFwiVGhlbWVQcm92aWRlcjogUGxlYXNlIG1ha2UgeW91ciBcXFwidGhlbWVcXFwiIHByb3AgYW4gb2JqZWN0LlxcblxcblwiLFxuICBcIjlcIjogXCJNaXNzaW5nIGRvY3VtZW50IGA8aGVhZD5gXFxuXFxuXCIsXG4gIFwiMTBcIjogXCJDYW5ub3QgZmluZCBhIFN0eWxlU2hlZXQgaW5zdGFuY2UuIFVzdWFsbHkgdGhpcyBoYXBwZW5zIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSBjb3BpZXMgb2Ygc3R5bGVkLWNvbXBvbmVudHMgbG9hZGVkIGF0IG9uY2UuIENoZWNrIG91dCB0aGlzIGlzc3VlIGZvciBob3cgdG8gdHJvdWJsZXNob290IGFuZCBmaXggdGhlIGNvbW1vbiBjYXNlcyB3aGVyZSB0aGlzIHNpdHVhdGlvbiBjYW4gaGFwcGVuOiBodHRwczovL2dpdGh1Yi5jb20vc3R5bGVkLWNvbXBvbmVudHMvc3R5bGVkLWNvbXBvbmVudHMvaXNzdWVzLzE5NDEjaXNzdWVjb21tZW50LTQxNzg2MjAyMVxcblxcblwiLFxuICBcIjExXCI6IFwiX1RoaXMgZXJyb3Igd2FzIHJlcGxhY2VkIHdpdGggYSBkZXYtdGltZSB3YXJuaW5nLCBpdCB3aWxsIGJlIGRlbGV0ZWQgZm9yIHY0IGZpbmFsLl8gW2NyZWF0ZUdsb2JhbFN0eWxlXSByZWNlaXZlZCBjaGlsZHJlbiB3aGljaCB3aWxsIG5vdCBiZSByZW5kZXJlZC4gUGxlYXNlIHVzZSB0aGUgY29tcG9uZW50IHdpdGhvdXQgcGFzc2luZyBjaGlsZHJlbiBlbGVtZW50cy5cXG5cXG5cIixcbiAgXCIxMlwiOiBcIkl0IHNlZW1zIHlvdSBhcmUgaW50ZXJwb2xhdGluZyBhIGtleWZyYW1lIGRlY2xhcmF0aW9uICglcykgaW50byBhbiB1bnRhZ2dlZCBzdHJpbmcuIFRoaXMgd2FzIHN1cHBvcnRlZCBpbiBzdHlsZWQtY29tcG9uZW50cyB2MywgYnV0IGlzIG5vdCBsb25nZXIgc3VwcG9ydGVkIGluIHY0IGFzIGtleWZyYW1lcyBhcmUgbm93IGluamVjdGVkIG9uLWRlbWFuZC4gUGxlYXNlIHdyYXAgeW91ciBzdHJpbmcgaW4gdGhlIGNzc1xcXFxgXFxcXGAgaGVscGVyIChzZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYXBpI2NzcyksIHdoaWNoIGVuc3VyZXMgdGhlIHN0eWxlcyBhcmUgaW5qZWN0ZWQgY29ycmVjdGx5LlxcblxcblwiLFxuICBcIjEzXCI6IFwiJXMgaXMgbm90IGEgc3R5bGVkIGNvbXBvbmVudCBhbmQgY2Fubm90IGJlIHJlZmVycmVkIHRvIHZpYSBjb21wb25lbnQgc2VsZWN0b3IuIFNlZSBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9hZHZhbmNlZCNyZWZlcnJpbmctdG8tb3RoZXItY29tcG9uZW50cyBmb3IgbW9yZSBkZXRhaWxzLlxcblwiXG59IDoge307XG5cbi8qKlxuICogc3VwZXIgYmFzaWMgdmVyc2lvbiBvZiBzcHJpbnRmXG4gKi9cbmZ1bmN0aW9uIGZvcm1hdCgpIHtcbiAgdmFyIGEgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDAgPyB1bmRlZmluZWQgOiBhcmd1bWVudHNbMF07XG4gIHZhciBiID0gW107XG5cbiAgZm9yICh2YXIgYyA9IDEsIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGMgPCBsZW47IGMgKz0gMSkge1xuICAgIGIucHVzaChhcmd1bWVudHMubGVuZ3RoIDw9IGMgPyB1bmRlZmluZWQgOiBhcmd1bWVudHNbY10pO1xuICB9XG5cbiAgYi5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7XG4gICAgYSA9IGEucmVwbGFjZSgvJVthLXpdLywgZCk7XG4gIH0pO1xuXG4gIHJldHVybiBhO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBlcnJvciBmaWxlIG91dCBvZiBlcnJvcnMubWQgZm9yIGRldmVsb3BtZW50IGFuZCBhIHNpbXBsZSB3ZWIgbGluayB0byB0aGUgZnVsbCBlcnJvcnNcbiAqIGluIHByb2R1Y3Rpb24gbW9kZS5cbiAqL1xuXG52YXIgU3R5bGVkQ29tcG9uZW50c0Vycm9yID0gZnVuY3Rpb24gKF9FcnJvcikge1xuICBpbmhlcml0cyhTdHlsZWRDb21wb25lbnRzRXJyb3IsIF9FcnJvcik7XG5cbiAgZnVuY3Rpb24gU3R5bGVkQ29tcG9uZW50c0Vycm9yKGNvZGUpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBTdHlsZWRDb21wb25lbnRzRXJyb3IpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGludGVycG9sYXRpb25zID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgaW50ZXJwb2xhdGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9FcnJvci5jYWxsKHRoaXMsICdBbiBlcnJvciBvY2N1cnJlZC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9zdHlsZWQtY29tcG9uZW50cy9zdHlsZWQtY29tcG9uZW50cy9ibG9iL21hc3Rlci9zcmMvdXRpbHMvZXJyb3JzLm1kIycgKyBjb2RlICsgJyBmb3IgbW9yZSBpbmZvcm1hdGlvbi4gJyArIChpbnRlcnBvbGF0aW9ucyA/ICdBZGRpdGlvbmFsIGFyZ3VtZW50czogJyArIGludGVycG9sYXRpb25zLmpvaW4oJywgJykgOiAnJykpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfRXJyb3IuY2FsbCh0aGlzLCBmb3JtYXQuYXBwbHkodW5kZWZpbmVkLCBbRVJST1JTW2NvZGVdXS5jb25jYXQoaW50ZXJwb2xhdGlvbnMpKS50cmltKCkpKTtcbiAgICB9XG4gICAgcmV0dXJuIHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMpO1xuICB9XG5cbiAgcmV0dXJuIFN0eWxlZENvbXBvbmVudHNFcnJvcjtcbn0oRXJyb3IpO1xuXG4vLyBcbnZhciBTQ19DT01QT05FTlRfSUQgPSAvXlteXFxTXFxuXSo/XFwvXFwqIHNjLWNvbXBvbmVudC1pZDpcXHMqKFxcUyspXFxzK1xcKlxcLy9nbTtcblxudmFyIGV4dHJhY3RDb21wcyA9IChmdW5jdGlvbiAobWF5YmVDU1MpIHtcbiAgdmFyIGNzcyA9ICcnICsgKG1heWJlQ1NTIHx8ICcnKTsgLy8gRGVmaW5pdGVseSBhIHN0cmluZywgYW5kIGEgY2xvbmVcbiAgdmFyIGV4aXN0aW5nQ29tcG9uZW50cyA9IFtdO1xuICBjc3MucmVwbGFjZShTQ19DT01QT05FTlRfSUQsIGZ1bmN0aW9uIChtYXRjaCwgY29tcG9uZW50SWQsIG1hdGNoSW5kZXgpIHtcbiAgICBleGlzdGluZ0NvbXBvbmVudHMucHVzaCh7IGNvbXBvbmVudElkOiBjb21wb25lbnRJZCwgbWF0Y2hJbmRleDogbWF0Y2hJbmRleCB9KTtcbiAgICByZXR1cm4gbWF0Y2g7XG4gIH0pO1xuICByZXR1cm4gZXhpc3RpbmdDb21wb25lbnRzLm1hcChmdW5jdGlvbiAoX3JlZiwgaSkge1xuICAgIHZhciBjb21wb25lbnRJZCA9IF9yZWYuY29tcG9uZW50SWQsXG4gICAgICAgIG1hdGNoSW5kZXggPSBfcmVmLm1hdGNoSW5kZXg7XG5cbiAgICB2YXIgbmV4dENvbXAgPSBleGlzdGluZ0NvbXBvbmVudHNbaSArIDFdO1xuICAgIHZhciBjc3NGcm9tRE9NID0gbmV4dENvbXAgPyBjc3Muc2xpY2UobWF0Y2hJbmRleCwgbmV4dENvbXAubWF0Y2hJbmRleCkgOiBjc3Muc2xpY2UobWF0Y2hJbmRleCk7XG4gICAgcmV0dXJuIHsgY29tcG9uZW50SWQ6IGNvbXBvbmVudElkLCBjc3NGcm9tRE9NOiBjc3NGcm9tRE9NIH07XG4gIH0pO1xufSk7XG5cbi8vIFxuXG52YXIgQ09NTUVOVF9SRUdFWCA9IC9eXFxzKlxcL1xcLy4qJC9nbTtcblxuLy8gTk9URTogVGhpcyBzdHlsaXMgaW5zdGFuY2UgaXMgb25seSB1c2VkIHRvIHNwbGl0IHJ1bGVzIGZyb20gU1NSJ2Qgc3R5bGUgdGFnc1xudmFyIHN0eWxpc1NwbGl0dGVyID0gbmV3IFN0eWxpcyh7XG4gIGdsb2JhbDogZmFsc2UsXG4gIGNhc2NhZGU6IHRydWUsXG4gIGtleWZyYW1lOiBmYWxzZSxcbiAgcHJlZml4OiBmYWxzZSxcbiAgY29tcHJlc3M6IGZhbHNlLFxuICBzZW1pY29sb246IHRydWVcbn0pO1xuXG52YXIgc3R5bGlzID0gbmV3IFN0eWxpcyh7XG4gIGdsb2JhbDogZmFsc2UsXG4gIGNhc2NhZGU6IHRydWUsXG4gIGtleWZyYW1lOiBmYWxzZSxcbiAgcHJlZml4OiB0cnVlLFxuICBjb21wcmVzczogZmFsc2UsXG4gIHNlbWljb2xvbjogZmFsc2UgLy8gTk9URTogVGhpcyBtZWFucyBcImF1dG9jb21wbGV0ZSBtaXNzaW5nIHNlbWljb2xvbnNcIlxufSk7XG5cbi8vIFdyYXAgYGluc2VydFJ1bGVQbHVnaW4gdG8gYnVpbGQgYSBsaXN0IG9mIHJ1bGVzLFxuLy8gYW5kIHRoZW4gbWFrZSBvdXIgb3duIHBsdWdpbiB0byByZXR1cm4gdGhlIHJ1bGVzLiBUaGlzXG4vLyBtYWtlcyBpdCBlYXNpZXIgdG8gaG9vayBpbnRvIHRoZSBleGlzdGluZyBTU1IgYXJjaGl0ZWN0dXJlXG5cbnZhciBwYXJzaW5nUnVsZXMgPSBbXTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG52YXIgcmV0dXJuUnVsZXNQbHVnaW4gPSBmdW5jdGlvbiByZXR1cm5SdWxlc1BsdWdpbihjb250ZXh0KSB7XG4gIGlmIChjb250ZXh0ID09PSAtMikge1xuICAgIHZhciBwYXJzZWRSdWxlcyA9IHBhcnNpbmdSdWxlcztcbiAgICBwYXJzaW5nUnVsZXMgPSBbXTtcbiAgICByZXR1cm4gcGFyc2VkUnVsZXM7XG4gIH1cbn07XG5cbnZhciBwYXJzZVJ1bGVzUGx1Z2luID0gX2luc2VydFJ1bGVQbHVnaW4oZnVuY3Rpb24gKHJ1bGUpIHtcbiAgcGFyc2luZ1J1bGVzLnB1c2gocnVsZSk7XG59KTtcblxudmFyIF9jb21wb25lbnRJZCA9IHZvaWQgMDtcbnZhciBfc2VsZWN0b3IgPSB2b2lkIDA7XG52YXIgX3NlbGVjdG9yUmVnZXhwID0gdm9pZCAwO1xuXG52YXIgc2VsZlJlZmVyZW5jZVJlcGxhY2VyID0gZnVuY3Rpb24gc2VsZlJlZmVyZW5jZVJlcGxhY2VyKG1hdGNoLCBvZmZzZXQsIHN0cmluZykge1xuICBpZiAoXG4gIC8vIHRoZSBmaXJzdCBzZWxmLXJlZiBpcyBhbHdheXMgdW50b3VjaGVkXG4gIG9mZnNldCA+IDAgJiZcbiAgLy8gdGhlcmUgc2hvdWxkIGJlIGF0IGxlYXN0IHR3byBzZWxmLXJlZnMgdG8gZG8gYSByZXBsYWNlbWVudCAoLmIgPiAuYilcbiAgc3RyaW5nLnNsaWNlKDAsIG9mZnNldCkuaW5kZXhPZihfc2VsZWN0b3IpICE9PSAtMSAmJlxuICAvLyBubyBjb25zZWN1dGl2ZSBzZWxmIHJlZnMgKC5iLmIpOyB0aGF0IGlzIGEgcHJlY2VkZW5jZSBib29zdCBhbmQgdHJlYXRlZCBkaWZmZXJlbnRseVxuICBzdHJpbmcuc2xpY2Uob2Zmc2V0IC0gX3NlbGVjdG9yLmxlbmd0aCwgb2Zmc2V0KSAhPT0gX3NlbGVjdG9yKSB7XG4gICAgcmV0dXJuICcuJyArIF9jb21wb25lbnRJZDtcbiAgfVxuXG4gIHJldHVybiBtYXRjaDtcbn07XG5cbi8qKlxuICogV2hlbiB3cml0aW5nIGEgc3R5bGUgbGlrZVxuICpcbiAqICYgKyAmIHtcbiAqICAgY29sb3I6IHJlZDtcbiAqIH1cbiAqXG4gKiBUaGUgc2Vjb25kIGFtcGVyc2FuZCBzaG91bGQgYmUgYSByZWZlcmVuY2UgdG8gdGhlIHN0YXRpYyBjb21wb25lbnQgY2xhc3MuIHN0eWxpc1xuICogaGFzIG5vIGtub3dsZWRnZSBvZiBzdGF0aWMgY2xhc3Mgc28gd2UgaGF2ZSB0byBpbnRlbGxpZ2VudGx5IHJlcGxhY2UgdGhlIGJhc2Ugc2VsZWN0b3IuXG4gKi9cbnZhciBzZWxmUmVmZXJlbmNlUmVwbGFjZW1lbnRQbHVnaW4gPSBmdW5jdGlvbiBzZWxmUmVmZXJlbmNlUmVwbGFjZW1lbnRQbHVnaW4oY29udGV4dCwgXywgc2VsZWN0b3JzKSB7XG4gIGlmIChjb250ZXh0ID09PSAyICYmIHNlbGVjdG9ycy5sZW5ndGggJiYgc2VsZWN0b3JzWzBdLmxhc3RJbmRleE9mKF9zZWxlY3RvcikgPiAwKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgc2VsZWN0b3JzWzBdID0gc2VsZWN0b3JzWzBdLnJlcGxhY2UoX3NlbGVjdG9yUmVnZXhwLCBzZWxmUmVmZXJlbmNlUmVwbGFjZXIpO1xuICB9XG59O1xuXG5zdHlsaXMudXNlKFtzZWxmUmVmZXJlbmNlUmVwbGFjZW1lbnRQbHVnaW4sIHBhcnNlUnVsZXNQbHVnaW4sIHJldHVyblJ1bGVzUGx1Z2luXSk7XG5zdHlsaXNTcGxpdHRlci51c2UoW3BhcnNlUnVsZXNQbHVnaW4sIHJldHVyblJ1bGVzUGx1Z2luXSk7XG5cbnZhciBzcGxpdEJ5UnVsZXMgPSBmdW5jdGlvbiBzcGxpdEJ5UnVsZXMoY3NzKSB7XG4gIHJldHVybiBzdHlsaXNTcGxpdHRlcignJywgY3NzKTtcbn07XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeVJ1bGVzKHJ1bGVzLCBzZWxlY3RvciwgcHJlZml4KSB7XG4gIHZhciBjb21wb25lbnRJZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogJyYnO1xuXG4gIHZhciBmbGF0Q1NTID0gcnVsZXMuam9pbignJykucmVwbGFjZShDT01NRU5UX1JFR0VYLCAnJyk7IC8vIHJlcGxhY2UgSlMgY29tbWVudHNcblxuICB2YXIgY3NzU3RyID0gc2VsZWN0b3IgJiYgcHJlZml4ID8gcHJlZml4ICsgJyAnICsgc2VsZWN0b3IgKyAnIHsgJyArIGZsYXRDU1MgKyAnIH0nIDogZmxhdENTUztcblxuICAvLyBzdHlsaXMgaGFzIG5vIGNvbmNlcHQgb2Ygc3RhdGUgdG8gYmUgcGFzc2VkIHRvIHBsdWdpbnNcbiAgLy8gYnV0IHNpbmNlIEpTIGlzIHNpbmdsZT10aHJlYWRlZCwgd2UgY2FuIHJlbHkgb24gdGhhdCB0byBlbnN1cmVcbiAgLy8gdGhlc2UgcHJvcGVydGllcyBzdGF5IGluIHN5bmMgd2l0aCB0aGUgY3VycmVudCBzdHlsaXMgcnVuXG4gIF9jb21wb25lbnRJZCA9IGNvbXBvbmVudElkO1xuICBfc2VsZWN0b3IgPSBzZWxlY3RvcjtcbiAgX3NlbGVjdG9yUmVnZXhwID0gbmV3IFJlZ0V4cCgnXFxcXCcgKyBfc2VsZWN0b3IgKyAnXFxcXGInLCAnZycpO1xuXG4gIHJldHVybiBzdHlsaXMocHJlZml4IHx8ICFzZWxlY3RvciA/ICcnIDogc2VsZWN0b3IsIGNzc1N0cik7XG59XG5cbi8vIFxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlLCBuby11bmRlZiAqL1xuXG52YXIgZ2V0Tm9uY2UgPSAoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbn0pO1xuXG4vLyBcbi8qIFRoZXNlIGFyZSBoZWxwZXJzIGZvciB0aGUgU3R5bGVUYWdzIHRvIGtlZXAgdHJhY2sgb2YgdGhlIGluamVjdGVkXG4gKiBydWxlIG5hbWVzIGZvciBlYWNoIChjb21wb25lbnQpIElEIHRoYXQgdGhleSdyZSBrZWVwaW5nIHRyYWNrIG9mLlxuICogVGhleSdyZSBjcnVjaWFsIGZvciBkZXRlY3Rpbmcgd2hldGhlciBhIG5hbWUgaGFzIGFscmVhZHkgYmVlblxuICogaW5qZWN0ZWQuXG4gKiAoVGhpcyBleGNsdWRlcyByZWh5ZHJhdGVkIG5hbWVzKSAqL1xuXG4vKiBhZGRzIGEgbmV3IElEOm5hbWUgcGFpcmluZyB0byBhIG5hbWVzIGRpY3Rpb25hcnkgKi9cbnZhciBhZGROYW1lRm9ySWQgPSBmdW5jdGlvbiBhZGROYW1lRm9ySWQobmFtZXMsIGlkLCBuYW1lKSB7XG4gIGlmIChuYW1lKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgdmFyIG5hbWVzRm9ySWQgPSBuYW1lc1tpZF0gfHwgKG5hbWVzW2lkXSA9IE9iamVjdC5jcmVhdGUobnVsbCkpO1xuICAgIG5hbWVzRm9ySWRbbmFtZV0gPSB0cnVlO1xuICB9XG59O1xuXG4vKiByZXNldHMgYW4gSUQgZW50aXJlbHkgYnkgb3ZlcndyaXRpbmcgaXQgaW4gdGhlIGRpY3Rpb25hcnkgKi9cbnZhciByZXNldElkTmFtZXMgPSBmdW5jdGlvbiByZXNldElkTmFtZXMobmFtZXMsIGlkKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBuYW1lc1tpZF0gPSBPYmplY3QuY3JlYXRlKG51bGwpO1xufTtcblxuLyogZmFjdG9yeSBmb3IgYSBuYW1lcyBkaWN0aW9uYXJ5IGNoZWNraW5nIHRoZSBleGlzdGFuY2Ugb2YgYW4gSUQ6bmFtZSBwYWlyaW5nICovXG52YXIgaGFzTmFtZUZvcklkID0gZnVuY3Rpb24gaGFzTmFtZUZvcklkKG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoaWQsIG5hbWUpIHtcbiAgICByZXR1cm4gbmFtZXNbaWRdICE9PSB1bmRlZmluZWQgJiYgbmFtZXNbaWRdW25hbWVdO1xuICB9O1xufTtcblxuLyogc3RyaW5naWZpZXMgbmFtZXMgZm9yIHRoZSBodG1sL2VsZW1lbnQgb3V0cHV0ICovXG52YXIgc3RyaW5naWZ5TmFtZXMgPSBmdW5jdGlvbiBzdHJpbmdpZnlOYW1lcyhuYW1lcykge1xuICB2YXIgc3RyID0gJyc7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgZm9yICh2YXIgaWQgaW4gbmFtZXMpIHtcbiAgICBzdHIgKz0gT2JqZWN0LmtleXMobmFtZXNbaWRdKS5qb2luKCcgJykgKyAnICc7XG4gIH1cbiAgcmV0dXJuIHN0ci50cmltKCk7XG59O1xuXG4vKiBjbG9uZXMgdGhlIG5lc3RlZCBuYW1lcyBkaWN0aW9uYXJ5ICovXG52YXIgY2xvbmVOYW1lcyA9IGZ1bmN0aW9uIGNsb25lTmFtZXMobmFtZXMpIHtcbiAgdmFyIGNsb25lID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICBmb3IgKHZhciBpZCBpbiBuYW1lcykge1xuICAgIGNsb25lW2lkXSA9IF9leHRlbmRzKHt9LCBuYW1lc1tpZF0pO1xuICB9XG4gIHJldHVybiBjbG9uZTtcbn07XG5cbi8vIFxuXG4vKiBUaGVzZSBhcmUgaGVscGVycyB0aGF0IGRlYWwgd2l0aCB0aGUgaW5zZXJ0UnVsZSAoYWthIHNwZWVkeSkgQVBJXG4gKiBUaGV5IGFyZSB1c2VkIGluIHRoZSBTdHlsZVRhZ3MgYW5kIHNwZWNpZmljYWxseSB0aGUgc3BlZWR5IHRhZ1xuICovXG5cbi8qIHJldHJpZXZlIGEgc2hlZXQgZm9yIGEgZ2l2ZW4gc3R5bGUgdGFnICovXG52YXIgc2hlZXRGb3JUYWcgPSBmdW5jdGlvbiBzaGVldEZvclRhZyh0YWcpIHtcbiAgLy8gJEZsb3dGaXhNZVxuICBpZiAodGFnLnNoZWV0KSByZXR1cm4gdGFnLnNoZWV0O1xuXG4gIC8qIEZpcmVmb3ggcXVpcmsgcmVxdWlyZXMgdXMgdG8gc3RlcCB0aHJvdWdoIGFsbCBzdHlsZXNoZWV0cyB0byBmaW5kIG9uZSBvd25lZCBieSB0aGUgZ2l2ZW4gdGFnICovXG4gIHZhciBzaXplID0gZG9jdW1lbnQuc3R5bGVTaGVldHMubGVuZ3RoO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHNpemU7IGkgKz0gMSkge1xuICAgIHZhciBzaGVldCA9IGRvY3VtZW50LnN0eWxlU2hlZXRzW2ldO1xuICAgIC8vICRGbG93Rml4TWVcbiAgICBpZiAoc2hlZXQub3duZXJOb2RlID09PSB0YWcpIHJldHVybiBzaGVldDtcbiAgfVxuXG4gIC8qIHdlIHNob3VsZCBhbHdheXMgYmUgYWJsZSB0byBmaW5kIGEgdGFnICovXG4gIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoMTApO1xufTtcblxuLyogaW5zZXJ0IGEgcnVsZSBzYWZlbHkgYW5kIHJldHVybiB3aGV0aGVyIGl0IHdhcyBhY3R1YWxseSBpbmplY3RlZCAqL1xudmFyIHNhZmVJbnNlcnRSdWxlID0gZnVuY3Rpb24gc2FmZUluc2VydFJ1bGUoc2hlZXQsIGNzc1J1bGUsIGluZGV4KSB7XG4gIC8qIGFib3J0IGVhcmx5IGlmIGNzc1J1bGUgc3RyaW5nIGlzIGZhbHN5ICovXG4gIGlmICghY3NzUnVsZSkgcmV0dXJuIGZhbHNlO1xuXG4gIHZhciBtYXhJbmRleCA9IHNoZWV0LmNzc1J1bGVzLmxlbmd0aDtcblxuICB0cnkge1xuICAgIC8qIHVzZSBpbnNlcnRSdWxlIGFuZCBjYXAgcGFzc2VkIGluZGV4IHdpdGggbWF4SW5kZXggKG5vIG9mIGNzc1J1bGVzKSAqL1xuICAgIHNoZWV0Lmluc2VydFJ1bGUoY3NzUnVsZSwgaW5kZXggPD0gbWF4SW5kZXggPyBpbmRleCA6IG1heEluZGV4KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLyogYW55IGVycm9yIGluZGljYXRlcyBhbiBpbnZhbGlkIHJ1bGUgKi9cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn07XG5cbi8qIGRlbGV0ZXMgYHNpemVgIHJ1bGVzIHN0YXJ0aW5nIGZyb20gYHJlbW92YWxJbmRleGAgKi9cbnZhciBkZWxldGVSdWxlcyA9IGZ1bmN0aW9uIGRlbGV0ZVJ1bGVzKHNoZWV0LCByZW1vdmFsSW5kZXgsIHNpemUpIHtcbiAgdmFyIGxvd2VyQm91bmQgPSByZW1vdmFsSW5kZXggLSBzaXplO1xuICBmb3IgKHZhciBpID0gcmVtb3ZhbEluZGV4OyBpID4gbG93ZXJCb3VuZDsgaSAtPSAxKSB7XG4gICAgc2hlZXQuZGVsZXRlUnVsZShpKTtcbiAgfVxufTtcblxuLy8gXG5cbi8qIHRoaXMgbWFya2VyIHNlcGFyYXRlcyBjb21wb25lbnQgc3R5bGVzIGFuZCBpcyBpbXBvcnRhbnQgZm9yIHJlaHlkcmF0aW9uICovXG52YXIgbWFrZVRleHRNYXJrZXIgPSBmdW5jdGlvbiBtYWtlVGV4dE1hcmtlcihpZCkge1xuICByZXR1cm4gJ1xcbi8qIHNjLWNvbXBvbmVudC1pZDogJyArIGlkICsgJyAqL1xcbic7XG59O1xuXG4vKiBhZGQgdXAgYWxsIG51bWJlcnMgaW4gYXJyYXkgdXAgdW50aWwgYW5kIGluY2x1ZGluZyB0aGUgaW5kZXggKi9cbnZhciBhZGRVcFVudGlsSW5kZXggPSBmdW5jdGlvbiBhZGRVcFVudGlsSW5kZXgoc2l6ZXMsIGluZGV4KSB7XG4gIHZhciB0b3RhbFVwVG9JbmRleCA9IDA7XG4gIGZvciAodmFyIGkgPSAwOyBpIDw9IGluZGV4OyBpICs9IDEpIHtcbiAgICB0b3RhbFVwVG9JbmRleCArPSBzaXplc1tpXTtcbiAgfVxuXG4gIHJldHVybiB0b3RhbFVwVG9JbmRleDtcbn07XG5cbi8qIGNyZWF0ZSBhIG5ldyBzdHlsZSB0YWcgYWZ0ZXIgbGFzdEVsICovXG52YXIgbWFrZVN0eWxlVGFnID0gZnVuY3Rpb24gbWFrZVN0eWxlVGFnKHRhcmdldCwgdGFnRWwsIGluc2VydEJlZm9yZSkge1xuICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICBlbC5zZXRBdHRyaWJ1dGUoU0NfQVRUUiwgJycpO1xuICBlbC5zZXRBdHRyaWJ1dGUoU0NfVkVSU0lPTl9BVFRSLCBcIjQuMS4zXCIpO1xuXG4gIHZhciBub25jZSA9IGdldE5vbmNlKCk7XG4gIGlmIChub25jZSkge1xuICAgIGVsLnNldEF0dHJpYnV0ZSgnbm9uY2UnLCBub25jZSk7XG4gIH1cblxuICAvKiBXb3JrIGFyb3VuZCBpbnNlcnRSdWxlIHF1aXJrIGluIEVkZ2VIVE1MICovXG4gIGVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKSk7XG5cbiAgaWYgKHRhcmdldCAmJiAhdGFnRWwpIHtcbiAgICAvKiBBcHBlbmQgdG8gdGFyZ2V0IHdoZW4gbm8gcHJldmlvdXMgZWxlbWVudCB3YXMgcGFzc2VkICovXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKGVsKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoIXRhZ0VsIHx8ICF0YXJnZXQgfHwgIXRhZ0VsLnBhcmVudE5vZGUpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoNik7XG4gICAgfVxuXG4gICAgLyogSW5zZXJ0IG5ldyBzdHlsZSB0YWcgYWZ0ZXIgdGhlIHByZXZpb3VzIG9uZSAqL1xuICAgIHRhZ0VsLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsLCBpbnNlcnRCZWZvcmUgPyB0YWdFbCA6IHRhZ0VsLm5leHRTaWJsaW5nKTtcbiAgfVxuXG4gIHJldHVybiBlbDtcbn07XG5cbi8qIHRha2VzIGEgY3NzIGZhY3RvcnkgZnVuY3Rpb24gYW5kIG91dHB1dHMgYW4gaHRtbCBzdHlsZWQgdGFnIGZhY3RvcnkgKi9cbnZhciB3cmFwQXNIdG1sVGFnID0gZnVuY3Rpb24gd3JhcEFzSHRtbFRhZyhjc3MsIG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoYWRkaXRpb25hbEF0dHJzKSB7XG4gICAgdmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcbiAgICB2YXIgYXR0cnMgPSBbbm9uY2UgJiYgJ25vbmNlPVwiJyArIG5vbmNlICsgJ1wiJywgU0NfQVRUUiArICc9XCInICsgc3RyaW5naWZ5TmFtZXMobmFtZXMpICsgJ1wiJywgU0NfVkVSU0lPTl9BVFRSICsgJz1cIicgKyBcIjQuMS4zXCIgKyAnXCInLCBhZGRpdGlvbmFsQXR0cnNdO1xuXG4gICAgdmFyIGh0bWxBdHRyID0gYXR0cnMuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJyAnKTtcbiAgICByZXR1cm4gJzxzdHlsZSAnICsgaHRtbEF0dHIgKyAnPicgKyBjc3MoKSArICc8L3N0eWxlPic7XG4gIH07XG59O1xuXG4vKiB0YWtlcyBhIGNzcyBmYWN0b3J5IGZ1bmN0aW9uIGFuZCBvdXRwdXRzIGFuIGVsZW1lbnQgZmFjdG9yeSAqL1xudmFyIHdyYXBBc0VsZW1lbnQgPSBmdW5jdGlvbiB3cmFwQXNFbGVtZW50KGNzcywgbmFtZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX3Byb3BzO1xuXG4gICAgdmFyIHByb3BzID0gKF9wcm9wcyA9IHt9LCBfcHJvcHNbU0NfQVRUUl0gPSBzdHJpbmdpZnlOYW1lcyhuYW1lcyksIF9wcm9wc1tTQ19WRVJTSU9OX0FUVFJdID0gXCI0LjEuM1wiLCBfcHJvcHMpO1xuXG4gICAgdmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcbiAgICBpZiAobm9uY2UpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIHByb3BzLm5vbmNlID0gbm9uY2U7XG4gICAgfVxuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWRhbmdlclxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCdzdHlsZScsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDogeyBfX2h0bWw6IGNzcygpIH0gfSkpO1xuICB9O1xufTtcblxudmFyIGdldElkc0Zyb21NYXJrZXJzRmFjdG9yeSA9IGZ1bmN0aW9uIGdldElkc0Zyb21NYXJrZXJzRmFjdG9yeShtYXJrZXJzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG1hcmtlcnMpO1xuICB9O1xufTtcblxuLyogc3BlZWR5IHRhZ3MgdXRpbGlzZSBpbnNlcnRSdWxlICovXG52YXIgbWFrZVNwZWVkeVRhZyA9IGZ1bmN0aW9uIG1ha2VTcGVlZHlUYWcoZWwsIGdldEltcG9ydFJ1bGVUYWcpIHtcbiAgdmFyIG5hbWVzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgdmFyIG1hcmtlcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB2YXIgc2l6ZXMgPSBbXTtcblxuICB2YXIgZXh0cmFjdEltcG9ydCA9IGdldEltcG9ydFJ1bGVUYWcgIT09IHVuZGVmaW5lZDtcbiAgLyogaW5kaWNhdGVzIHdoZXRoZXIgZ2V0SW1wb3J0UnVsZVRhZyB3YXMgY2FsbGVkICovXG4gIHZhciB1c2VkSW1wb3J0UnVsZVRhZyA9IGZhbHNlO1xuXG4gIHZhciBpbnNlcnRNYXJrZXIgPSBmdW5jdGlvbiBpbnNlcnRNYXJrZXIoaWQpIHtcbiAgICB2YXIgcHJldiA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChwcmV2ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBwcmV2O1xuICAgIH1cblxuICAgIG1hcmtlcnNbaWRdID0gc2l6ZXMubGVuZ3RoO1xuICAgIHNpemVzLnB1c2goMCk7XG4gICAgcmVzZXRJZE5hbWVzKG5hbWVzLCBpZCk7XG5cbiAgICByZXR1cm4gbWFya2Vyc1tpZF07XG4gIH07XG5cbiAgdmFyIGluc2VydFJ1bGVzID0gZnVuY3Rpb24gaW5zZXJ0UnVsZXMoaWQsIGNzc1J1bGVzLCBuYW1lKSB7XG4gICAgdmFyIG1hcmtlciA9IGluc2VydE1hcmtlcihpZCk7XG4gICAgdmFyIHNoZWV0ID0gc2hlZXRGb3JUYWcoZWwpO1xuICAgIHZhciBpbnNlcnRJbmRleCA9IGFkZFVwVW50aWxJbmRleChzaXplcywgbWFya2VyKTtcblxuICAgIHZhciBpbmplY3RlZFJ1bGVzID0gMDtcbiAgICB2YXIgaW1wb3J0UnVsZXMgPSBbXTtcbiAgICB2YXIgY3NzUnVsZXNTaXplID0gY3NzUnVsZXMubGVuZ3RoO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjc3NSdWxlc1NpemU7IGkgKz0gMSkge1xuICAgICAgdmFyIGNzc1J1bGUgPSBjc3NSdWxlc1tpXTtcbiAgICAgIHZhciBtYXlIYXZlSW1wb3J0ID0gZXh0cmFjdEltcG9ydDsgLyogQGltcG9ydCBydWxlcyBhcmUgcmVvcmRlcmVkIHRvIGFwcGVhciBmaXJzdCAqL1xuICAgICAgaWYgKG1heUhhdmVJbXBvcnQgJiYgY3NzUnVsZS5pbmRleE9mKCdAaW1wb3J0JykgIT09IC0xKSB7XG4gICAgICAgIGltcG9ydFJ1bGVzLnB1c2goY3NzUnVsZSk7XG4gICAgICB9IGVsc2UgaWYgKHNhZmVJbnNlcnRSdWxlKHNoZWV0LCBjc3NSdWxlLCBpbnNlcnRJbmRleCArIGluamVjdGVkUnVsZXMpKSB7XG4gICAgICAgIG1heUhhdmVJbXBvcnQgPSBmYWxzZTtcbiAgICAgICAgaW5qZWN0ZWRSdWxlcyArPSAxO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChleHRyYWN0SW1wb3J0ICYmIGltcG9ydFJ1bGVzLmxlbmd0aCA+IDApIHtcbiAgICAgIHVzZWRJbXBvcnRSdWxlVGFnID0gdHJ1ZTtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIGdldEltcG9ydFJ1bGVUYWcoKS5pbnNlcnRSdWxlcyhpZCArICctaW1wb3J0JywgaW1wb3J0UnVsZXMpO1xuICAgIH1cblxuICAgIHNpemVzW21hcmtlcl0gKz0gaW5qZWN0ZWRSdWxlczsgLyogYWRkIHVwIG5vIG9mIGluamVjdGVkIHJ1bGVzICovXG4gICAgYWRkTmFtZUZvcklkKG5hbWVzLCBpZCwgbmFtZSk7XG4gIH07XG5cbiAgdmFyIHJlbW92ZVJ1bGVzID0gZnVuY3Rpb24gcmVtb3ZlUnVsZXMoaWQpIHtcbiAgICB2YXIgbWFya2VyID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKG1hcmtlciA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG5cbiAgICB2YXIgc2l6ZSA9IHNpemVzW21hcmtlcl07XG4gICAgdmFyIHNoZWV0ID0gc2hlZXRGb3JUYWcoZWwpO1xuICAgIHZhciByZW1vdmFsSW5kZXggPSBhZGRVcFVudGlsSW5kZXgoc2l6ZXMsIG1hcmtlcikgLSAxO1xuICAgIGRlbGV0ZVJ1bGVzKHNoZWV0LCByZW1vdmFsSW5kZXgsIHNpemUpO1xuICAgIHNpemVzW21hcmtlcl0gPSAwO1xuICAgIHJlc2V0SWROYW1lcyhuYW1lcywgaWQpO1xuXG4gICAgaWYgKGV4dHJhY3RJbXBvcnQgJiYgdXNlZEltcG9ydFJ1bGVUYWcpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIGdldEltcG9ydFJ1bGVUYWcoKS5yZW1vdmVSdWxlcyhpZCArICctaW1wb3J0Jyk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBjc3MgPSBmdW5jdGlvbiBjc3MoKSB7XG4gICAgdmFyIF9zaGVldEZvclRhZyA9IHNoZWV0Rm9yVGFnKGVsKSxcbiAgICAgICAgY3NzUnVsZXMgPSBfc2hlZXRGb3JUYWcuY3NzUnVsZXM7XG5cbiAgICB2YXIgc3RyID0gJyc7XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gICAgZm9yICh2YXIgaWQgaW4gbWFya2Vycykge1xuICAgICAgc3RyICs9IG1ha2VUZXh0TWFya2VyKGlkKTtcbiAgICAgIHZhciBtYXJrZXIgPSBtYXJrZXJzW2lkXTtcbiAgICAgIHZhciBlbmQgPSBhZGRVcFVudGlsSW5kZXgoc2l6ZXMsIG1hcmtlcik7XG4gICAgICB2YXIgc2l6ZSA9IHNpemVzW21hcmtlcl07XG4gICAgICBmb3IgKHZhciBpID0gZW5kIC0gc2l6ZTsgaSA8IGVuZDsgaSArPSAxKSB7XG4gICAgICAgIHZhciBydWxlID0gY3NzUnVsZXNbaV07XG4gICAgICAgIGlmIChydWxlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBzdHIgKz0gcnVsZS5jc3NUZXh0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0cjtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGNsb25lOiBmdW5jdGlvbiBjbG9uZSgpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoNSk7XG4gICAgfSxcblxuICAgIGNzczogY3NzLFxuICAgIGdldElkczogZ2V0SWRzRnJvbU1hcmtlcnNGYWN0b3J5KG1hcmtlcnMpLFxuICAgIGhhc05hbWVGb3JJZDogaGFzTmFtZUZvcklkKG5hbWVzKSxcbiAgICBpbnNlcnRNYXJrZXI6IGluc2VydE1hcmtlcixcbiAgICBpbnNlcnRSdWxlczogaW5zZXJ0UnVsZXMsXG4gICAgcmVtb3ZlUnVsZXM6IHJlbW92ZVJ1bGVzLFxuICAgIHNlYWxlZDogZmFsc2UsXG4gICAgc3R5bGVUYWc6IGVsLFxuICAgIHRvRWxlbWVudDogd3JhcEFzRWxlbWVudChjc3MsIG5hbWVzKSxcbiAgICB0b0hUTUw6IHdyYXBBc0h0bWxUYWcoY3NzLCBuYW1lcylcbiAgfTtcbn07XG5cbnZhciBtYWtlVGV4dE5vZGUgPSBmdW5jdGlvbiBtYWtlVGV4dE5vZGUoaWQpIHtcbiAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG1ha2VUZXh0TWFya2VyKGlkKSk7XG59O1xuXG52YXIgbWFrZUJyb3dzZXJUYWcgPSBmdW5jdGlvbiBtYWtlQnJvd3NlclRhZyhlbCwgZ2V0SW1wb3J0UnVsZVRhZykge1xuICB2YXIgbmFtZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB2YXIgbWFya2VycyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgdmFyIGV4dHJhY3RJbXBvcnQgPSBnZXRJbXBvcnRSdWxlVGFnICE9PSB1bmRlZmluZWQ7XG5cbiAgLyogaW5kaWNhdGVzIHdoZXRoZXIgZ2V0SW1wb3J0UnVsZVRhZyB3YXMgY2FsbGVkICovXG4gIHZhciB1c2VkSW1wb3J0UnVsZVRhZyA9IGZhbHNlO1xuXG4gIHZhciBpbnNlcnRNYXJrZXIgPSBmdW5jdGlvbiBpbnNlcnRNYXJrZXIoaWQpIHtcbiAgICB2YXIgcHJldiA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChwcmV2ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBwcmV2O1xuICAgIH1cblxuICAgIG1hcmtlcnNbaWRdID0gbWFrZVRleHROb2RlKGlkKTtcbiAgICBlbC5hcHBlbmRDaGlsZChtYXJrZXJzW2lkXSk7XG4gICAgbmFtZXNbaWRdID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICAgIHJldHVybiBtYXJrZXJzW2lkXTtcbiAgfTtcblxuICB2YXIgaW5zZXJ0UnVsZXMgPSBmdW5jdGlvbiBpbnNlcnRSdWxlcyhpZCwgY3NzUnVsZXMsIG5hbWUpIHtcbiAgICB2YXIgbWFya2VyID0gaW5zZXJ0TWFya2VyKGlkKTtcbiAgICB2YXIgaW1wb3J0UnVsZXMgPSBbXTtcbiAgICB2YXIgY3NzUnVsZXNTaXplID0gY3NzUnVsZXMubGVuZ3RoO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjc3NSdWxlc1NpemU7IGkgKz0gMSkge1xuICAgICAgdmFyIHJ1bGUgPSBjc3NSdWxlc1tpXTtcbiAgICAgIHZhciBtYXlIYXZlSW1wb3J0ID0gZXh0cmFjdEltcG9ydDtcbiAgICAgIGlmIChtYXlIYXZlSW1wb3J0ICYmIHJ1bGUuaW5kZXhPZignQGltcG9ydCcpICE9PSAtMSkge1xuICAgICAgICBpbXBvcnRSdWxlcy5wdXNoKHJ1bGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbWF5SGF2ZUltcG9ydCA9IGZhbHNlO1xuICAgICAgICB2YXIgc2VwYXJhdG9yID0gaSA9PT0gY3NzUnVsZXNTaXplIC0gMSA/ICcnIDogJyAnO1xuICAgICAgICBtYXJrZXIuYXBwZW5kRGF0YSgnJyArIHJ1bGUgKyBzZXBhcmF0b3IpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGFkZE5hbWVGb3JJZChuYW1lcywgaWQsIG5hbWUpO1xuXG4gICAgaWYgKGV4dHJhY3RJbXBvcnQgJiYgaW1wb3J0UnVsZXMubGVuZ3RoID4gMCkge1xuICAgICAgdXNlZEltcG9ydFJ1bGVUYWcgPSB0cnVlO1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgZ2V0SW1wb3J0UnVsZVRhZygpLmluc2VydFJ1bGVzKGlkICsgJy1pbXBvcnQnLCBpbXBvcnRSdWxlcyk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZW1vdmVSdWxlcyA9IGZ1bmN0aW9uIHJlbW92ZVJ1bGVzKGlkKSB7XG4gICAgdmFyIG1hcmtlciA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChtYXJrZXIgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgLyogY3JlYXRlIG5ldyBlbXB0eSB0ZXh0IG5vZGUgYW5kIHJlcGxhY2UgdGhlIGN1cnJlbnQgb25lICovXG4gICAgdmFyIG5ld01hcmtlciA9IG1ha2VUZXh0Tm9kZShpZCk7XG4gICAgZWwucmVwbGFjZUNoaWxkKG5ld01hcmtlciwgbWFya2VyKTtcbiAgICBtYXJrZXJzW2lkXSA9IG5ld01hcmtlcjtcbiAgICByZXNldElkTmFtZXMobmFtZXMsIGlkKTtcblxuICAgIGlmIChleHRyYWN0SW1wb3J0ICYmIHVzZWRJbXBvcnRSdWxlVGFnKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBnZXRJbXBvcnRSdWxlVGFnKCkucmVtb3ZlUnVsZXMoaWQgKyAnLWltcG9ydCcpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgY3NzID0gZnVuY3Rpb24gY3NzKCkge1xuICAgIHZhciBzdHIgPSAnJztcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgICBmb3IgKHZhciBpZCBpbiBtYXJrZXJzKSB7XG4gICAgICBzdHIgKz0gbWFya2Vyc1tpZF0uZGF0YTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3RyO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgY2xvbmU6IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig1KTtcbiAgICB9LFxuXG4gICAgY3NzOiBjc3MsXG4gICAgZ2V0SWRzOiBnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkobWFya2VycyksXG4gICAgaGFzTmFtZUZvcklkOiBoYXNOYW1lRm9ySWQobmFtZXMpLFxuICAgIGluc2VydE1hcmtlcjogaW5zZXJ0TWFya2VyLFxuICAgIGluc2VydFJ1bGVzOiBpbnNlcnRSdWxlcyxcbiAgICByZW1vdmVSdWxlczogcmVtb3ZlUnVsZXMsXG4gICAgc2VhbGVkOiBmYWxzZSxcbiAgICBzdHlsZVRhZzogZWwsXG4gICAgdG9FbGVtZW50OiB3cmFwQXNFbGVtZW50KGNzcywgbmFtZXMpLFxuICAgIHRvSFRNTDogd3JhcEFzSHRtbFRhZyhjc3MsIG5hbWVzKVxuICB9O1xufTtcblxudmFyIG1ha2VTZXJ2ZXJUYWcgPSBmdW5jdGlvbiBtYWtlU2VydmVyVGFnKG5hbWVzQXJnLCBtYXJrZXJzQXJnKSB7XG4gIHZhciBuYW1lcyA9IG5hbWVzQXJnID09PSB1bmRlZmluZWQgPyBPYmplY3QuY3JlYXRlKG51bGwpIDogbmFtZXNBcmc7XG4gIHZhciBtYXJrZXJzID0gbWFya2Vyc0FyZyA9PT0gdW5kZWZpbmVkID8gT2JqZWN0LmNyZWF0ZShudWxsKSA6IG1hcmtlcnNBcmc7XG5cbiAgdmFyIGluc2VydE1hcmtlciA9IGZ1bmN0aW9uIGluc2VydE1hcmtlcihpZCkge1xuICAgIHZhciBwcmV2ID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKHByZXYgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHByZXY7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hcmtlcnNbaWRdID0gWycnXTtcbiAgfTtcblxuICB2YXIgaW5zZXJ0UnVsZXMgPSBmdW5jdGlvbiBpbnNlcnRSdWxlcyhpZCwgY3NzUnVsZXMsIG5hbWUpIHtcbiAgICB2YXIgbWFya2VyID0gaW5zZXJ0TWFya2VyKGlkKTtcbiAgICBtYXJrZXJbMF0gKz0gY3NzUnVsZXMuam9pbignICcpO1xuICAgIGFkZE5hbWVGb3JJZChuYW1lcywgaWQsIG5hbWUpO1xuICB9O1xuXG4gIHZhciByZW1vdmVSdWxlcyA9IGZ1bmN0aW9uIHJlbW92ZVJ1bGVzKGlkKSB7XG4gICAgdmFyIG1hcmtlciA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChtYXJrZXIgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuICAgIG1hcmtlclswXSA9ICcnO1xuICAgIHJlc2V0SWROYW1lcyhuYW1lcywgaWQpO1xuICB9O1xuXG4gIHZhciBjc3MgPSBmdW5jdGlvbiBjc3MoKSB7XG4gICAgdmFyIHN0ciA9ICcnO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgICBmb3IgKHZhciBpZCBpbiBtYXJrZXJzKSB7XG4gICAgICB2YXIgY3NzRm9ySWQgPSBtYXJrZXJzW2lkXVswXTtcbiAgICAgIGlmIChjc3NGb3JJZCkge1xuICAgICAgICBzdHIgKz0gbWFrZVRleHRNYXJrZXIoaWQpICsgY3NzRm9ySWQ7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzdHI7XG4gIH07XG5cbiAgdmFyIGNsb25lID0gZnVuY3Rpb24gY2xvbmUoKSB7XG4gICAgdmFyIG5hbWVzQ2xvbmUgPSBjbG9uZU5hbWVzKG5hbWVzKTtcbiAgICB2YXIgbWFya2Vyc0Nsb25lID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgICBmb3IgKHZhciBpZCBpbiBtYXJrZXJzKSB7XG4gICAgICBtYXJrZXJzQ2xvbmVbaWRdID0gW21hcmtlcnNbaWRdWzBdXTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWFrZVNlcnZlclRhZyhuYW1lc0Nsb25lLCBtYXJrZXJzQ2xvbmUpO1xuICB9O1xuXG4gIHZhciB0YWcgPSB7XG4gICAgY2xvbmU6IGNsb25lLFxuICAgIGNzczogY3NzLFxuICAgIGdldElkczogZ2V0SWRzRnJvbU1hcmtlcnNGYWN0b3J5KG1hcmtlcnMpLFxuICAgIGhhc05hbWVGb3JJZDogaGFzTmFtZUZvcklkKG5hbWVzKSxcbiAgICBpbnNlcnRNYXJrZXI6IGluc2VydE1hcmtlcixcbiAgICBpbnNlcnRSdWxlczogaW5zZXJ0UnVsZXMsXG4gICAgcmVtb3ZlUnVsZXM6IHJlbW92ZVJ1bGVzLFxuICAgIHNlYWxlZDogZmFsc2UsXG4gICAgc3R5bGVUYWc6IG51bGwsXG4gICAgdG9FbGVtZW50OiB3cmFwQXNFbGVtZW50KGNzcywgbmFtZXMpLFxuICAgIHRvSFRNTDogd3JhcEFzSHRtbFRhZyhjc3MsIG5hbWVzKVxuICB9O1xuXG4gIHJldHVybiB0YWc7XG59O1xuXG52YXIgbWFrZVRhZyA9IGZ1bmN0aW9uIG1ha2VUYWcodGFyZ2V0LCB0YWdFbCwgZm9yY2VTZXJ2ZXIsIGluc2VydEJlZm9yZSwgZ2V0SW1wb3J0UnVsZVRhZykge1xuICBpZiAoSVNfQlJPV1NFUiAmJiAhZm9yY2VTZXJ2ZXIpIHtcbiAgICB2YXIgZWwgPSBtYWtlU3R5bGVUYWcodGFyZ2V0LCB0YWdFbCwgaW5zZXJ0QmVmb3JlKTtcblxuICAgIGlmIChESVNBQkxFX1NQRUVEWSkge1xuICAgICAgcmV0dXJuIG1ha2VCcm93c2VyVGFnKGVsLCBnZXRJbXBvcnRSdWxlVGFnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG1ha2VTcGVlZHlUYWcoZWwsIGdldEltcG9ydFJ1bGVUYWcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtYWtlU2VydmVyVGFnKCk7XG59O1xuXG52YXIgcmVoeWRyYXRlID0gZnVuY3Rpb24gcmVoeWRyYXRlKHRhZywgZWxzLCBleHRyYWN0ZWQpIHtcbiAgLyogYWRkIGFsbCBleHRyYWN0ZWQgY29tcG9uZW50cyB0byB0aGUgbmV3IHRhZyAqL1xuICBmb3IgKHZhciBpID0gMCwgbGVuID0gZXh0cmFjdGVkLmxlbmd0aDsgaSA8IGxlbjsgaSArPSAxKSB7XG4gICAgdmFyIF9leHRyYWN0ZWQkaSA9IGV4dHJhY3RlZFtpXSxcbiAgICAgICAgY29tcG9uZW50SWQgPSBfZXh0cmFjdGVkJGkuY29tcG9uZW50SWQsXG4gICAgICAgIGNzc0Zyb21ET00gPSBfZXh0cmFjdGVkJGkuY3NzRnJvbURPTTtcblxuICAgIHZhciBjc3NSdWxlcyA9IHNwbGl0QnlSdWxlcyhjc3NGcm9tRE9NKTtcbiAgICB0YWcuaW5zZXJ0UnVsZXMoY29tcG9uZW50SWQsIGNzc1J1bGVzKTtcbiAgfVxuXG4gIC8qIHJlbW92ZSBvbGQgSFRNTFN0eWxlRWxlbWVudHMsIHNpbmNlIHRoZXkgaGF2ZSBiZWVuIHJlaHlkcmF0ZWQgKi9cbiAgZm9yICh2YXIgX2kgPSAwLCBfbGVuID0gZWxzLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSArPSAxKSB7XG4gICAgdmFyIGVsID0gZWxzW19pXTtcbiAgICBpZiAoZWwucGFyZW50Tm9kZSkge1xuICAgICAgZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbCk7XG4gICAgfVxuICB9XG59O1xuXG4vLyBcblxudmFyIFNQTElUX1JFR0VYID0gL1xccysvO1xuXG4vKiBkZXRlcm1pbmUgdGhlIG1heGltdW0gbnVtYmVyIG9mIGNvbXBvbmVudHMgYmVmb3JlIHRhZ3MgYXJlIHNoYXJkZWQgKi9cbnZhciBNQVhfU0laRSA9IHZvaWQgMDtcbmlmIChJU19CUk9XU0VSKSB7XG4gIC8qIGluIHNwZWVkeSBtb2RlIHdlIGNhbiBrZWVwIGEgbG90IG1vcmUgcnVsZXMgaW4gYSBzaGVldCBiZWZvcmUgYSBzbG93ZG93biBjYW4gYmUgZXhwZWN0ZWQgKi9cbiAgTUFYX1NJWkUgPSBESVNBQkxFX1NQRUVEWSA/IDQwIDogMTAwMDtcbn0gZWxzZSB7XG4gIC8qIGZvciBzZXJ2ZXJzIHdlIGRvIG5vdCBuZWVkIHRvIHNoYXJkIGF0IGFsbCAqL1xuICBNQVhfU0laRSA9IC0xO1xufVxuXG52YXIgc2hlZXRSdW5uaW5nSWQgPSAwO1xudmFyIG1hc3RlciA9IHZvaWQgMDtcblxudmFyIFN0eWxlU2hlZXQgPSBmdW5jdGlvbiAoKSB7XG5cbiAgLyogYSBtYXAgZnJvbSBpZHMgdG8gdGFncyAqL1xuXG4gIC8qIGRlZmVycmVkIHJ1bGVzIGZvciBhIGdpdmVuIGlkICovXG5cbiAgLyogdGhpcyBpcyB1c2VkIGZvciBub3QgcmVpbmplY3RpbmcgcnVsZXMgdmlhIGhhc05hbWVGb3JJZCgpICovXG5cbiAgLyogd2hlbiBydWxlcyBmb3IgYW4gaWQgYXJlIHJlbW92ZWQgdXNpbmcgcmVtb3ZlKCkgd2UgaGF2ZSB0byBpZ25vcmUgcmVoeWRyYXRlZE5hbWVzIGZvciBpdCAqL1xuXG4gIC8qIGEgbGlzdCBvZiB0YWdzIGJlbG9uZ2luZyB0byB0aGlzIFN0eWxlU2hlZXQgKi9cblxuICAvKiBhIHRhZyBmb3IgaW1wb3J0IHJ1bGVzICovXG5cbiAgLyogY3VycmVudCBjYXBhY2l0eSB1bnRpbCBhIG5ldyB0YWcgbXVzdCBiZSBjcmVhdGVkICovXG5cbiAgLyogY2hpbGRyZW4gKGFrYSBjbG9uZXMpIG9mIHRoaXMgU3R5bGVTaGVldCBpbmhlcml0aW5nIGFsbCBhbmQgZnV0dXJlIGluamVjdGlvbnMgKi9cblxuICBmdW5jdGlvbiBTdHlsZVNoZWV0KCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICB2YXIgdGFyZ2V0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBJU19CUk9XU0VSID8gZG9jdW1lbnQuaGVhZCA6IG51bGw7XG4gICAgdmFyIGZvcmNlU2VydmVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBTdHlsZVNoZWV0KTtcblxuICAgIHRoaXMuZ2V0SW1wb3J0UnVsZVRhZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpbXBvcnRSdWxlVGFnID0gX3RoaXMuaW1wb3J0UnVsZVRhZztcblxuICAgICAgaWYgKGltcG9ydFJ1bGVUYWcgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gaW1wb3J0UnVsZVRhZztcbiAgICAgIH1cblxuICAgICAgdmFyIGZpcnN0VGFnID0gX3RoaXMudGFnc1swXTtcbiAgICAgIHZhciBpbnNlcnRCZWZvcmUgPSB0cnVlO1xuXG4gICAgICByZXR1cm4gX3RoaXMuaW1wb3J0UnVsZVRhZyA9IG1ha2VUYWcoX3RoaXMudGFyZ2V0LCBmaXJzdFRhZyA/IGZpcnN0VGFnLnN0eWxlVGFnIDogbnVsbCwgX3RoaXMuZm9yY2VTZXJ2ZXIsIGluc2VydEJlZm9yZSk7XG4gICAgfTtcblxuICAgIHNoZWV0UnVubmluZ0lkICs9IDE7XG4gICAgdGhpcy5pZCA9IHNoZWV0UnVubmluZ0lkO1xuICAgIHRoaXMuZm9yY2VTZXJ2ZXIgPSBmb3JjZVNlcnZlcjtcbiAgICB0aGlzLnRhcmdldCA9IGZvcmNlU2VydmVyID8gbnVsbCA6IHRhcmdldDtcbiAgICB0aGlzLnRhZ01hcCA9IHt9O1xuICAgIHRoaXMuZGVmZXJyZWQgPSB7fTtcbiAgICB0aGlzLnJlaHlkcmF0ZWROYW1lcyA9IHt9O1xuICAgIHRoaXMuaWdub3JlUmVoeWRyYXRlZE5hbWVzID0ge307XG4gICAgdGhpcy50YWdzID0gW107XG4gICAgdGhpcy5jYXBhY2l0eSA9IDE7XG4gICAgdGhpcy5jbG9uZXMgPSBbXTtcbiAgfVxuXG4gIC8qIHJlaHlkcmF0ZSBhbGwgU1NSJ2Qgc3R5bGUgdGFncyAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUucmVoeWRyYXRlID0gZnVuY3Rpb24gcmVoeWRyYXRlJCQxKCkge1xuICAgIGlmICghSVNfQlJPV1NFUiB8fCB0aGlzLmZvcmNlU2VydmVyKSByZXR1cm4gdGhpcztcblxuICAgIHZhciBlbHMgPSBbXTtcbiAgICB2YXIgZXh0cmFjdGVkID0gW107XG4gICAgdmFyIGlzU3RyZWFtZWQgPSBmYWxzZTtcblxuICAgIC8qIHJldHJpZXZlIGFsbCBvZiBvdXIgU1NSIHN0eWxlIGVsZW1lbnRzIGZyb20gdGhlIERPTSAqL1xuICAgIHZhciBub2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3N0eWxlWycgKyBTQ19BVFRSICsgJ11bJyArIFNDX1ZFUlNJT05fQVRUUiArICc9XCInICsgXCI0LjEuM1wiICsgJ1wiXScpO1xuXG4gICAgdmFyIG5vZGVzU2l6ZSA9IG5vZGVzLmxlbmd0aDtcblxuICAgIC8qIGFib3J0IHJlaHlkcmF0aW9uIGlmIG5vIHByZXZpb3VzIHN0eWxlIHRhZ3Mgd2VyZSBmb3VuZCAqL1xuICAgIGlmICghbm9kZXNTaXplKSByZXR1cm4gdGhpcztcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZXNTaXplOyBpICs9IDEpIHtcbiAgICAgIHZhciBlbCA9IG5vZGVzW2ldO1xuXG4gICAgICAvKiBjaGVjayBpZiBzdHlsZSB0YWcgaXMgYSBzdHJlYW1lZCB0YWcgKi9cbiAgICAgIGlmICghaXNTdHJlYW1lZCkgaXNTdHJlYW1lZCA9ICEhZWwuZ2V0QXR0cmlidXRlKFNDX1NUUkVBTV9BVFRSKTtcblxuICAgICAgLyogcmV0cmlldmUgYWxsIGNvbXBvbmVudCBuYW1lcyAqL1xuICAgICAgdmFyIGVsTmFtZXMgPSAoZWwuZ2V0QXR0cmlidXRlKFNDX0FUVFIpIHx8ICcnKS50cmltKCkuc3BsaXQoU1BMSVRfUkVHRVgpO1xuICAgICAgdmFyIGVsTmFtZXNTaXplID0gZWxOYW1lcy5sZW5ndGg7XG4gICAgICBmb3IgKHZhciBqID0gMCwgbmFtZTsgaiA8IGVsTmFtZXNTaXplOyBqICs9IDEpIHtcbiAgICAgICAgbmFtZSA9IGVsTmFtZXNbal07XG4gICAgICAgIC8qIGFkZCByZWh5ZHJhdGVkIG5hbWUgdG8gc2hlZXQgdG8gYXZvaWQgcmUtYWRkaW5nIHN0eWxlcyAqL1xuICAgICAgICB0aGlzLnJlaHlkcmF0ZWROYW1lc1tuYW1lXSA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIC8qIGV4dHJhY3QgYWxsIGNvbXBvbmVudHMgYW5kIHRoZWlyIENTUyAqL1xuICAgICAgZXh0cmFjdGVkLnB1c2guYXBwbHkoZXh0cmFjdGVkLCBleHRyYWN0Q29tcHMoZWwudGV4dENvbnRlbnQpKTtcblxuICAgICAgLyogc3RvcmUgb3JpZ2luYWwgSFRNTFN0eWxlRWxlbWVudCAqL1xuICAgICAgZWxzLnB1c2goZWwpO1xuICAgIH1cblxuICAgIC8qIGFib3J0IHJlaHlkcmF0aW9uIGlmIG5vdGhpbmcgd2FzIGV4dHJhY3RlZCAqL1xuICAgIHZhciBleHRyYWN0ZWRTaXplID0gZXh0cmFjdGVkLmxlbmd0aDtcbiAgICBpZiAoIWV4dHJhY3RlZFNpemUpIHJldHVybiB0aGlzO1xuXG4gICAgLyogY3JlYXRlIGEgdGFnIHRvIGJlIHVzZWQgZm9yIHJlaHlkcmF0aW9uICovXG4gICAgdmFyIHRhZyA9IHRoaXMubWFrZVRhZyhudWxsKTtcblxuICAgIHJlaHlkcmF0ZSh0YWcsIGVscywgZXh0cmFjdGVkKTtcblxuICAgIC8qIHJlc2V0IGNhcGFjaXR5IGFuZCBhZGp1c3QgTUFYX1NJWkUgYnkgdGhlIGluaXRpYWwgc2l6ZSBvZiB0aGUgcmVoeWRyYXRpb24gKi9cbiAgICB0aGlzLmNhcGFjaXR5ID0gTWF0aC5tYXgoMSwgTUFYX1NJWkUgLSBleHRyYWN0ZWRTaXplKTtcbiAgICB0aGlzLnRhZ3MucHVzaCh0YWcpO1xuXG4gICAgLyogcmV0cmlldmUgYWxsIGNvbXBvbmVudCBpZHMgKi9cbiAgICBmb3IgKHZhciBfaiA9IDA7IF9qIDwgZXh0cmFjdGVkU2l6ZTsgX2ogKz0gMSkge1xuICAgICAgdGhpcy50YWdNYXBbZXh0cmFjdGVkW19qXS5jb21wb25lbnRJZF0gPSB0YWc7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgLyogcmV0cmlldmUgYSBcIm1hc3RlclwiIGluc3RhbmNlIG9mIFN0eWxlU2hlZXQgd2hpY2ggaXMgdHlwaWNhbGx5IHVzZWQgd2hlbiBubyBvdGhlciBpcyBhdmFpbGFibGVcbiAgICogVGhlIG1hc3RlciBTdHlsZVNoZWV0IGlzIHRhcmdldGVkIGJ5IGNyZWF0ZUdsb2JhbFN0eWxlLCBrZXlmcmFtZXMsIGFuZCBjb21wb25lbnRzIG91dHNpZGUgb2YgYW55XG4gICAgKiBTdHlsZVNoZWV0TWFuYWdlcidzIGNvbnRleHQgKi9cblxuXG4gIC8qIHJlc2V0IHRoZSBpbnRlcm5hbCBcIm1hc3RlclwiIGluc3RhbmNlICovXG4gIFN0eWxlU2hlZXQucmVzZXQgPSBmdW5jdGlvbiByZXNldCgpIHtcbiAgICB2YXIgZm9yY2VTZXJ2ZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgbWFzdGVyID0gbmV3IFN0eWxlU2hlZXQodW5kZWZpbmVkLCBmb3JjZVNlcnZlcikucmVoeWRyYXRlKCk7XG4gIH07XG5cbiAgLyogYWRkcyBcImNoaWxkcmVuXCIgdG8gdGhlIFN0eWxlU2hlZXQgdGhhdCBpbmhlcml0IGFsbCBvZiB0aGUgcGFyZW50cycgcnVsZXNcbiAgICogd2hpbGUgdGhlaXIgb3duIHJ1bGVzIGRvIG5vdCBhZmZlY3QgdGhlIHBhcmVudCAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbiBjbG9uZSgpIHtcbiAgICB2YXIgc2hlZXQgPSBuZXcgU3R5bGVTaGVldCh0aGlzLnRhcmdldCwgdGhpcy5mb3JjZVNlcnZlcik7XG5cbiAgICAvKiBhZGQgdG8gY2xvbmUgYXJyYXkgKi9cbiAgICB0aGlzLmNsb25lcy5wdXNoKHNoZWV0KTtcblxuICAgIC8qIGNsb25lIGFsbCB0YWdzICovXG4gICAgc2hlZXQudGFncyA9IHRoaXMudGFncy5tYXAoZnVuY3Rpb24gKHRhZykge1xuICAgICAgdmFyIGlkcyA9IHRhZy5nZXRJZHMoKTtcbiAgICAgIHZhciBuZXdUYWcgPSB0YWcuY2xvbmUoKTtcblxuICAgICAgLyogcmVjb25zdHJ1Y3QgdGFnTWFwICovXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGlkcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBzaGVldC50YWdNYXBbaWRzW2ldXSA9IG5ld1RhZztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5ld1RhZztcbiAgICB9KTtcblxuICAgIC8qIGNsb25lIG90aGVyIG1hcHMgKi9cbiAgICBzaGVldC5yZWh5ZHJhdGVkTmFtZXMgPSBfZXh0ZW5kcyh7fSwgdGhpcy5yZWh5ZHJhdGVkTmFtZXMpO1xuICAgIHNoZWV0LmRlZmVycmVkID0gX2V4dGVuZHMoe30sIHRoaXMuZGVmZXJyZWQpO1xuXG4gICAgcmV0dXJuIHNoZWV0O1xuICB9O1xuXG4gIC8qIGZvcmNlIFN0eWxlU2hlZXQgdG8gY3JlYXRlIGEgbmV3IHRhZyBvbiB0aGUgbmV4dCBpbmplY3Rpb24gKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLnNlYWxBbGxUYWdzID0gZnVuY3Rpb24gc2VhbEFsbFRhZ3MoKSB7XG4gICAgdGhpcy5jYXBhY2l0eSA9IDE7XG5cbiAgICB0aGlzLnRhZ3MuZm9yRWFjaChmdW5jdGlvbiAodGFnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIHRhZy5zZWFsZWQgPSB0cnVlO1xuICAgIH0pO1xuICB9O1xuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLm1ha2VUYWcgPSBmdW5jdGlvbiBtYWtlVGFnJCQxKHRhZykge1xuICAgIHZhciBsYXN0RWwgPSB0YWcgPyB0YWcuc3R5bGVUYWcgOiBudWxsO1xuICAgIHZhciBpbnNlcnRCZWZvcmUgPSBmYWxzZTtcblxuICAgIHJldHVybiBtYWtlVGFnKHRoaXMudGFyZ2V0LCBsYXN0RWwsIHRoaXMuZm9yY2VTZXJ2ZXIsIGluc2VydEJlZm9yZSwgdGhpcy5nZXRJbXBvcnRSdWxlVGFnKTtcbiAgfTtcblxuICAvKiBnZXQgYSB0YWcgZm9yIGEgZ2l2ZW4gY29tcG9uZW50SWQsIGFzc2lnbiB0aGUgY29tcG9uZW50SWQgdG8gb25lLCBvciBzaGFyZCAqL1xuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5nZXRUYWdGb3JJZCA9IGZ1bmN0aW9uIGdldFRhZ0ZvcklkKGlkKSB7XG4gICAgLyogc2ltcGx5IHJldHVybiBhIHRhZywgd2hlbiB0aGUgY29tcG9uZW50SWQgd2FzIGFscmVhZHkgYXNzaWduZWQgb25lICovXG4gICAgdmFyIHByZXYgPSB0aGlzLnRhZ01hcFtpZF07XG4gICAgaWYgKHByZXYgIT09IHVuZGVmaW5lZCAmJiAhcHJldi5zZWFsZWQpIHtcbiAgICAgIHJldHVybiBwcmV2O1xuICAgIH1cblxuICAgIHZhciB0YWcgPSB0aGlzLnRhZ3NbdGhpcy50YWdzLmxlbmd0aCAtIDFdO1xuXG4gICAgLyogc2hhcmQgKGNyZWF0ZSBhIG5ldyB0YWcpIGlmIHRoZSB0YWcgaXMgZXhoYXVzdGVkIChTZWUgTUFYX1NJWkUpICovXG4gICAgdGhpcy5jYXBhY2l0eSAtPSAxO1xuXG4gICAgaWYgKHRoaXMuY2FwYWNpdHkgPT09IDApIHtcbiAgICAgIHRoaXMuY2FwYWNpdHkgPSBNQVhfU0laRTtcbiAgICAgIHRhZyA9IHRoaXMubWFrZVRhZyh0YWcpO1xuICAgICAgdGhpcy50YWdzLnB1c2godGFnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy50YWdNYXBbaWRdID0gdGFnO1xuICB9O1xuXG4gIC8qIG1haW5seSBmb3IgY3JlYXRlR2xvYmFsU3R5bGUgdG8gY2hlY2sgZm9yIGl0cyBpZCAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuaGFzSWQgPSBmdW5jdGlvbiBoYXNJZChpZCkge1xuICAgIHJldHVybiB0aGlzLnRhZ01hcFtpZF0gIT09IHVuZGVmaW5lZDtcbiAgfTtcblxuICAvKiBjYWNoaW5nIGxheWVyIGNoZWNraW5nIGlkK25hbWUgdG8gYWxyZWFkeSBoYXZlIGEgY29ycmVzcG9uZGluZyB0YWcgYW5kIGluamVjdGVkIHJ1bGVzICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5oYXNOYW1lRm9ySWQgPSBmdW5jdGlvbiBoYXNOYW1lRm9ySWQoaWQsIG5hbWUpIHtcbiAgICAvKiBleGNlcHRpb24gZm9yIHJlaHlkcmF0ZWQgbmFtZXMgd2hpY2ggYXJlIGNoZWNrZWQgc2VwYXJhdGVseSAqL1xuICAgIGlmICh0aGlzLmlnbm9yZVJlaHlkcmF0ZWROYW1lc1tpZF0gPT09IHVuZGVmaW5lZCAmJiB0aGlzLnJlaHlkcmF0ZWROYW1lc1tuYW1lXSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgdmFyIHRhZyA9IHRoaXMudGFnTWFwW2lkXTtcbiAgICByZXR1cm4gdGFnICE9PSB1bmRlZmluZWQgJiYgdGFnLmhhc05hbWVGb3JJZChpZCwgbmFtZSk7XG4gIH07XG5cbiAgLyogcmVnaXN0ZXJzIGEgY29tcG9uZW50SWQgYW5kIHJlZ2lzdGVycyBpdCBvbiBpdHMgdGFnICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5kZWZlcnJlZEluamVjdCA9IGZ1bmN0aW9uIGRlZmVycmVkSW5qZWN0KGlkLCBjc3NSdWxlcykge1xuICAgIC8qIGRvbid0IGluamVjdCB3aGVuIHRoZSBpZCBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQgKi9cbiAgICBpZiAodGhpcy50YWdNYXBbaWRdICE9PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgIHZhciBjbG9uZXMgPSB0aGlzLmNsb25lcztcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xvbmVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjbG9uZXNbaV0uZGVmZXJyZWRJbmplY3QoaWQsIGNzc1J1bGVzKTtcbiAgICB9XG5cbiAgICB0aGlzLmdldFRhZ0ZvcklkKGlkKS5pbnNlcnRNYXJrZXIoaWQpO1xuICAgIHRoaXMuZGVmZXJyZWRbaWRdID0gY3NzUnVsZXM7XG4gIH07XG5cbiAgLyogaW5qZWN0cyBydWxlcyBmb3IgYSBnaXZlbiBpZCB3aXRoIGEgbmFtZSB0aGF0IHdpbGwgbmVlZCB0byBiZSBjYWNoZWQgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmluamVjdCA9IGZ1bmN0aW9uIGluamVjdChpZCwgY3NzUnVsZXMsIG5hbWUpIHtcbiAgICB2YXIgY2xvbmVzID0gdGhpcy5jbG9uZXM7XG5cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xvbmVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjbG9uZXNbaV0uaW5qZWN0KGlkLCBjc3NSdWxlcywgbmFtZSk7XG4gICAgfVxuXG4gICAgdmFyIHRhZyA9IHRoaXMuZ2V0VGFnRm9ySWQoaWQpO1xuXG4gICAgLyogYWRkIGRlZmVycmVkIHJ1bGVzIGZvciBjb21wb25lbnQgKi9cbiAgICBpZiAodGhpcy5kZWZlcnJlZFtpZF0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gQ29tYmluZSBwYXNzZWQgY3NzUnVsZXMgd2l0aCBwcmV2aW91c2x5IGRlZmVycmVkIENTUyBydWxlc1xuICAgICAgLy8gTk9URTogV2UgY2Fubm90IG11dGF0ZSB0aGUgZGVmZXJyZWQgYXJyYXkgaXRzZWxmIGFzIGFsbCBjbG9uZXNcbiAgICAgIC8vIGRvIHRoZSBzYW1lIChzZWUgY2xvbmVzW2ldLmluamVjdClcbiAgICAgIHZhciBydWxlcyA9IHRoaXMuZGVmZXJyZWRbaWRdLmNvbmNhdChjc3NSdWxlcyk7XG4gICAgICB0YWcuaW5zZXJ0UnVsZXMoaWQsIHJ1bGVzLCBuYW1lKTtcblxuICAgICAgdGhpcy5kZWZlcnJlZFtpZF0gPSB1bmRlZmluZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRhZy5pbnNlcnRSdWxlcyhpZCwgY3NzUnVsZXMsIG5hbWUpO1xuICAgIH1cbiAgfTtcblxuICAvKiByZW1vdmVzIGFsbCBydWxlcyBmb3IgYSBnaXZlbiBpZCwgd2hpY2ggZG9lc24ndCByZW1vdmUgaXRzIG1hcmtlciBidXQgcmVzZXRzIGl0ICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoaWQpIHtcbiAgICB2YXIgdGFnID0gdGhpcy50YWdNYXBbaWRdO1xuICAgIGlmICh0YWcgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgdmFyIGNsb25lcyA9IHRoaXMuY2xvbmVzO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbG9uZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGNsb25lc1tpXS5yZW1vdmUoaWQpO1xuICAgIH1cblxuICAgIC8qIHJlbW92ZSBhbGwgcnVsZXMgZnJvbSB0aGUgdGFnICovXG4gICAgdGFnLnJlbW92ZVJ1bGVzKGlkKTtcblxuICAgIC8qIGlnbm9yZSBwb3NzaWJsZSByZWh5ZHJhdGVkIG5hbWVzICovXG4gICAgdGhpcy5pZ25vcmVSZWh5ZHJhdGVkTmFtZXNbaWRdID0gdHJ1ZTtcblxuICAgIC8qIGRlbGV0ZSBwb3NzaWJsZSBkZWZlcnJlZCBydWxlcyAqL1xuICAgIHRoaXMuZGVmZXJyZWRbaWRdID0gdW5kZWZpbmVkO1xuICB9O1xuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLnRvSFRNTCA9IGZ1bmN0aW9uIHRvSFRNTCgpIHtcbiAgICByZXR1cm4gdGhpcy50YWdzLm1hcChmdW5jdGlvbiAodGFnKSB7XG4gICAgICByZXR1cm4gdGFnLnRvSFRNTCgpO1xuICAgIH0pLmpvaW4oJycpO1xuICB9O1xuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLnRvUmVhY3RFbGVtZW50cyA9IGZ1bmN0aW9uIHRvUmVhY3RFbGVtZW50cygpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkO1xuXG5cbiAgICByZXR1cm4gdGhpcy50YWdzLm1hcChmdW5jdGlvbiAodGFnLCBpKSB7XG4gICAgICB2YXIga2V5ID0gJ3NjLScgKyBpZCArICctJyArIGk7XG4gICAgICByZXR1cm4gY2xvbmVFbGVtZW50KHRhZy50b0VsZW1lbnQoKSwgeyBrZXk6IGtleSB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBjcmVhdGVDbGFzcyhTdHlsZVNoZWV0LCBudWxsLCBbe1xuICAgIGtleTogJ21hc3RlcicsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQkJDEoKSB7XG4gICAgICByZXR1cm4gbWFzdGVyIHx8IChtYXN0ZXIgPSBuZXcgU3R5bGVTaGVldCgpLnJlaHlkcmF0ZSgpKTtcbiAgICB9XG5cbiAgICAvKiBOT1RFOiBUaGlzIGlzIGp1c3QgZm9yIGJhY2t3YXJkcy1jb21wYXRpYmlsaXR5IHdpdGggamVzdC1zdHlsZWQtY29tcG9uZW50cyAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdpbnN0YW5jZScsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQkJDEoKSB7XG4gICAgICByZXR1cm4gU3R5bGVTaGVldC5tYXN0ZXI7XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBTdHlsZVNoZWV0O1xufSgpO1xuXG4vLyBcblxudmFyIEtleWZyYW1lcyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gS2V5ZnJhbWVzKG5hbWUsIHJ1bGVzKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIEtleWZyYW1lcyk7XG5cbiAgICB0aGlzLmluamVjdCA9IGZ1bmN0aW9uIChzdHlsZVNoZWV0KSB7XG4gICAgICBpZiAoIXN0eWxlU2hlZXQuaGFzTmFtZUZvcklkKF90aGlzLmlkLCBfdGhpcy5uYW1lKSkge1xuICAgICAgICBzdHlsZVNoZWV0LmluamVjdChfdGhpcy5pZCwgX3RoaXMucnVsZXMsIF90aGlzLm5hbWUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcigxMiwgU3RyaW5nKF90aGlzLm5hbWUpKTtcbiAgICB9O1xuXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLnJ1bGVzID0gcnVsZXM7XG5cbiAgICB0aGlzLmlkID0gJ3NjLWtleWZyYW1lcy0nICsgbmFtZTtcbiAgfVxuXG4gIEtleWZyYW1lcy5wcm90b3R5cGUuZ2V0TmFtZSA9IGZ1bmN0aW9uIGdldE5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMubmFtZTtcbiAgfTtcblxuICByZXR1cm4gS2V5ZnJhbWVzO1xufSgpO1xuXG4vLyBcblxuLyoqXG4gKiBpbmxpbmVkIHZlcnNpb24gb2ZcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9mYmpzL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL2ZianMvc3JjL2NvcmUvaHlwaGVuYXRlU3R5bGVOYW1lLmpzXG4gKi9cblxudmFyIHVwcGVyY2FzZVBhdHRlcm4gPSAvKFtBLVpdKS9nO1xudmFyIG1zUGF0dGVybiA9IC9ebXMtLztcblxuLyoqXG4gKiBIeXBoZW5hdGVzIGEgY2FtZWxjYXNlZCBDU1MgcHJvcGVydHkgbmFtZSwgZm9yIGV4YW1wbGU6XG4gKlxuICogICA+IGh5cGhlbmF0ZVN0eWxlTmFtZSgnYmFja2dyb3VuZENvbG9yJylcbiAqICAgPCBcImJhY2tncm91bmQtY29sb3JcIlxuICogICA+IGh5cGhlbmF0ZVN0eWxlTmFtZSgnTW96VHJhbnNpdGlvbicpXG4gKiAgIDwgXCItbW96LXRyYW5zaXRpb25cIlxuICogICA+IGh5cGhlbmF0ZVN0eWxlTmFtZSgnbXNUcmFuc2l0aW9uJylcbiAqICAgPCBcIi1tcy10cmFuc2l0aW9uXCJcbiAqXG4gKiBBcyBNb2Rlcm5penIgc3VnZ2VzdHMgKGh0dHA6Ly9tb2Rlcm5penIuY29tL2RvY3MvI3ByZWZpeGVkKSwgYW4gYG1zYCBwcmVmaXhcbiAqIGlzIGNvbnZlcnRlZCB0byBgLW1zLWAuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZ1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBoeXBoZW5hdGVTdHlsZU5hbWUoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZSh1cHBlcmNhc2VQYXR0ZXJuLCAnLSQxJykudG9Mb3dlckNhc2UoKS5yZXBsYWNlKG1zUGF0dGVybiwgJy1tcy0nKTtcbn1cblxuLy8gXG5cbi8vIFRha2VuIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvYjg3YWFiZGZlMWI3NDYxZTczMzFhYmIzNjAxZDllNmJiMjc1NDRiYy9wYWNrYWdlcy9yZWFjdC1kb20vc3JjL3NoYXJlZC9kYW5nZXJvdXNTdHlsZVZhbHVlLmpzXG5mdW5jdGlvbiBhZGRVbml0SWZOZWVkZWQobmFtZSwgdmFsdWUpIHtcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2FtaWxhamFjay9lc2xpbnQtcGx1Z2luLWZsb3d0eXBlLWVycm9ycy9pc3N1ZXMvMTMzXG4gIC8vICRGbG93Rml4TWVcbiAgaWYgKHZhbHVlID09IG51bGwgfHwgdHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicgfHwgdmFsdWUgPT09ICcnKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgdmFsdWUgIT09IDAgJiYgIShuYW1lIGluIHVuaXRsZXNzKSkge1xuICAgIHJldHVybiB2YWx1ZSArICdweCc7IC8vIFByZXN1bWVzIGltcGxpY2l0ICdweCcgc3VmZml4IGZvciB1bml0bGVzcyBudW1iZXJzXG4gIH1cblxuICByZXR1cm4gU3RyaW5nKHZhbHVlKS50cmltKCk7XG59XG5cbi8vIFxuXG4vKipcbiAqIEl0J3MgZmFsc2lzaCBub3QgZmFsc3kgYmVjYXVzZSAwIGlzIGFsbG93ZWQuXG4gKi9cbnZhciBpc0ZhbHNpc2ggPSBmdW5jdGlvbiBpc0ZhbHNpc2goY2h1bmspIHtcbiAgcmV0dXJuIGNodW5rID09PSB1bmRlZmluZWQgfHwgY2h1bmsgPT09IG51bGwgfHwgY2h1bmsgPT09IGZhbHNlIHx8IGNodW5rID09PSAnJztcbn07XG5cbnZhciBvYmpUb0NzcyA9IGZ1bmN0aW9uIG9ialRvQ3NzKG9iaiwgcHJldktleSkge1xuICB2YXIgY3NzID0gT2JqZWN0LmtleXMob2JqKS5maWx0ZXIoZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiAhaXNGYWxzaXNoKG9ialtrZXldKTtcbiAgfSkubWFwKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoaXNQbGFpbk9iamVjdChvYmpba2V5XSkpIHJldHVybiBvYmpUb0NzcyhvYmpba2V5XSwga2V5KTtcbiAgICByZXR1cm4gaHlwaGVuYXRlU3R5bGVOYW1lKGtleSkgKyAnOiAnICsgYWRkVW5pdElmTmVlZGVkKGtleSwgb2JqW2tleV0pICsgJzsnO1xuICB9KS5qb2luKCcgJyk7XG4gIHJldHVybiBwcmV2S2V5ID8gcHJldktleSArICcge1xcbiAgJyArIGNzcyArICdcXG59JyA6IGNzcztcbn07XG5cbmZ1bmN0aW9uIGZsYXR0ZW4oY2h1bmssIGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoY2h1bmspKSB7XG4gICAgdmFyIHJ1bGVTZXQgPSBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBjaHVuay5sZW5ndGgsIHJlc3VsdDsgaSA8IGxlbjsgaSArPSAxKSB7XG4gICAgICByZXN1bHQgPSBmbGF0dGVuKGNodW5rW2ldLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcblxuICAgICAgaWYgKHJlc3VsdCA9PT0gbnVsbCkgY29udGludWU7ZWxzZSBpZiAoQXJyYXkuaXNBcnJheShyZXN1bHQpKSBydWxlU2V0LnB1c2guYXBwbHkocnVsZVNldCwgcmVzdWx0KTtlbHNlIHJ1bGVTZXQucHVzaChyZXN1bHQpO1xuICAgIH1cblxuICAgIHJldHVybiBydWxlU2V0O1xuICB9XG5cbiAgaWYgKGlzRmFsc2lzaChjaHVuaykpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIC8qIEhhbmRsZSBvdGhlciBjb21wb25lbnRzICovXG4gIGlmIChpc1N0eWxlZENvbXBvbmVudChjaHVuaykpIHtcbiAgICByZXR1cm4gJy4nICsgY2h1bmsuc3R5bGVkQ29tcG9uZW50SWQ7XG4gIH1cblxuICAvKiBFaXRoZXIgZXhlY3V0ZSBvciBkZWZlciB0aGUgZnVuY3Rpb24gKi9cbiAgaWYgKGlzRnVuY3Rpb24oY2h1bmspKSB7XG4gICAgaWYgKGV4ZWN1dGlvbkNvbnRleHQpIHtcbiAgICAgIHZhciBzaG91bGRUaHJvdyA9IGZhbHNlO1xuXG4gICAgICB0cnkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbmV3LWNhcFxuICAgICAgICBpZiAoaXNFbGVtZW50KG5ldyBjaHVuayhleGVjdXRpb25Db250ZXh0KSkpIHtcbiAgICAgICAgICBzaG91bGRUaHJvdyA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLyogKi9cbiAgICAgIH1cblxuICAgICAgaWYgKHNob3VsZFRocm93KSB7XG4gICAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoMTMsIGdldENvbXBvbmVudE5hbWUoY2h1bmspKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZsYXR0ZW4oY2h1bmsoZXhlY3V0aW9uQ29udGV4dCksIGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpO1xuICAgIH0gZWxzZSByZXR1cm4gY2h1bms7XG4gIH1cblxuICBpZiAoY2h1bmsgaW5zdGFuY2VvZiBLZXlmcmFtZXMpIHtcbiAgICBpZiAoc3R5bGVTaGVldCkge1xuICAgICAgY2h1bmsuaW5qZWN0KHN0eWxlU2hlZXQpO1xuICAgICAgcmV0dXJuIGNodW5rLmdldE5hbWUoKTtcbiAgICB9IGVsc2UgcmV0dXJuIGNodW5rO1xuICB9XG5cbiAgLyogSGFuZGxlIG9iamVjdHMgKi9cbiAgcmV0dXJuIGlzUGxhaW5PYmplY3QoY2h1bmspID8gb2JqVG9Dc3MoY2h1bmspIDogY2h1bmsudG9TdHJpbmcoKTtcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGNzcyhzdHlsZXMpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGludGVycG9sYXRpb25zID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGludGVycG9sYXRpb25zW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIGlmIChpc0Z1bmN0aW9uKHN0eWxlcykgfHwgaXNQbGFpbk9iamVjdChzdHlsZXMpKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHJldHVybiBmbGF0dGVuKGludGVybGVhdmUoRU1QVFlfQVJSQVksIFtzdHlsZXNdLmNvbmNhdChpbnRlcnBvbGF0aW9ucykpKTtcbiAgfVxuXG4gIC8vICRGbG93Rml4TWVcbiAgcmV0dXJuIGZsYXR0ZW4oaW50ZXJsZWF2ZShzdHlsZXMsIGludGVycG9sYXRpb25zKSk7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBjb25zdHJ1Y3RXaXRoT3B0aW9ucyhjb21wb25lbnRDb25zdHJ1Y3RvciwgdGFnKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBFTVBUWV9PQkpFQ1Q7XG5cbiAgaWYgKCFpc1ZhbGlkRWxlbWVudFR5cGUodGFnKSkge1xuICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoMSwgU3RyaW5nKHRhZykpO1xuICB9XG5cbiAgLyogVGhpcyBpcyBjYWxsYWJsZSBkaXJlY3RseSBhcyBhIHRlbXBsYXRlIGZ1bmN0aW9uICovXG4gIC8vICRGbG93Rml4TWU6IE5vdCB0eXBlZCB0byBhdm9pZCBkZXN0cnVjdHVyaW5nIGFyZ3VtZW50c1xuICB2YXIgdGVtcGxhdGVGdW5jdGlvbiA9IGZ1bmN0aW9uIHRlbXBsYXRlRnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvbXBvbmVudENvbnN0cnVjdG9yKHRhZywgb3B0aW9ucywgY3NzLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKSk7XG4gIH07XG5cbiAgLyogSWYgY29uZmlnIG1ldGhvZHMgYXJlIGNhbGxlZCwgd3JhcCB1cCBhIG5ldyB0ZW1wbGF0ZSBmdW5jdGlvbiBhbmQgbWVyZ2Ugb3B0aW9ucyAqL1xuICB0ZW1wbGF0ZUZ1bmN0aW9uLndpdGhDb25maWcgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgcmV0dXJuIGNvbnN0cnVjdFdpdGhPcHRpb25zKGNvbXBvbmVudENvbnN0cnVjdG9yLCB0YWcsIF9leHRlbmRzKHt9LCBvcHRpb25zLCBjb25maWcpKTtcbiAgfTtcblxuICAvKiBNb2RpZnkvaW5qZWN0IG5ldyBwcm9wcyBhdCBydW50aW1lICovXG4gIHRlbXBsYXRlRnVuY3Rpb24uYXR0cnMgPSBmdW5jdGlvbiAoYXR0cnMpIHtcbiAgICByZXR1cm4gY29uc3RydWN0V2l0aE9wdGlvbnMoY29tcG9uZW50Q29uc3RydWN0b3IsIHRhZywgX2V4dGVuZHMoe30sIG9wdGlvbnMsIHtcbiAgICAgIGF0dHJzOiBBcnJheS5wcm90b3R5cGUuY29uY2F0KG9wdGlvbnMuYXR0cnMsIGF0dHJzKS5maWx0ZXIoQm9vbGVhbilcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIHRlbXBsYXRlRnVuY3Rpb247XG59XG5cbi8vIFxuLy8gU291cmNlOiBodHRwczovL2dpdGh1Yi5jb20vZ2FyeWNvdXJ0L211cm11cmhhc2gtanMvYmxvYi9tYXN0ZXIvbXVybXVyaGFzaDJfZ2MuanNcbmZ1bmN0aW9uIG11cm11cmhhc2goYykge1xuICBmb3IgKHZhciBlID0gYy5sZW5ndGggfCAwLCBhID0gZSB8IDAsIGQgPSAwLCBiOyBlID49IDQ7KSB7XG4gICAgYiA9IGMuY2hhckNvZGVBdChkKSAmIDI1NSB8IChjLmNoYXJDb2RlQXQoKytkKSAmIDI1NSkgPDwgOCB8IChjLmNoYXJDb2RlQXQoKytkKSAmIDI1NSkgPDwgMTYgfCAoYy5jaGFyQ29kZUF0KCsrZCkgJiAyNTUpIDw8IDI0LCBiID0gMTU0MDQ4MzQ3NyAqIChiICYgNjU1MzUpICsgKCgxNTQwNDgzNDc3ICogKGIgPj4+IDE2KSAmIDY1NTM1KSA8PCAxNiksIGIgXj0gYiA+Pj4gMjQsIGIgPSAxNTQwNDgzNDc3ICogKGIgJiA2NTUzNSkgKyAoKDE1NDA0ODM0NzcgKiAoYiA+Pj4gMTYpICYgNjU1MzUpIDw8IDE2KSwgYSA9IDE1NDA0ODM0NzcgKiAoYSAmIDY1NTM1KSArICgoMTU0MDQ4MzQ3NyAqIChhID4+PiAxNikgJiA2NTUzNSkgPDwgMTYpIF4gYiwgZSAtPSA0LCArK2Q7XG4gIH1cbiAgc3dpdGNoIChlKSB7XG4gICAgY2FzZSAzOlxuICAgICAgYSBePSAoYy5jaGFyQ29kZUF0KGQgKyAyKSAmIDI1NSkgPDwgMTY7XG4gICAgY2FzZSAyOlxuICAgICAgYSBePSAoYy5jaGFyQ29kZUF0KGQgKyAxKSAmIDI1NSkgPDwgODtcbiAgICBjYXNlIDE6XG4gICAgICBhIF49IGMuY2hhckNvZGVBdChkKSAmIDI1NSwgYSA9IDE1NDA0ODM0NzcgKiAoYSAmIDY1NTM1KSArICgoMTU0MDQ4MzQ3NyAqIChhID4+PiAxNikgJiA2NTUzNSkgPDwgMTYpO1xuICB9XG4gIGEgXj0gYSA+Pj4gMTM7XG4gIGEgPSAxNTQwNDgzNDc3ICogKGEgJiA2NTUzNSkgKyAoKDE1NDA0ODM0NzcgKiAoYSA+Pj4gMTYpICYgNjU1MzUpIDw8IDE2KTtcbiAgcmV0dXJuIChhIF4gYSA+Pj4gMTUpID4+PiAwO1xufVxuXG4vLyBcbi8qIGVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UgKi9cblxuLyogVGhpcyBpcyB0aGUgXCJjYXBhY2l0eVwiIG9mIG91ciBhbHBoYWJldCBpLmUuIDJ4MjYgZm9yIGFsbCBsZXR0ZXJzIHBsdXMgdGhlaXIgY2FwaXRhbGlzZWRcbiAqIGNvdW50ZXJwYXJ0cyAqL1xudmFyIGNoYXJzTGVuZ3RoID0gNTI7XG5cbi8qIHN0YXJ0IGF0IDc1IGZvciAnYScgdW50aWwgJ3onICgyNSkgYW5kIHRoZW4gc3RhcnQgYXQgNjUgZm9yIGNhcGl0YWxpc2VkIGxldHRlcnMgKi9cbnZhciBnZXRBbHBoYWJldGljQ2hhciA9IGZ1bmN0aW9uIGdldEFscGhhYmV0aWNDaGFyKGNvZGUpIHtcbiAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSArIChjb2RlID4gMjUgPyAzOSA6IDk3KSk7XG59O1xuXG4vKiBpbnB1dCBhIG51bWJlciwgdXN1YWxseSBhIGhhc2ggYW5kIGNvbnZlcnQgaXQgdG8gYmFzZS01MiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVBbHBoYWJldGljTmFtZShjb2RlKSB7XG4gIHZhciBuYW1lID0gJyc7XG4gIHZhciB4ID0gdm9pZCAwO1xuXG4gIC8qIGdldCBhIGNoYXIgYW5kIGRpdmlkZSBieSBhbHBoYWJldC1sZW5ndGggKi9cbiAgZm9yICh4ID0gY29kZTsgeCA+IGNoYXJzTGVuZ3RoOyB4ID0gTWF0aC5mbG9vcih4IC8gY2hhcnNMZW5ndGgpKSB7XG4gICAgbmFtZSA9IGdldEFscGhhYmV0aWNDaGFyKHggJSBjaGFyc0xlbmd0aCkgKyBuYW1lO1xuICB9XG5cbiAgcmV0dXJuIGdldEFscGhhYmV0aWNDaGFyKHggJSBjaGFyc0xlbmd0aCkgKyBuYW1lO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gaGFzRnVuY3Rpb25PYmplY3RLZXkob2JqKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW4sIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBpZiAoaXNGdW5jdGlvbihvYmpba2V5XSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gaXNTdGF0aWNSdWxlcyhydWxlcywgYXR0cnMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBydWxlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHZhciBydWxlID0gcnVsZXNbaV07XG5cbiAgICAvLyByZWN1cnNpdmUgY2FzZVxuICAgIGlmIChBcnJheS5pc0FycmF5KHJ1bGUpICYmICFpc1N0YXRpY1J1bGVzKHJ1bGUsIGF0dHJzKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSBpZiAoaXNGdW5jdGlvbihydWxlKSAmJiAhaXNTdHlsZWRDb21wb25lbnQocnVsZSkpIHtcbiAgICAgIC8vIGZ1bmN0aW9ucyBhcmUgYWxsb3dlZCB0byBiZSBzdGF0aWMgaWYgdGhleSdyZSBqdXN0IGJlaW5nXG4gICAgICAvLyB1c2VkIHRvIGdldCB0aGUgY2xhc3NuYW1lIG9mIGEgbmVzdGVkIHN0eWxlZCBjb21wb25lbnRcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBpZiAoYXR0cnMuc29tZShmdW5jdGlvbiAoeCkge1xuICAgIHJldHVybiBpc0Z1bmN0aW9uKHgpIHx8IGhhc0Z1bmN0aW9uT2JqZWN0S2V5KHgpO1xuICB9KSkgcmV0dXJuIGZhbHNlO1xuXG4gIHJldHVybiB0cnVlO1xufVxuXG4vLyBcblxudmFyIGlzSE1SRW5hYmxlZCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmhvdDtcblxuLyogY29tYmluZXMgaGFzaFN0ciAobXVybXVyaGFzaCkgYW5kIG5hbWVHZW5lcmF0b3IgZm9yIGNvbnZlbmllbmNlICovXG52YXIgaGFzaGVyID0gZnVuY3Rpb24gaGFzaGVyKHN0cikge1xuICByZXR1cm4gZ2VuZXJhdGVBbHBoYWJldGljTmFtZShtdXJtdXJoYXNoKHN0cikpO1xufTtcblxuLypcbiBDb21wb25lbnRTdHlsZSBpcyBhbGwgdGhlIENTUy1zcGVjaWZpYyBzdHVmZiwgbm90XG4gdGhlIFJlYWN0LXNwZWNpZmljIHN0dWZmLlxuICovXG5cbnZhciBDb21wb25lbnRTdHlsZSA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQ29tcG9uZW50U3R5bGUocnVsZXMsIGF0dHJzLCBjb21wb25lbnRJZCkge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIENvbXBvbmVudFN0eWxlKTtcblxuICAgIHRoaXMucnVsZXMgPSBydWxlcztcbiAgICB0aGlzLmlzU3RhdGljID0gIWlzSE1SRW5hYmxlZCAmJiBpc1N0YXRpY1J1bGVzKHJ1bGVzLCBhdHRycyk7XG4gICAgdGhpcy5jb21wb25lbnRJZCA9IGNvbXBvbmVudElkO1xuXG4gICAgaWYgKCFTdHlsZVNoZWV0Lm1hc3Rlci5oYXNJZChjb21wb25lbnRJZCkpIHtcbiAgICAgIFN0eWxlU2hlZXQubWFzdGVyLmRlZmVycmVkSW5qZWN0KGNvbXBvbmVudElkLCBbXSk7XG4gICAgfVxuICB9XG5cbiAgLypcbiAgICAgKiBGbGF0dGVucyBhIHJ1bGUgc2V0IGludG8gdmFsaWQgQ1NTXG4gICAgICogSGFzaGVzIGl0LCB3cmFwcyB0aGUgd2hvbGUgY2h1bmsgaW4gYSAuaGFzaDEyMzQge31cbiAgICAgKiBSZXR1cm5zIHRoZSBoYXNoIHRvIGJlIGluamVjdGVkIG9uIHJlbmRlcigpXG4gICAgICogKi9cblxuXG4gIENvbXBvbmVudFN0eWxlLnByb3RvdHlwZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyA9IGZ1bmN0aW9uIGdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpIHtcbiAgICB2YXIgaXNTdGF0aWMgPSB0aGlzLmlzU3RhdGljLFxuICAgICAgICBjb21wb25lbnRJZCA9IHRoaXMuY29tcG9uZW50SWQsXG4gICAgICAgIGxhc3RDbGFzc05hbWUgPSB0aGlzLmxhc3RDbGFzc05hbWU7XG5cbiAgICBpZiAoSVNfQlJPV1NFUiAmJiBpc1N0YXRpYyAmJiB0eXBlb2YgbGFzdENsYXNzTmFtZSA9PT0gJ3N0cmluZycgJiYgc3R5bGVTaGVldC5oYXNOYW1lRm9ySWQoY29tcG9uZW50SWQsIGxhc3RDbGFzc05hbWUpKSB7XG4gICAgICByZXR1cm4gbGFzdENsYXNzTmFtZTtcbiAgICB9XG5cbiAgICB2YXIgZmxhdENTUyA9IGZsYXR0ZW4odGhpcy5ydWxlcywgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCk7XG4gICAgdmFyIG5hbWUgPSBoYXNoZXIodGhpcy5jb21wb25lbnRJZCArIGZsYXRDU1Muam9pbignJykpO1xuICAgIGlmICghc3R5bGVTaGVldC5oYXNOYW1lRm9ySWQoY29tcG9uZW50SWQsIG5hbWUpKSB7XG4gICAgICBzdHlsZVNoZWV0LmluamVjdCh0aGlzLmNvbXBvbmVudElkLCBzdHJpbmdpZnlSdWxlcyhmbGF0Q1NTLCAnLicgKyBuYW1lLCB1bmRlZmluZWQsIGNvbXBvbmVudElkKSwgbmFtZSk7XG4gICAgfVxuXG4gICAgdGhpcy5sYXN0Q2xhc3NOYW1lID0gbmFtZTtcbiAgICByZXR1cm4gbmFtZTtcbiAgfTtcblxuICBDb21wb25lbnRTdHlsZS5nZW5lcmF0ZU5hbWUgPSBmdW5jdGlvbiBnZW5lcmF0ZU5hbWUoc3RyKSB7XG4gICAgcmV0dXJuIGhhc2hlcihzdHIpO1xuICB9O1xuXG4gIHJldHVybiBDb21wb25lbnRTdHlsZTtcbn0oKTtcblxuLy8gXG5cbnZhciBMSU1JVCA9IDIwMDtcblxudmFyIGNyZWF0ZVdhcm5Ub29NYW55Q2xhc3NlcyA9IChmdW5jdGlvbiAoZGlzcGxheU5hbWUpIHtcbiAgdmFyIGdlbmVyYXRlZENsYXNzZXMgPSB7fTtcbiAgdmFyIHdhcm5pbmdTZWVuID0gZmFsc2U7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICBpZiAoIXdhcm5pbmdTZWVuKSB7XG4gICAgICBnZW5lcmF0ZWRDbGFzc2VzW2NsYXNzTmFtZV0gPSB0cnVlO1xuICAgICAgaWYgKE9iamVjdC5rZXlzKGdlbmVyYXRlZENsYXNzZXMpLmxlbmd0aCA+PSBMSU1JVCkge1xuICAgICAgICAvLyBVbmFibGUgdG8gZmluZCBsYXRlc3RSdWxlIGluIHRlc3QgZW52aXJvbm1lbnQuXG4gICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUsIHByZWZlci10ZW1wbGF0ZSAqL1xuICAgICAgICBjb25zb2xlLndhcm4oJ092ZXIgJyArIExJTUlUICsgJyBjbGFzc2VzIHdlcmUgZ2VuZXJhdGVkIGZvciBjb21wb25lbnQgJyArIGRpc3BsYXlOYW1lICsgJy4gXFxuJyArICdDb25zaWRlciB1c2luZyB0aGUgYXR0cnMgbWV0aG9kLCB0b2dldGhlciB3aXRoIGEgc3R5bGUgb2JqZWN0IGZvciBmcmVxdWVudGx5IGNoYW5nZWQgc3R5bGVzLlxcbicgKyAnRXhhbXBsZTpcXG4nICsgJyAgY29uc3QgQ29tcG9uZW50ID0gc3R5bGVkLmRpdi5hdHRycyh7XFxuJyArICcgICAgc3R5bGU6ICh7IGJhY2tncm91bmQgfSkgPT4gKHtcXG4nICsgJyAgICAgIGJhY2tncm91bmQsXFxuJyArICcgICAgfSksXFxuJyArICcgIH0pYHdpZHRoOiAxMDAlO2BcXG5cXG4nICsgJyAgPENvbXBvbmVudCAvPicpO1xuICAgICAgICB3YXJuaW5nU2VlbiA9IHRydWU7XG4gICAgICAgIGdlbmVyYXRlZENsYXNzZXMgPSB7fTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59KTtcblxuLy8gXG5cbnZhciBkZXRlcm1pbmVUaGVtZSA9IChmdW5jdGlvbiAocHJvcHMsIGZhbGxiYWNrVGhlbWUpIHtcbiAgdmFyIGRlZmF1bHRQcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogRU1QVFlfT0JKRUNUO1xuXG4gIC8vIFByb3BzIHNob3VsZCB0YWtlIHByZWNlZGVuY2Ugb3ZlciBUaGVtZVByb3ZpZGVyLCB3aGljaCBzaG91bGQgdGFrZSBwcmVjZWRlbmNlIG92ZXJcbiAgLy8gZGVmYXVsdFByb3BzLCBidXQgUmVhY3QgYXV0b21hdGljYWxseSBwdXRzIGRlZmF1bHRQcm9wcyBvbiBwcm9wcy5cblxuICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9wcm9wLXR5cGVzLCBmbG93dHlwZS1lcnJvcnMvc2hvdy1lcnJvcnMgKi9cbiAgdmFyIGlzRGVmYXVsdFRoZW1lID0gZGVmYXVsdFByb3BzID8gcHJvcHMudGhlbWUgPT09IGRlZmF1bHRQcm9wcy50aGVtZSA6IGZhbHNlO1xuICB2YXIgdGhlbWUgPSBwcm9wcy50aGVtZSAmJiAhaXNEZWZhdWx0VGhlbWUgPyBwcm9wcy50aGVtZSA6IGZhbGxiYWNrVGhlbWUgfHwgZGVmYXVsdFByb3BzLnRoZW1lO1xuICAvKiBlc2xpbnQtZW5hYmxlICovXG5cbiAgcmV0dXJuIHRoZW1lO1xufSk7XG5cbi8vIFxudmFyIGVzY2FwZVJlZ2V4ID0gL1tbXFxdLiMqJD48K349fF46KCksXCInYC1dKy9nO1xudmFyIGRhc2hlc0F0RW5kcyA9IC8oXi18LSQpL2c7XG5cbi8qKlxuICogVE9ETzogRXhwbG9yZSB1c2luZyBDU1MuZXNjYXBlIHdoZW4gaXQgYmVjb21lcyBtb3JlIGF2YWlsYWJsZVxuICogaW4gZXZlcmdyZWVuIGJyb3dzZXJzLlxuICovXG5mdW5jdGlvbiBlc2NhcGUoc3RyKSB7XG4gIHJldHVybiBzdHJcbiAgLy8gUmVwbGFjZSBhbGwgcG9zc2libGUgQ1NTIHNlbGVjdG9yc1xuICAucmVwbGFjZShlc2NhcGVSZWdleCwgJy0nKVxuXG4gIC8vIFJlbW92ZSBleHRyYW5lb3VzIGh5cGhlbnMgYXQgdGhlIHN0YXJ0IGFuZCBlbmRcbiAgLnJlcGxhY2UoZGFzaGVzQXRFbmRzLCAnJyk7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBpc1RhZyh0YXJnZXQpIHtcbiAgcmV0dXJuIHR5cGVvZiB0YXJnZXQgPT09ICdzdHJpbmcnICYmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gdGFyZ2V0LmNoYXJBdCgwKSA9PT0gdGFyZ2V0LmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpIDogdHJ1ZSk7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBnZW5lcmF0ZURpc3BsYXlOYW1lKHRhcmdldCkge1xuICAvLyAkRmxvd0ZpeE1lXG4gIHJldHVybiBpc1RhZyh0YXJnZXQpID8gJ3N0eWxlZC4nICsgdGFyZ2V0IDogJ1N0eWxlZCgnICsgZ2V0Q29tcG9uZW50TmFtZSh0YXJnZXQpICsgJyknO1xufVxuXG52YXIgX1RZUEVfU1RBVElDUztcblxudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xuXG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xuXG52YXIgVFlQRV9TVEFUSUNTID0gKF9UWVBFX1NUQVRJQ1MgPSB7fSwgX1RZUEVfU1RBVElDU1tGb3J3YXJkUmVmXSA9IHtcbiAgJCR0eXBlb2Y6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZVxufSwgX1RZUEVfU1RBVElDUyk7XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSQxID0gT2JqZWN0LmRlZmluZVByb3BlcnR5LFxuICAgIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyxcbiAgICBfT2JqZWN0JGdldE93blByb3BlcnQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLFxuICAgIGdldE93blByb3BlcnR5U3ltYm9scyA9IF9PYmplY3QkZ2V0T3duUHJvcGVydCA9PT0gdW5kZWZpbmVkID8gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gW107XG59IDogX09iamVjdCRnZXRPd25Qcm9wZXJ0LFxuICAgIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsXG4gICAgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YsXG4gICAgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbnZhciBhcnJheVByb3RvdHlwZSA9IEFycmF5LnByb3RvdHlwZTtcblxuXG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG5cbiAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgIH1cblxuICAgIHZhciBrZXlzID0gYXJyYXlQcm90b3R5cGUuY29uY2F0KGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KSxcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBUWVBFX1NUQVRJQ1NbdGFyZ2V0Q29tcG9uZW50LiQkdHlwZW9mXSB8fCBSRUFDVF9TVEFUSUNTO1xuXG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBUWVBFX1NUQVRJQ1Nbc291cmNlQ29tcG9uZW50LiQkdHlwZW9mXSB8fCBSRUFDVF9TVEFUSUNTO1xuXG4gICAgdmFyIGkgPSBrZXlzLmxlbmd0aDtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHZvaWQgMDtcbiAgICB2YXIga2V5ID0gdm9pZCAwO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBsdXNwbHVzXG4gICAgd2hpbGUgKGktLSkge1xuICAgICAga2V5ID0ga2V5c1tpXTtcblxuICAgICAgaWYgKFxuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiZcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XG4gICAgICAgIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIGlmIChkZXNjcmlwdG9yKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICAgIGRlZmluZVByb3BlcnR5JDEodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIC8qIGZhaWwgc2lsZW50bHkgKi9cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxuLy8gXG5mdW5jdGlvbiBpc0Rlcml2ZWRSZWFjdENvbXBvbmVudChmbikge1xuICByZXR1cm4gISEoZm4gJiYgZm4ucHJvdG90eXBlICYmIGZuLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KTtcbn1cblxuLy8gXG4vLyBIZWxwZXIgdG8gY2FsbCBhIGdpdmVuIGZ1bmN0aW9uLCBvbmx5IG9uY2VcbnZhciBvbmNlID0gKGZ1bmN0aW9uIChjYikge1xuICB2YXIgY2FsbGVkID0gZmFsc2U7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIWNhbGxlZCkge1xuICAgICAgY2FsbGVkID0gdHJ1ZTtcbiAgICAgIGNiLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKTtcbiAgICB9XG4gIH07XG59KTtcblxuLy8gXG5cbnZhciBUaGVtZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5cbnZhciBUaGVtZUNvbnN1bWVyID0gVGhlbWVDb250ZXh0LkNvbnN1bWVyO1xuXG4vKipcbiAqIFByb3ZpZGUgYSB0aGVtZSB0byBhbiBlbnRpcmUgcmVhY3QgY29tcG9uZW50IHRyZWUgdmlhIGNvbnRleHRcbiAqL1xuXG52YXIgVGhlbWVQcm92aWRlciA9IGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIGluaGVyaXRzKFRoZW1lUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFRoZW1lUHJvdmlkZXIocHJvcHMpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBUaGVtZVByb3ZpZGVyKTtcblxuICAgIHZhciBfdGhpcyA9IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0NvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICBfdGhpcy5nZXRDb250ZXh0ID0gbWVtb2l6ZShfdGhpcy5nZXRDb250ZXh0LmJpbmQoX3RoaXMpKTtcbiAgICBfdGhpcy5yZW5kZXJJbm5lciA9IF90aGlzLnJlbmRlcklubmVyLmJpbmQoX3RoaXMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIFRoZW1lUHJvdmlkZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICBpZiAoIXRoaXMucHJvcHMuY2hpbGRyZW4pIHJldHVybiBudWxsO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBUaGVtZUNvbnRleHQuQ29uc3VtZXIsXG4gICAgICBudWxsLFxuICAgICAgdGhpcy5yZW5kZXJJbm5lclxuICAgICk7XG4gIH07XG5cbiAgVGhlbWVQcm92aWRlci5wcm90b3R5cGUucmVuZGVySW5uZXIgPSBmdW5jdGlvbiByZW5kZXJJbm5lcihvdXRlclRoZW1lKSB7XG4gICAgdmFyIGNvbnRleHQgPSB0aGlzLmdldENvbnRleHQodGhpcy5wcm9wcy50aGVtZSwgb3V0ZXJUaGVtZSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFRoZW1lQ29udGV4dC5Qcm92aWRlcixcbiAgICAgIHsgdmFsdWU6IGNvbnRleHQgfSxcbiAgICAgIFJlYWN0LkNoaWxkcmVuLm9ubHkodGhpcy5wcm9wcy5jaGlsZHJlbilcbiAgICApO1xuICB9O1xuXG4gIC8qKlxuICAgKiBHZXQgdGhlIHRoZW1lIGZyb20gdGhlIHByb3BzLCBzdXBwb3J0aW5nIGJvdGggKG91dGVyVGhlbWUpID0+IHt9XG4gICAqIGFzIHdlbGwgYXMgb2JqZWN0IG5vdGF0aW9uXG4gICAqL1xuXG5cbiAgVGhlbWVQcm92aWRlci5wcm90b3R5cGUuZ2V0VGhlbWUgPSBmdW5jdGlvbiBnZXRUaGVtZSh0aGVtZSwgb3V0ZXJUaGVtZSkge1xuICAgIGlmIChpc0Z1bmN0aW9uKHRoZW1lKSkge1xuICAgICAgdmFyIG1lcmdlZFRoZW1lID0gdGhlbWUob3V0ZXJUaGVtZSk7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIChtZXJnZWRUaGVtZSA9PT0gbnVsbCB8fCBBcnJheS5pc0FycmF5KG1lcmdlZFRoZW1lKSB8fCAodHlwZW9mIG1lcmdlZFRoZW1lID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihtZXJnZWRUaGVtZSkpICE9PSAnb2JqZWN0JykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig3KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG1lcmdlZFRoZW1lO1xuICAgIH1cblxuICAgIGlmICh0aGVtZSA9PT0gbnVsbCB8fCBBcnJheS5pc0FycmF5KHRoZW1lKSB8fCAodHlwZW9mIHRoZW1lID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZih0aGVtZSkpICE9PSAnb2JqZWN0Jykge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig4KTtcbiAgICB9XG5cbiAgICByZXR1cm4gX2V4dGVuZHMoe30sIG91dGVyVGhlbWUsIHRoZW1lKTtcbiAgfTtcblxuICBUaGVtZVByb3ZpZGVyLnByb3RvdHlwZS5nZXRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q29udGV4dCh0aGVtZSwgb3V0ZXJUaGVtZSkge1xuICAgIHJldHVybiB0aGlzLmdldFRoZW1lKHRoZW1lLCBvdXRlclRoZW1lKTtcbiAgfTtcblxuICByZXR1cm4gVGhlbWVQcm92aWRlcjtcbn0oQ29tcG9uZW50KTtcblxuLy8gXG5cbnZhciBTZXJ2ZXJTdHlsZVNoZWV0ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTZXJ2ZXJTdHlsZVNoZWV0KCkge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFNlcnZlclN0eWxlU2hlZXQpO1xuXG4gICAgLyogVGhlIG1hc3RlciBzaGVldCBtaWdodCBiZSByZXNldCwgc28ga2VlcCBhIHJlZmVyZW5jZSBoZXJlICovXG4gICAgdGhpcy5tYXN0ZXJTaGVldCA9IFN0eWxlU2hlZXQubWFzdGVyO1xuICAgIHRoaXMuaW5zdGFuY2UgPSB0aGlzLm1hc3RlclNoZWV0LmNsb25lKCk7XG4gICAgdGhpcy5zZWFsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYXJrIHRoZSBTZXJ2ZXJTdHlsZVNoZWV0IGFzIGJlaW5nIGZ1bGx5IGVtaXR0ZWQgYW5kIG1hbnVhbGx5IEdDIGl0IGZyb20gdGhlXG4gICAqIFN0eWxlU2hlZXQgc2luZ2xldG9uLlxuICAgKi9cblxuXG4gIFNlcnZlclN0eWxlU2hlZXQucHJvdG90eXBlLnNlYWwgPSBmdW5jdGlvbiBzZWFsKCkge1xuICAgIGlmICghdGhpcy5zZWFsZWQpIHtcbiAgICAgIC8qIFJlbW92ZSBzZWFsZWQgU3R5bGVTaGVldHMgZnJvbSB0aGUgbWFzdGVyIHNoZWV0ICovXG4gICAgICB2YXIgaW5kZXggPSB0aGlzLm1hc3RlclNoZWV0LmNsb25lcy5pbmRleE9mKHRoaXMuaW5zdGFuY2UpO1xuICAgICAgdGhpcy5tYXN0ZXJTaGVldC5jbG9uZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIHRoaXMuc2VhbGVkID0gdHJ1ZTtcbiAgICB9XG4gIH07XG5cbiAgU2VydmVyU3R5bGVTaGVldC5wcm90b3R5cGUuY29sbGVjdFN0eWxlcyA9IGZ1bmN0aW9uIGNvbGxlY3RTdHlsZXMoY2hpbGRyZW4pIHtcbiAgICBpZiAodGhpcy5zZWFsZWQpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoMik7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBTdHlsZVNoZWV0TWFuYWdlcixcbiAgICAgIHsgc2hlZXQ6IHRoaXMuaW5zdGFuY2UgfSxcbiAgICAgIGNoaWxkcmVuXG4gICAgKTtcbiAgfTtcblxuICBTZXJ2ZXJTdHlsZVNoZWV0LnByb3RvdHlwZS5nZXRTdHlsZVRhZ3MgPSBmdW5jdGlvbiBnZXRTdHlsZVRhZ3MoKSB7XG4gICAgdGhpcy5zZWFsKCk7XG4gICAgcmV0dXJuIHRoaXMuaW5zdGFuY2UudG9IVE1MKCk7XG4gIH07XG5cbiAgU2VydmVyU3R5bGVTaGVldC5wcm90b3R5cGUuZ2V0U3R5bGVFbGVtZW50ID0gZnVuY3Rpb24gZ2V0U3R5bGVFbGVtZW50KCkge1xuICAgIHRoaXMuc2VhbCgpO1xuICAgIHJldHVybiB0aGlzLmluc3RhbmNlLnRvUmVhY3RFbGVtZW50cygpO1xuICB9O1xuXG4gIFNlcnZlclN0eWxlU2hlZXQucHJvdG90eXBlLmludGVybGVhdmVXaXRoTm9kZVN0cmVhbSA9IGZ1bmN0aW9uIGludGVybGVhdmVXaXRoTm9kZVN0cmVhbShyZWFkYWJsZVN0cmVhbSkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDMpO1xuICAgIH1cblxuICAgIC8qIHRoZSB0YWcgaW5kZXgga2VlcHMgdHJhY2sgb2Ygd2hpY2ggdGFncyBoYXZlIGFscmVhZHkgYmVlbiBlbWl0dGVkICovXG4gICAgdmFyIGluc3RhbmNlID0gdGhpcy5pbnN0YW5jZTtcblxuICAgIHZhciBpbnN0YW5jZVRhZ0luZGV4ID0gMDtcblxuICAgIHZhciBzdHJlYW1BdHRyID0gU0NfU1RSRUFNX0FUVFIgKyAnPVwidHJ1ZVwiJztcblxuICAgIHZhciB0cmFuc2Zvcm1lciA9IG5ldyBzdHJlYW0uVHJhbnNmb3JtKHtcbiAgICAgIHRyYW5zZm9ybTogZnVuY3Rpb24gYXBwZW5kU3R5bGVDaHVua3MoY2h1bmssIC8qIGVuY29kaW5nICovXywgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIHRhZ3MgPSBpbnN0YW5jZS50YWdzO1xuXG4gICAgICAgIHZhciBodG1sID0gJyc7XG5cbiAgICAgICAgLyogcmV0cmlldmUgaHRtbCBmb3IgZWFjaCBuZXcgc3R5bGUgdGFnICovXG4gICAgICAgIGZvciAoOyBpbnN0YW5jZVRhZ0luZGV4IDwgdGFncy5sZW5ndGg7IGluc3RhbmNlVGFnSW5kZXggKz0gMSkge1xuICAgICAgICAgIHZhciB0YWcgPSB0YWdzW2luc3RhbmNlVGFnSW5kZXhdO1xuICAgICAgICAgIGh0bWwgKz0gdGFnLnRvSFRNTChzdHJlYW1BdHRyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qIGZvcmNlIG91ciBTdHlsZVNoZWV0cyB0byBlbWl0IGVudGlyZWx5IG5ldyB0YWdzICovXG4gICAgICAgIGluc3RhbmNlLnNlYWxBbGxUYWdzKCk7XG5cbiAgICAgICAgLyogcHJlcGVuZCBzdHlsZSBodG1sIHRvIGNodW5rICovXG4gICAgICAgIHRoaXMucHVzaChodG1sICsgY2h1bmspO1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmVhZGFibGVTdHJlYW0ub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfdGhpcy5zZWFsKCk7XG4gICAgfSk7XG4gICAgcmVhZGFibGVTdHJlYW0ub24oJ2Vycm9yJywgZnVuY3Rpb24gKGVycikge1xuICAgICAgX3RoaXMuc2VhbCgpO1xuXG4gICAgICAvLyBmb3J3YXJkIHRoZSBlcnJvciB0byB0aGUgdHJhbnNmb3JtIHN0cmVhbVxuICAgICAgdHJhbnNmb3JtZXIuZW1pdCgnZXJyb3InLCBlcnIpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJlYWRhYmxlU3RyZWFtLnBpcGUodHJhbnNmb3JtZXIpO1xuICB9O1xuXG4gIHJldHVybiBTZXJ2ZXJTdHlsZVNoZWV0O1xufSgpO1xuXG4vLyBcblxudmFyIFN0eWxlU2hlZXRDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuXG52YXIgU3R5bGVTaGVldENvbnN1bWVyID0gU3R5bGVTaGVldENvbnRleHQuQ29uc3VtZXI7XG5cbnZhciBTdHlsZVNoZWV0TWFuYWdlciA9IGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIGluaGVyaXRzKFN0eWxlU2hlZXRNYW5hZ2VyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdHlsZVNoZWV0TWFuYWdlcihwcm9wcykge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFN0eWxlU2hlZXRNYW5hZ2VyKTtcblxuICAgIHZhciBfdGhpcyA9IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0NvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICBfdGhpcy5nZXRDb250ZXh0ID0gbWVtb2l6ZShfdGhpcy5nZXRDb250ZXh0KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBTdHlsZVNoZWV0TWFuYWdlci5wcm90b3R5cGUuZ2V0Q29udGV4dCA9IGZ1bmN0aW9uIGdldENvbnRleHQoc2hlZXQsIHRhcmdldCkge1xuICAgIGlmIChzaGVldCkge1xuICAgICAgcmV0dXJuIHNoZWV0O1xuICAgIH0gZWxzZSBpZiAodGFyZ2V0KSB7XG4gICAgICByZXR1cm4gbmV3IFN0eWxlU2hlZXQodGFyZ2V0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig0KTtcbiAgICB9XG4gIH07XG5cbiAgU3R5bGVTaGVldE1hbmFnZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIHNoZWV0ID0gX3Byb3BzLnNoZWV0LFxuICAgICAgICB0YXJnZXQgPSBfcHJvcHMudGFyZ2V0O1xuXG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFN0eWxlU2hlZXRDb250ZXh0LlByb3ZpZGVyLFxuICAgICAgeyB2YWx1ZTogdGhpcy5nZXRDb250ZXh0KHNoZWV0LCB0YXJnZXQpIH0sXG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbikgOiBjaGlsZHJlblxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIFN0eWxlU2hlZXRNYW5hZ2VyO1xufShDb21wb25lbnQpO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gU3R5bGVTaGVldE1hbmFnZXIucHJvcFR5cGVzID0ge1xuICBzaGVldDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmluc3RhbmNlT2YoU3R5bGVTaGVldCksIFByb3BUeXBlcy5pbnN0YW5jZU9mKFNlcnZlclN0eWxlU2hlZXQpXSksXG5cbiAgdGFyZ2V0OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGFwcGVuZENoaWxkOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG4gIH0pXG59IDogdm9pZCAwO1xuXG4vLyBcblxudmFyIGRpZFdhcm5BYm91dENsYXNzTmFtZVVzYWdlID0gbmV3IFNldCgpO1xuXG52YXIgY2xhc3NOYW1lVXNhZ2VDaGVja0luamVjdG9yID0gKGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgdmFyIGVsZW1lbnRDbGFzc05hbWUgPSAnJztcblxuICB2YXIgdGFyZ2V0Q0RNID0gdGFyZ2V0LmNvbXBvbmVudERpZE1vdW50O1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICB0YXJnZXQuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAodHlwZW9mIHRhcmdldENETSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGFyZ2V0Q0RNLmNhbGwodGhpcyk7XG4gICAgfVxuXG4gICAgdmFyIGZvcndhcmRUYXJnZXQgPSB0aGlzLnByb3BzLmZvcndhcmRlZENvbXBvbmVudC50YXJnZXQ7XG5cbiAgICBpZiAodGFyZ2V0LnByb3BzICYmIHRhcmdldC5wcm9wcy5zdXBwcmVzc0NsYXNzTmFtZVdhcm5pbmcgfHwgdGFyZ2V0LmF0dHJzICYmIHRhcmdldC5hdHRycy5zdXBwcmVzc0NsYXNzTmFtZVdhcm5pbmcgfHwgZGlkV2FybkFib3V0Q2xhc3NOYW1lVXNhZ2UuaGFzKGZvcndhcmRUYXJnZXQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZGlkV2FybkFib3V0Q2xhc3NOYW1lVXNhZ2UuYWRkKGZvcndhcmRUYXJnZXQpO1xuXG4gICAgdmFyIGNsYXNzTmFtZXMgPSBlbGVtZW50Q2xhc3NOYW1lLnJlcGxhY2UoLyArL2csICcgJykudHJpbSgpLnNwbGl0KCcgJyk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWZpbmQtZG9tLW5vZGVcbiAgICB2YXIgbm9kZSA9IFJlYWN0RE9NLmZpbmRET01Ob2RlKHRoaXMpO1xuICAgIHZhciBzZWxlY3RvciA9IGNsYXNzTmFtZXMubWFwKGZ1bmN0aW9uIChzKSB7XG4gICAgICByZXR1cm4gJy4nICsgcztcbiAgICB9KS5qb2luKCcnKTtcblxuICAgIGlmIChub2RlICYmIG5vZGUubm9kZVR5cGUgPT09IDEgJiYgIWNsYXNzTmFtZXMuZXZlcnkoZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgICAgcmV0dXJuIG5vZGUuY2xhc3NMaXN0ICYmIG5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSk7XG4gICAgfSkgJiYgIW5vZGUucXVlcnlTZWxlY3RvcihzZWxlY3RvcikpIHtcbiAgICAgIGNvbnNvbGUud2FybignSXQgbG9va3MgbGlrZSB5b3VcXCd2ZSB3cmFwcGVkIHN0eWxlZCgpIGFyb3VuZCB5b3VyIFJlYWN0IGNvbXBvbmVudCAoJyArIGdldENvbXBvbmVudE5hbWUoZm9yd2FyZFRhcmdldCkgKyAnKSwgYnV0IHRoZSBjbGFzc05hbWUgcHJvcCBpcyBub3QgYmVpbmcgcGFzc2VkIGRvd24gdG8gYSBjaGlsZC4gTm8gc3R5bGVzIHdpbGwgYmUgcmVuZGVyZWQgdW5sZXNzIGNsYXNzTmFtZSBpcyBjb21wb3NlZCB3aXRoaW4geW91ciBSZWFjdCBjb21wb25lbnQuJyk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBwcmV2UmVuZGVySW5uZXIgPSB0YXJnZXQucmVuZGVySW5uZXI7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIHRhcmdldC5yZW5kZXJJbm5lciA9IGZ1bmN0aW9uIHJlbmRlcklubmVyKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHZhciBlbGVtZW50ID0gcHJldlJlbmRlcklubmVyLmFwcGx5KHRoaXMsIGFyZ3MpO1xuXG4gICAgZWxlbWVudENsYXNzTmFtZSA9IGVsZW1lbnQucHJvcHMuY2xhc3NOYW1lO1xuXG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH07XG59KTtcblxuLy8gXG5cbnZhciBpZGVudGlmaWVycyA9IHt9O1xuXG4vKiBXZSBkZXBlbmQgb24gY29tcG9uZW50cyBoYXZpbmcgdW5pcXVlIElEcyAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVJZChfQ29tcG9uZW50U3R5bGUsIF9kaXNwbGF5TmFtZSwgcGFyZW50Q29tcG9uZW50SWQpIHtcbiAgdmFyIGRpc3BsYXlOYW1lID0gdHlwZW9mIF9kaXNwbGF5TmFtZSAhPT0gJ3N0cmluZycgPyAnc2MnIDogZXNjYXBlKF9kaXNwbGF5TmFtZSk7XG5cbiAgLyoqXG4gICAqIFRoaXMgZW5zdXJlcyB1bmlxdWVuZXNzIGlmIHR3byBjb21wb25lbnRzIGhhcHBlbiB0byBzaGFyZVxuICAgKiB0aGUgc2FtZSBkaXNwbGF5TmFtZS5cbiAgICovXG4gIHZhciBuciA9IChpZGVudGlmaWVyc1tkaXNwbGF5TmFtZV0gfHwgMCkgKyAxO1xuICBpZGVudGlmaWVyc1tkaXNwbGF5TmFtZV0gPSBucjtcblxuICB2YXIgY29tcG9uZW50SWQgPSBkaXNwbGF5TmFtZSArICctJyArIF9Db21wb25lbnRTdHlsZS5nZW5lcmF0ZU5hbWUoZGlzcGxheU5hbWUgKyBucik7XG5cbiAgcmV0dXJuIHBhcmVudENvbXBvbmVudElkID8gcGFyZW50Q29tcG9uZW50SWQgKyAnLScgKyBjb21wb25lbnRJZCA6IGNvbXBvbmVudElkO1xufVxuXG4vLyAkRmxvd0ZpeE1lXG5cbnZhciBTdHlsZWRDb21wb25lbnQgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBpbmhlcml0cyhTdHlsZWRDb21wb25lbnQsIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0eWxlZENvbXBvbmVudCgpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBTdHlsZWRDb21wb25lbnQpO1xuXG4gICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50LmNhbGwodGhpcykpO1xuXG4gICAgX3RoaXMuYXR0cnMgPSB7fTtcblxuICAgIF90aGlzLnJlbmRlck91dGVyID0gX3RoaXMucmVuZGVyT3V0ZXIuYmluZChfdGhpcyk7XG4gICAgX3RoaXMucmVuZGVySW5uZXIgPSBfdGhpcy5yZW5kZXJJbm5lci5iaW5kKF90aGlzKTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBfdGhpcy53YXJuSW5uZXJSZWYgPSBvbmNlKGZ1bmN0aW9uIChkaXNwbGF5TmFtZSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS53YXJuKCdUaGUgXCJpbm5lclJlZlwiIEFQSSBoYXMgYmVlbiByZW1vdmVkIGluIHN0eWxlZC1jb21wb25lbnRzIHY0IGluIGZhdm9yIG9mIFJlYWN0IDE2IHJlZiBmb3J3YXJkaW5nLCB1c2UgXCJyZWZcIiBpbnN0ZWFkIGxpa2UgYSB0eXBpY2FsIGNvbXBvbmVudC4gXCJpbm5lclJlZlwiIHdhcyBkZXRlY3RlZCBvbiBjb21wb25lbnQgXCInICsgZGlzcGxheU5hbWUgKyAnXCIuJylcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy53YXJuQXR0cnNGbk9iamVjdEtleURlcHJlY2F0ZWQgPSBvbmNlKGZ1bmN0aW9uIChrZXksIGRpc3BsYXlOYW1lKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ0Z1bmN0aW9ucyBhcyBvYmplY3QtZm9ybSBhdHRycyh7fSkga2V5cyBhcmUgbm93IGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSB2ZXJzaW9uIG9mIHN0eWxlZC1jb21wb25lbnRzLiBTd2l0Y2ggdG8gdGhlIG5ldyBhdHRycyhwcm9wcyA9PiAoe30pKSBzeW50YXggaW5zdGVhZCBmb3IgZWFzaWVyIGFuZCBtb3JlIHBvd2VyZnVsIGNvbXBvc2l0aW9uLiBUaGUgYXR0cnMga2V5IGluIHF1ZXN0aW9uIGlzIFwiJyArIGtleSArICdcIiBvbiBjb21wb25lbnQgXCInICsgZGlzcGxheU5hbWUgKyAnXCIuJylcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy53YXJuTm9uU3R5bGVkQ29tcG9uZW50QXR0cnNPYmplY3RLZXkgPSBvbmNlKGZ1bmN0aW9uIChrZXksIGRpc3BsYXlOYW1lKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ0l0IGxvb2tzIGxpa2UgeW91XFwndmUgdXNlZCBhIG5vbiBzdHlsZWQtY29tcG9uZW50IGFzIHRoZSB2YWx1ZSBmb3IgdGhlIFwiJyArIGtleSArICdcIiBwcm9wIGluIGFuIG9iamVjdC1mb3JtIGF0dHJzIGNvbnN0cnVjdG9yIG9mIFwiJyArIGRpc3BsYXlOYW1lICsgJ1wiLlxcbicgKyAnWW91IHNob3VsZCB1c2UgdGhlIG5ldyBmdW5jdGlvbi1mb3JtIGF0dHJzIGNvbnN0cnVjdG9yIHdoaWNoIGF2b2lkcyB0aGlzIGlzc3VlOiBhdHRycyhwcm9wcyA9PiAoeyB5b3VyU3R1ZmYgfSkpXFxuJyArIFwiVG8gY29udGludWUgdXNpbmcgdGhlIGRlcHJlY2F0ZWQgb2JqZWN0IHN5bnRheCwgeW91J2xsIG5lZWQgdG8gd3JhcCB5b3VyIGNvbXBvbmVudCBwcm9wIGluIGEgZnVuY3Rpb24gdG8gbWFrZSBpdCBhdmFpbGFibGUgaW5zaWRlIHRoZSBzdHlsZWQgY29tcG9uZW50ICh5b3UnbGwgc3RpbGwgZ2V0IHRoZSBkZXByZWNhdGlvbiB3YXJuaW5nIHRob3VnaC4pXFxuXCIgKyAoJ0ZvciBleGFtcGxlLCB7ICcgKyBrZXkgKyAnOiAoKSA9PiBJbm5lckNvbXBvbmVudCB9IGluc3RlYWQgb2YgeyAnICsga2V5ICsgJzogSW5uZXJDb21wb25lbnQgfScpKVxuICAgICAgICApO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgSVNfQlJPV1NFUikge1xuICAgICAgY2xhc3NOYW1lVXNhZ2VDaGVja0luamVjdG9yKF90aGlzKTtcbiAgICB9XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgU3R5bGVkQ29tcG9uZW50LnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBTdHlsZVNoZWV0Q29uc3VtZXIsXG4gICAgICBudWxsLFxuICAgICAgdGhpcy5yZW5kZXJPdXRlclxuICAgICk7XG4gIH07XG5cbiAgU3R5bGVkQ29tcG9uZW50LnByb3RvdHlwZS5yZW5kZXJPdXRlciA9IGZ1bmN0aW9uIHJlbmRlck91dGVyKCkge1xuICAgIHZhciBzdHlsZVNoZWV0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBTdHlsZVNoZWV0Lm1hc3RlcjtcblxuICAgIHRoaXMuc3R5bGVTaGVldCA9IHN0eWxlU2hlZXQ7XG5cbiAgICAvLyBObyBuZWVkIHRvIHN1YnNjcmliZSBhIHN0YXRpYyBjb21wb25lbnQgdG8gdGhlbWUgY2hhbmdlcywgaXQgd29uJ3QgY2hhbmdlIGFueXRoaW5nXG4gICAgaWYgKHRoaXMucHJvcHMuZm9yd2FyZGVkQ29tcG9uZW50LmNvbXBvbmVudFN0eWxlLmlzU3RhdGljKSByZXR1cm4gdGhpcy5yZW5kZXJJbm5lcigpO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBUaGVtZUNvbnN1bWVyLFxuICAgICAgbnVsbCxcbiAgICAgIHRoaXMucmVuZGVySW5uZXJcbiAgICApO1xuICB9O1xuXG4gIFN0eWxlZENvbXBvbmVudC5wcm90b3R5cGUucmVuZGVySW5uZXIgPSBmdW5jdGlvbiByZW5kZXJJbm5lcih0aGVtZSkge1xuICAgIHZhciBfcHJvcHMkZm9yd2FyZGVkQ29tcG8gPSB0aGlzLnByb3BzLmZvcndhcmRlZENvbXBvbmVudCxcbiAgICAgICAgY29tcG9uZW50U3R5bGUgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8uY29tcG9uZW50U3R5bGUsXG4gICAgICAgIGRlZmF1bHRQcm9wcyA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby5kZWZhdWx0UHJvcHMsXG4gICAgICAgIGRpc3BsYXlOYW1lID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLmRpc3BsYXlOYW1lLFxuICAgICAgICBmb2xkZWRDb21wb25lbnRJZHMgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8uZm9sZGVkQ29tcG9uZW50SWRzLFxuICAgICAgICBzdHlsZWRDb21wb25lbnRJZCA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby5zdHlsZWRDb21wb25lbnRJZCxcbiAgICAgICAgdGFyZ2V0ID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLnRhcmdldDtcblxuXG4gICAgdmFyIGdlbmVyYXRlZENsYXNzTmFtZSA9IHZvaWQgMDtcbiAgICBpZiAoY29tcG9uZW50U3R5bGUuaXNTdGF0aWMpIHtcbiAgICAgIGdlbmVyYXRlZENsYXNzTmFtZSA9IHRoaXMuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoRU1QVFlfT0JKRUNULCB0aGlzLnByb3BzKTtcbiAgICB9IGVsc2UgaWYgKHRoZW1lICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGdlbmVyYXRlZENsYXNzTmFtZSA9IHRoaXMuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoZGV0ZXJtaW5lVGhlbWUodGhpcy5wcm9wcywgdGhlbWUsIGRlZmF1bHRQcm9wcyksIHRoaXMucHJvcHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBnZW5lcmF0ZWRDbGFzc05hbWUgPSB0aGlzLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKHRoaXMucHJvcHMudGhlbWUgfHwgRU1QVFlfT0JKRUNULCB0aGlzLnByb3BzKTtcbiAgICB9XG5cbiAgICB2YXIgZWxlbWVudFRvQmVDcmVhdGVkID0gdGhpcy5wcm9wcy5hcyB8fCB0aGlzLmF0dHJzLmFzIHx8IHRhcmdldDtcbiAgICB2YXIgaXNUYXJnZXRUYWcgPSBpc1RhZyhlbGVtZW50VG9CZUNyZWF0ZWQpO1xuXG4gICAgdmFyIHByb3BzRm9yRWxlbWVudCA9IHt9O1xuICAgIHZhciBjb21wdXRlZFByb3BzID0gX2V4dGVuZHMoe30sIHRoaXMuYXR0cnMsIHRoaXMucHJvcHMpO1xuXG4gICAgdmFyIGtleSA9IHZvaWQgMDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gICAgZm9yIChrZXkgaW4gY29tcHV0ZWRQcm9wcykge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYga2V5ID09PSAnaW5uZXJSZWYnICYmIGlzVGFyZ2V0VGFnKSB7XG4gICAgICAgIHRoaXMud2FybklubmVyUmVmKGRpc3BsYXlOYW1lKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGtleSA9PT0gJ2ZvcndhcmRlZENvbXBvbmVudCcgfHwga2V5ID09PSAnYXMnKSBjb250aW51ZTtlbHNlIGlmIChrZXkgPT09ICdmb3J3YXJkZWRSZWYnKSBwcm9wc0ZvckVsZW1lbnQucmVmID0gY29tcHV0ZWRQcm9wc1trZXldO2Vsc2UgaWYgKCFpc1RhcmdldFRhZyB8fCB2YWxpZEF0dHIoa2V5KSkge1xuICAgICAgICAvLyBEb24ndCBwYXNzIHRocm91Z2ggbm9uIEhUTUwgdGFncyB0aHJvdWdoIHRvIEhUTUwgZWxlbWVudHNcbiAgICAgICAgcHJvcHNGb3JFbGVtZW50W2tleV0gPSBjb21wdXRlZFByb3BzW2tleV07XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucHJvcHMuc3R5bGUgJiYgdGhpcy5hdHRycy5zdHlsZSkge1xuICAgICAgcHJvcHNGb3JFbGVtZW50LnN0eWxlID0gX2V4dGVuZHMoe30sIHRoaXMuYXR0cnMuc3R5bGUsIHRoaXMucHJvcHMuc3R5bGUpO1xuICAgIH1cblxuICAgIHByb3BzRm9yRWxlbWVudC5jbGFzc05hbWUgPSBBcnJheS5wcm90b3R5cGUuY29uY2F0KGZvbGRlZENvbXBvbmVudElkcywgdGhpcy5wcm9wcy5jbGFzc05hbWUsIHN0eWxlZENvbXBvbmVudElkLCB0aGlzLmF0dHJzLmNsYXNzTmFtZSwgZ2VuZXJhdGVkQ2xhc3NOYW1lKS5maWx0ZXIoQm9vbGVhbikuam9pbignICcpO1xuXG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoZWxlbWVudFRvQmVDcmVhdGVkLCBwcm9wc0ZvckVsZW1lbnQpO1xuICB9O1xuXG4gIFN0eWxlZENvbXBvbmVudC5wcm90b3R5cGUuYnVpbGRFeGVjdXRpb25Db250ZXh0ID0gZnVuY3Rpb24gYnVpbGRFeGVjdXRpb25Db250ZXh0KHRoZW1lLCBwcm9wcywgYXR0cnMpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBjb250ZXh0ID0gX2V4dGVuZHMoe30sIHByb3BzLCB7IHRoZW1lOiB0aGVtZSB9KTtcblxuICAgIGlmICghYXR0cnMubGVuZ3RoKSByZXR1cm4gY29udGV4dDtcblxuICAgIHRoaXMuYXR0cnMgPSB7fTtcblxuICAgIGF0dHJzLmZvckVhY2goZnVuY3Rpb24gKGF0dHJEZWYpIHtcbiAgICAgIHZhciByZXNvbHZlZEF0dHJEZWYgPSBhdHRyRGVmO1xuICAgICAgdmFyIGF0dHJEZWZXYXNGbiA9IGZhbHNlO1xuICAgICAgdmFyIGF0dHIgPSB2b2lkIDA7XG4gICAgICB2YXIga2V5ID0gdm9pZCAwO1xuXG4gICAgICBpZiAoaXNGdW5jdGlvbihyZXNvbHZlZEF0dHJEZWYpKSB7XG4gICAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgICAgcmVzb2x2ZWRBdHRyRGVmID0gcmVzb2x2ZWRBdHRyRGVmKGNvbnRleHQpO1xuICAgICAgICBhdHRyRGVmV2FzRm4gPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICAvKiBlc2xpbnQtZGlzYWJsZSBndWFyZC1mb3ItaW4gKi9cbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIGZvciAoa2V5IGluIHJlc29sdmVkQXR0ckRlZikge1xuICAgICAgICBhdHRyID0gcmVzb2x2ZWRBdHRyRGVmW2tleV07XG5cbiAgICAgICAgaWYgKCFhdHRyRGVmV2FzRm4pIHtcbiAgICAgICAgICBpZiAoaXNGdW5jdGlvbihhdHRyKSAmJiAhaXNEZXJpdmVkUmVhY3RDb21wb25lbnQoYXR0cikgJiYgIWlzU3R5bGVkQ29tcG9uZW50KGF0dHIpKSB7XG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgICBfdGhpczIud2FybkF0dHJzRm5PYmplY3RLZXlEZXByZWNhdGVkKGtleSwgcHJvcHMuZm9yd2FyZGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYXR0ciA9IGF0dHIoY29udGV4dCk7XG5cbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGF0dHIpKSB7XG4gICAgICAgICAgICAgIF90aGlzMi53YXJuTm9uU3R5bGVkQ29tcG9uZW50QXR0cnNPYmplY3RLZXkoa2V5LCBwcm9wcy5mb3J3YXJkZWRDb21wb25lbnQuZGlzcGxheU5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzMi5hdHRyc1trZXldID0gYXR0cjtcbiAgICAgICAgY29udGV4dFtrZXldID0gYXR0cjtcbiAgICAgIH1cbiAgICAgIC8qIGVzbGludC1lbmFibGUgKi9cbiAgICB9KTtcblxuICAgIHJldHVybiBjb250ZXh0O1xuICB9O1xuXG4gIFN0eWxlZENvbXBvbmVudC5wcm90b3R5cGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMgPSBmdW5jdGlvbiBnZW5lcmF0ZUFuZEluamVjdFN0eWxlcyh0aGVtZSwgcHJvcHMpIHtcbiAgICB2YXIgX3Byb3BzJGZvcndhcmRlZENvbXBvMiA9IHByb3BzLmZvcndhcmRlZENvbXBvbmVudCxcbiAgICAgICAgYXR0cnMgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8yLmF0dHJzLFxuICAgICAgICBjb21wb25lbnRTdHlsZSA9IF9wcm9wcyRmb3J3YXJkZWRDb21wbzIuY29tcG9uZW50U3R5bGUsXG4gICAgICAgIHdhcm5Ub29NYW55Q2xhc3NlcyA9IF9wcm9wcyRmb3J3YXJkZWRDb21wbzIud2FyblRvb01hbnlDbGFzc2VzO1xuXG4gICAgLy8gc3RhdGljYWxseSBzdHlsZWQtY29tcG9uZW50cyBkb24ndCBuZWVkIHRvIGJ1aWxkIGFuIGV4ZWN1dGlvbiBjb250ZXh0IG9iamVjdCxcbiAgICAvLyBhbmQgc2hvdWxkbid0IGJlIGluY3JlYXNpbmcgdGhlIG51bWJlciBvZiBjbGFzcyBuYW1lc1xuXG4gICAgaWYgKGNvbXBvbmVudFN0eWxlLmlzU3RhdGljICYmICFhdHRycy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBjb21wb25lbnRTdHlsZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhFTVBUWV9PQkpFQ1QsIHRoaXMuc3R5bGVTaGVldCk7XG4gICAgfVxuXG4gICAgdmFyIGNsYXNzTmFtZSA9IGNvbXBvbmVudFN0eWxlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKHRoaXMuYnVpbGRFeGVjdXRpb25Db250ZXh0KHRoZW1lLCBwcm9wcywgYXR0cnMpLCB0aGlzLnN0eWxlU2hlZXQpO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FyblRvb01hbnlDbGFzc2VzKSB3YXJuVG9vTWFueUNsYXNzZXMoY2xhc3NOYW1lKTtcblxuICAgIHJldHVybiBjbGFzc05hbWU7XG4gIH07XG5cbiAgcmV0dXJuIFN0eWxlZENvbXBvbmVudDtcbn0oQ29tcG9uZW50KTtcblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVkQ29tcG9uZW50KHRhcmdldCwgb3B0aW9ucywgcnVsZXMpIHtcbiAgdmFyIGlzVGFyZ2V0U3R5bGVkQ29tcCA9IGlzU3R5bGVkQ29tcG9uZW50KHRhcmdldCk7XG4gIHZhciBpc0NsYXNzID0gIWlzVGFnKHRhcmdldCk7XG5cbiAgdmFyIF9vcHRpb25zJGRpc3BsYXlOYW1lID0gb3B0aW9ucy5kaXNwbGF5TmFtZSxcbiAgICAgIGRpc3BsYXlOYW1lID0gX29wdGlvbnMkZGlzcGxheU5hbWUgPT09IHVuZGVmaW5lZCA/IGdlbmVyYXRlRGlzcGxheU5hbWUodGFyZ2V0KSA6IF9vcHRpb25zJGRpc3BsYXlOYW1lLFxuICAgICAgX29wdGlvbnMkY29tcG9uZW50SWQgPSBvcHRpb25zLmNvbXBvbmVudElkLFxuICAgICAgY29tcG9uZW50SWQgPSBfb3B0aW9ucyRjb21wb25lbnRJZCA9PT0gdW5kZWZpbmVkID8gZ2VuZXJhdGVJZChDb21wb25lbnRTdHlsZSwgb3B0aW9ucy5kaXNwbGF5TmFtZSwgb3B0aW9ucy5wYXJlbnRDb21wb25lbnRJZCkgOiBfb3B0aW9ucyRjb21wb25lbnRJZCxcbiAgICAgIF9vcHRpb25zJFBhcmVudENvbXBvbiA9IG9wdGlvbnMuUGFyZW50Q29tcG9uZW50LFxuICAgICAgUGFyZW50Q29tcG9uZW50ID0gX29wdGlvbnMkUGFyZW50Q29tcG9uID09PSB1bmRlZmluZWQgPyBTdHlsZWRDb21wb25lbnQgOiBfb3B0aW9ucyRQYXJlbnRDb21wb24sXG4gICAgICBfb3B0aW9ucyRhdHRycyA9IG9wdGlvbnMuYXR0cnMsXG4gICAgICBhdHRycyA9IF9vcHRpb25zJGF0dHJzID09PSB1bmRlZmluZWQgPyBFTVBUWV9BUlJBWSA6IF9vcHRpb25zJGF0dHJzO1xuXG5cbiAgdmFyIHN0eWxlZENvbXBvbmVudElkID0gb3B0aW9ucy5kaXNwbGF5TmFtZSAmJiBvcHRpb25zLmNvbXBvbmVudElkID8gZXNjYXBlKG9wdGlvbnMuZGlzcGxheU5hbWUpICsgJy0nICsgb3B0aW9ucy5jb21wb25lbnRJZCA6IG9wdGlvbnMuY29tcG9uZW50SWQgfHwgY29tcG9uZW50SWQ7XG5cbiAgLy8gZm9sZCB0aGUgdW5kZXJseWluZyBTdHlsZWRDb21wb25lbnQgYXR0cnMgdXAgKGltcGxpY2l0IGV4dGVuZClcbiAgdmFyIGZpbmFsQXR0cnMgPVxuICAvLyAkRmxvd0ZpeE1lXG4gIGlzVGFyZ2V0U3R5bGVkQ29tcCAmJiB0YXJnZXQuYXR0cnMgPyBBcnJheS5wcm90b3R5cGUuY29uY2F0KHRhcmdldC5hdHRycywgYXR0cnMpLmZpbHRlcihCb29sZWFuKSA6IGF0dHJzO1xuXG4gIHZhciBjb21wb25lbnRTdHlsZSA9IG5ldyBDb21wb25lbnRTdHlsZShpc1RhcmdldFN0eWxlZENvbXAgPyAvLyBmb2xkIHRoZSB1bmRlcmx5aW5nIFN0eWxlZENvbXBvbmVudCBydWxlcyB1cCAoaW1wbGljaXQgZXh0ZW5kKVxuICAvLyAkRmxvd0ZpeE1lXG4gIHRhcmdldC5jb21wb25lbnRTdHlsZS5ydWxlcy5jb25jYXQocnVsZXMpIDogcnVsZXMsIGZpbmFsQXR0cnMsIHN0eWxlZENvbXBvbmVudElkKTtcblxuICAvKipcbiAgICogZm9yd2FyZFJlZiBjcmVhdGVzIGEgbmV3IGludGVyaW0gY29tcG9uZW50LCB3aGljaCB3ZSdsbCB0YWtlIGFkdmFudGFnZSBvZlxuICAgKiBpbnN0ZWFkIG9mIGV4dGVuZGluZyBQYXJlbnRDb21wb25lbnQgdG8gY3JlYXRlIF9hbm90aGVyXyBpbnRlcmltIGNsYXNzXG4gICAqL1xuICB2YXIgV3JhcHBlZFN0eWxlZENvbXBvbmVudCA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gKHByb3BzLCByZWYpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChQYXJlbnRDb21wb25lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBmb3J3YXJkZWRDb21wb25lbnQ6IFdyYXBwZWRTdHlsZWRDb21wb25lbnQsIGZvcndhcmRlZFJlZjogcmVmIH0pKTtcbiAgfSk7XG5cbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LmF0dHJzID0gZmluYWxBdHRycztcbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LmNvbXBvbmVudFN0eWxlID0gY29tcG9uZW50U3R5bGU7XG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuZm9sZGVkQ29tcG9uZW50SWRzID0gaXNUYXJnZXRTdHlsZWRDb21wID8gLy8gJEZsb3dGaXhNZVxuICBBcnJheS5wcm90b3R5cGUuY29uY2F0KHRhcmdldC5mb2xkZWRDb21wb25lbnRJZHMsIHRhcmdldC5zdHlsZWRDb21wb25lbnRJZCkgOiBFTVBUWV9BUlJBWTtcblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuc3R5bGVkQ29tcG9uZW50SWQgPSBzdHlsZWRDb21wb25lbnRJZDtcblxuICAvLyBmb2xkIHRoZSB1bmRlcmx5aW5nIFN0eWxlZENvbXBvbmVudCB0YXJnZXQgdXAgc2luY2Ugd2UgZm9sZGVkIHRoZSBzdHlsZXNcbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LnRhcmdldCA9IGlzVGFyZ2V0U3R5bGVkQ29tcCA/IHRhcmdldC50YXJnZXQgOiB0YXJnZXQ7XG5cbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LndpdGhDb21wb25lbnQgPSBmdW5jdGlvbiB3aXRoQ29tcG9uZW50KHRhZykge1xuICAgIHZhciBwcmV2aW91c0NvbXBvbmVudElkID0gb3B0aW9ucy5jb21wb25lbnRJZCxcbiAgICAgICAgb3B0aW9uc1RvQ29weSA9IG9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9wdGlvbnMsIFsnY29tcG9uZW50SWQnXSk7XG5cblxuICAgIHZhciBuZXdDb21wb25lbnRJZCA9IHByZXZpb3VzQ29tcG9uZW50SWQgJiYgcHJldmlvdXNDb21wb25lbnRJZCArICctJyArIChpc1RhZyh0YWcpID8gdGFnIDogZXNjYXBlKGdldENvbXBvbmVudE5hbWUodGFnKSkpO1xuXG4gICAgdmFyIG5ld09wdGlvbnMgPSBfZXh0ZW5kcyh7fSwgb3B0aW9uc1RvQ29weSwge1xuICAgICAgYXR0cnM6IGZpbmFsQXR0cnMsXG4gICAgICBjb21wb25lbnRJZDogbmV3Q29tcG9uZW50SWQsXG4gICAgICBQYXJlbnRDb21wb25lbnQ6IFBhcmVudENvbXBvbmVudFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNyZWF0ZVN0eWxlZENvbXBvbmVudCh0YWcsIG5ld09wdGlvbnMsIHJ1bGVzKTtcbiAgfTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50Lndhcm5Ub29NYW55Q2xhc3NlcyA9IGNyZWF0ZVdhcm5Ub29NYW55Q2xhc3NlcyhkaXNwbGF5TmFtZSk7XG4gIH1cblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICcuJyArIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuc3R5bGVkQ29tcG9uZW50SWQ7XG4gIH07XG5cbiAgaWYgKGlzQ2xhc3MpIHtcbiAgICBob2lzdE5vblJlYWN0U3RhdGljcyhXcmFwcGVkU3R5bGVkQ29tcG9uZW50LCB0YXJnZXQsIHtcbiAgICAgIC8vIGFsbCBTQy1zcGVjaWZpYyB0aGluZ3Mgc2hvdWxkIG5vdCBiZSBob2lzdGVkXG4gICAgICBhdHRyczogdHJ1ZSxcbiAgICAgIGNvbXBvbmVudFN0eWxlOiB0cnVlLFxuICAgICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgICBmb2xkZWRDb21wb25lbnRJZHM6IHRydWUsXG4gICAgICBzdHlsZWRDb21wb25lbnRJZDogdHJ1ZSxcbiAgICAgIHRhcmdldDogdHJ1ZSxcbiAgICAgIHdpdGhDb21wb25lbnQ6IHRydWVcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBXcmFwcGVkU3R5bGVkQ29tcG9uZW50O1xufVxuXG4vLyBcbi8vIFRoYW5rcyB0byBSZWFjdERPTUZhY3RvcmllcyBmb3IgdGhpcyBoYW5keSBsaXN0IVxuXG52YXIgZG9tRWxlbWVudHMgPSBbJ2EnLCAnYWJicicsICdhZGRyZXNzJywgJ2FyZWEnLCAnYXJ0aWNsZScsICdhc2lkZScsICdhdWRpbycsICdiJywgJ2Jhc2UnLCAnYmRpJywgJ2JkbycsICdiaWcnLCAnYmxvY2txdW90ZScsICdib2R5JywgJ2JyJywgJ2J1dHRvbicsICdjYW52YXMnLCAnY2FwdGlvbicsICdjaXRlJywgJ2NvZGUnLCAnY29sJywgJ2NvbGdyb3VwJywgJ2RhdGEnLCAnZGF0YWxpc3QnLCAnZGQnLCAnZGVsJywgJ2RldGFpbHMnLCAnZGZuJywgJ2RpYWxvZycsICdkaXYnLCAnZGwnLCAnZHQnLCAnZW0nLCAnZW1iZWQnLCAnZmllbGRzZXQnLCAnZmlnY2FwdGlvbicsICdmaWd1cmUnLCAnZm9vdGVyJywgJ2Zvcm0nLCAnaDEnLCAnaDInLCAnaDMnLCAnaDQnLCAnaDUnLCAnaDYnLCAnaGVhZCcsICdoZWFkZXInLCAnaGdyb3VwJywgJ2hyJywgJ2h0bWwnLCAnaScsICdpZnJhbWUnLCAnaW1nJywgJ2lucHV0JywgJ2lucycsICdrYmQnLCAna2V5Z2VuJywgJ2xhYmVsJywgJ2xlZ2VuZCcsICdsaScsICdsaW5rJywgJ21haW4nLCAnbWFwJywgJ21hcmsnLCAnbWFycXVlZScsICdtZW51JywgJ21lbnVpdGVtJywgJ21ldGEnLCAnbWV0ZXInLCAnbmF2JywgJ25vc2NyaXB0JywgJ29iamVjdCcsICdvbCcsICdvcHRncm91cCcsICdvcHRpb24nLCAnb3V0cHV0JywgJ3AnLCAncGFyYW0nLCAncGljdHVyZScsICdwcmUnLCAncHJvZ3Jlc3MnLCAncScsICdycCcsICdydCcsICdydWJ5JywgJ3MnLCAnc2FtcCcsICdzY3JpcHQnLCAnc2VjdGlvbicsICdzZWxlY3QnLCAnc21hbGwnLCAnc291cmNlJywgJ3NwYW4nLCAnc3Ryb25nJywgJ3N0eWxlJywgJ3N1YicsICdzdW1tYXJ5JywgJ3N1cCcsICd0YWJsZScsICd0Ym9keScsICd0ZCcsICd0ZXh0YXJlYScsICd0Zm9vdCcsICd0aCcsICd0aGVhZCcsICd0aW1lJywgJ3RpdGxlJywgJ3RyJywgJ3RyYWNrJywgJ3UnLCAndWwnLCAndmFyJywgJ3ZpZGVvJywgJ3dicicsXG5cbi8vIFNWR1xuJ2NpcmNsZScsICdjbGlwUGF0aCcsICdkZWZzJywgJ2VsbGlwc2UnLCAnZm9yZWlnbk9iamVjdCcsICdnJywgJ2ltYWdlJywgJ2xpbmUnLCAnbGluZWFyR3JhZGllbnQnLCAnbWFzaycsICdwYXRoJywgJ3BhdHRlcm4nLCAncG9seWdvbicsICdwb2x5bGluZScsICdyYWRpYWxHcmFkaWVudCcsICdyZWN0JywgJ3N0b3AnLCAnc3ZnJywgJ3RleHQnLCAndHNwYW4nXTtcblxuLy8gXG5cbnZhciBzdHlsZWQgPSBmdW5jdGlvbiBzdHlsZWQodGFnKSB7XG4gIHJldHVybiBjb25zdHJ1Y3RXaXRoT3B0aW9ucyhjcmVhdGVTdHlsZWRDb21wb25lbnQsIHRhZyk7XG59O1xuXG4vLyBTaG9ydGhhbmRzIGZvciBhbGwgdmFsaWQgSFRNTCBFbGVtZW50c1xuZG9tRWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbiAoZG9tRWxlbWVudCkge1xuICBzdHlsZWRbZG9tRWxlbWVudF0gPSBzdHlsZWQoZG9tRWxlbWVudCk7XG59KTtcblxuLy8gXG5cbnZhciBHbG9iYWxTdHlsZSA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gR2xvYmFsU3R5bGUocnVsZXMsIGNvbXBvbmVudElkKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgR2xvYmFsU3R5bGUpO1xuXG4gICAgdGhpcy5ydWxlcyA9IHJ1bGVzO1xuICAgIHRoaXMuY29tcG9uZW50SWQgPSBjb21wb25lbnRJZDtcbiAgICB0aGlzLmlzU3RhdGljID0gaXNTdGF0aWNSdWxlcyhydWxlcywgRU1QVFlfQVJSQVkpO1xuXG4gICAgaWYgKCFTdHlsZVNoZWV0Lm1hc3Rlci5oYXNJZChjb21wb25lbnRJZCkpIHtcbiAgICAgIFN0eWxlU2hlZXQubWFzdGVyLmRlZmVycmVkSW5qZWN0KGNvbXBvbmVudElkLCBbXSk7XG4gICAgfVxuICB9XG5cbiAgR2xvYmFsU3R5bGUucHJvdG90eXBlLmNyZWF0ZVN0eWxlcyA9IGZ1bmN0aW9uIGNyZWF0ZVN0eWxlcyhleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KSB7XG4gICAgdmFyIGZsYXRDU1MgPSBmbGF0dGVuKHRoaXMucnVsZXMsIGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpO1xuICAgIHZhciBjc3MgPSBzdHJpbmdpZnlSdWxlcyhmbGF0Q1NTLCAnJyk7XG5cbiAgICBzdHlsZVNoZWV0LmluamVjdCh0aGlzLmNvbXBvbmVudElkLCBjc3MpO1xuICB9O1xuXG4gIEdsb2JhbFN0eWxlLnByb3RvdHlwZS5yZW1vdmVTdHlsZXMgPSBmdW5jdGlvbiByZW1vdmVTdHlsZXMoc3R5bGVTaGVldCkge1xuICAgIHZhciBjb21wb25lbnRJZCA9IHRoaXMuY29tcG9uZW50SWQ7XG5cbiAgICBpZiAoc3R5bGVTaGVldC5oYXNJZChjb21wb25lbnRJZCkpIHtcbiAgICAgIHN0eWxlU2hlZXQucmVtb3ZlKGNvbXBvbmVudElkKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gVE9ETzogb3ZlcndyaXRlIGluLXBsYWNlIGluc3RlYWQgb2YgcmVtb3ZlK2NyZWF0ZT9cblxuXG4gIEdsb2JhbFN0eWxlLnByb3RvdHlwZS5yZW5kZXJTdHlsZXMgPSBmdW5jdGlvbiByZW5kZXJTdHlsZXMoZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCkge1xuICAgIHRoaXMucmVtb3ZlU3R5bGVzKHN0eWxlU2hlZXQpO1xuICAgIHRoaXMuY3JlYXRlU3R5bGVzKGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpO1xuICB9O1xuXG4gIHJldHVybiBHbG9iYWxTdHlsZTtcbn0oKTtcblxuLy8gXG5cbi8vIHBsYWNlIG91ciBjYWNoZSBpbnRvIHNoYXJlZCBjb250ZXh0IHNvIGl0J2xsIHBlcnNpc3QgYmV0d2VlbiBITVJzXG5pZiAoSVNfQlJPV1NFUikge1xuICB3aW5kb3cuc2NDR1NITVJDYWNoZSA9IHt9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVHbG9iYWxTdHlsZShzdHJpbmdzKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpbnRlcnBvbGF0aW9ucyA9IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBpbnRlcnBvbGF0aW9uc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICB2YXIgcnVsZXMgPSBjc3MuYXBwbHkodW5kZWZpbmVkLCBbc3RyaW5nc10uY29uY2F0KGludGVycG9sYXRpb25zKSk7XG4gIHZhciBpZCA9ICdzYy1nbG9iYWwtJyArIG11cm11cmhhc2goSlNPTi5zdHJpbmdpZnkocnVsZXMpKTtcbiAgdmFyIHN0eWxlID0gbmV3IEdsb2JhbFN0eWxlKHJ1bGVzLCBpZCk7XG5cbiAgdmFyIEdsb2JhbFN0eWxlQ29tcG9uZW50ID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgICBpbmhlcml0cyhHbG9iYWxTdHlsZUNvbXBvbmVudCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBHbG9iYWxTdHlsZUNvbXBvbmVudCgpIHtcbiAgICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIEdsb2JhbFN0eWxlQ29tcG9uZW50KTtcblxuICAgICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcykpO1xuXG4gICAgICB2YXIgX3RoaXMkY29uc3RydWN0b3IgPSBfdGhpcy5jb25zdHJ1Y3RvcixcbiAgICAgICAgICBnbG9iYWxTdHlsZSA9IF90aGlzJGNvbnN0cnVjdG9yLmdsb2JhbFN0eWxlLFxuICAgICAgICAgIHN0eWxlZENvbXBvbmVudElkID0gX3RoaXMkY29uc3RydWN0b3Iuc3R5bGVkQ29tcG9uZW50SWQ7XG5cblxuICAgICAgaWYgKElTX0JST1dTRVIpIHtcbiAgICAgICAgd2luZG93LnNjQ0dTSE1SQ2FjaGVbc3R5bGVkQ29tcG9uZW50SWRdID0gKHdpbmRvdy5zY0NHU0hNUkNhY2hlW3N0eWxlZENvbXBvbmVudElkXSB8fCAwKSArIDE7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogVGhpcyBmaXhlcyBITVIgY29tcGF0aWJpbGl0eS4gRG9uJ3QgYXNrIG1lIHdoeSwgYnV0IHRoaXMgY29tYmluYXRpb24gb2ZcbiAgICAgICAqIGNhY2hpbmcgdGhlIGNsb3N1cmUgdmFyaWFibGVzIHZpYSBzdGF0aWNzIGFuZCB0aGVuIHBlcnNpc3RpbmcgdGhlIHN0YXRpY3MgaW5cbiAgICAgICAqIHN0YXRlIHdvcmtzIGFjcm9zcyBITVIgd2hlcmUgbm8gb3RoZXIgY29tYmluYXRpb24gZGlkLiDCr1xcXyjjg4QpXy/Cr1xuICAgICAgICovXG4gICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgZ2xvYmFsU3R5bGU6IGdsb2JhbFN0eWxlLFxuICAgICAgICBzdHlsZWRDb21wb25lbnRJZDogc3R5bGVkQ29tcG9uZW50SWRcbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgR2xvYmFsU3R5bGVDb21wb25lbnQucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICBpZiAod2luZG93LnNjQ0dTSE1SQ2FjaGVbdGhpcy5zdGF0ZS5zdHlsZWRDb21wb25lbnRJZF0pIHtcbiAgICAgICAgd2luZG93LnNjQ0dTSE1SQ2FjaGVbdGhpcy5zdGF0ZS5zdHlsZWRDb21wb25lbnRJZF0gLT0gMTtcbiAgICAgIH1cbiAgICAgIC8qKlxuICAgICAgICogRGVwZW5kaW5nIG9uIHRoZSBvcmRlciBcInJlbmRlclwiIGlzIGNhbGxlZCB0aGlzIGNhbiBjYXVzZSB0aGUgc3R5bGVzIHRvIGJlIGxvc3RcbiAgICAgICAqIHVudGlsIHRoZSBuZXh0IHJlbmRlciBwYXNzIG9mIHRoZSByZW1haW5pbmcgaW5zdGFuY2UsIHdoaWNoIG1heVxuICAgICAgICogbm90IGJlIGltbWVkaWF0ZS5cbiAgICAgICAqL1xuICAgICAgaWYgKHdpbmRvdy5zY0NHU0hNUkNhY2hlW3RoaXMuc3RhdGUuc3R5bGVkQ29tcG9uZW50SWRdID09PSAwKSB7XG4gICAgICAgIHRoaXMuc3RhdGUuZ2xvYmFsU3R5bGUucmVtb3ZlU3R5bGVzKHRoaXMuc3R5bGVTaGVldCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIEdsb2JhbFN0eWxlQ29tcG9uZW50LnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgUmVhY3QuQ2hpbGRyZW4uY291bnQodGhpcy5wcm9wcy5jaGlsZHJlbikpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgY29uc29sZS53YXJuKCdUaGUgZ2xvYmFsIHN0eWxlIGNvbXBvbmVudCAnICsgdGhpcy5zdGF0ZS5zdHlsZWRDb21wb25lbnRJZCArICcgd2FzIGdpdmVuIGNoaWxkIEpTWC4gY3JlYXRlR2xvYmFsU3R5bGUgZG9lcyBub3QgcmVuZGVyIGNoaWxkcmVuLicpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgU3R5bGVTaGVldENvbnN1bWVyLFxuICAgICAgICBudWxsLFxuICAgICAgICBmdW5jdGlvbiAoc3R5bGVTaGVldCkge1xuICAgICAgICAgIF90aGlzMi5zdHlsZVNoZWV0ID0gc3R5bGVTaGVldCB8fCBTdHlsZVNoZWV0Lm1hc3RlcjtcblxuICAgICAgICAgIHZhciBnbG9iYWxTdHlsZSA9IF90aGlzMi5zdGF0ZS5nbG9iYWxTdHlsZTtcblxuXG4gICAgICAgICAgaWYgKGdsb2JhbFN0eWxlLmlzU3RhdGljKSB7XG4gICAgICAgICAgICBnbG9iYWxTdHlsZS5yZW5kZXJTdHlsZXMoU1RBVElDX0VYRUNVVElPTl9DT05URVhULCBfdGhpczIuc3R5bGVTaGVldCk7XG5cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgVGhlbWVDb25zdW1lcixcbiAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgZnVuY3Rpb24gKHRoZW1lKSB7XG4gICAgICAgICAgICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgICAgICAgICAgIHZhciBkZWZhdWx0UHJvcHMgPSBfdGhpczIuY29uc3RydWN0b3IuZGVmYXVsdFByb3BzO1xuXG5cbiAgICAgICAgICAgICAgICB2YXIgY29udGV4dCA9IF9leHRlbmRzKHt9LCBfdGhpczIucHJvcHMpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGVtZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnRleHQudGhlbWUgPSBkZXRlcm1pbmVUaGVtZShfdGhpczIucHJvcHMsIHRoZW1lLCBkZWZhdWx0UHJvcHMpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGdsb2JhbFN0eWxlLnJlbmRlclN0eWxlcyhjb250ZXh0LCBfdGhpczIuc3R5bGVTaGVldCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfTtcblxuICAgIHJldHVybiBHbG9iYWxTdHlsZUNvbXBvbmVudDtcbiAgfShSZWFjdC5Db21wb25lbnQpO1xuXG4gIEdsb2JhbFN0eWxlQ29tcG9uZW50Lmdsb2JhbFN0eWxlID0gc3R5bGU7XG4gIEdsb2JhbFN0eWxlQ29tcG9uZW50LnN0eWxlZENvbXBvbmVudElkID0gaWQ7XG5cblxuICByZXR1cm4gR2xvYmFsU3R5bGVDb21wb25lbnQ7XG59XG5cbi8vIFxuXG52YXIgcmVwbGFjZVdoaXRlc3BhY2UgPSBmdW5jdGlvbiByZXBsYWNlV2hpdGVzcGFjZShzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9cXHN8XFxcXG4vZywgJycpO1xufTtcblxuZnVuY3Rpb24ga2V5ZnJhbWVzKHN0cmluZ3MpIHtcbiAgLyogV2FybmluZyBpZiB5b3UndmUgdXNlZCBrZXlmcmFtZXMgb24gUmVhY3QgTmF0aXZlICovXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnKSB7XG4gICAgY29uc29sZS53YXJuKCdga2V5ZnJhbWVzYCBjYW5ub3QgYmUgdXNlZCBvbiBSZWFjdE5hdGl2ZSwgb25seSBvbiB0aGUgd2ViLiBUbyBkbyBhbmltYXRpb24gaW4gUmVhY3ROYXRpdmUgcGxlYXNlIHVzZSBBbmltYXRlZC4nKTtcbiAgfVxuXG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpbnRlcnBvbGF0aW9ucyA9IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBpbnRlcnBvbGF0aW9uc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICB2YXIgcnVsZXMgPSBjc3MuYXBwbHkodW5kZWZpbmVkLCBbc3RyaW5nc10uY29uY2F0KGludGVycG9sYXRpb25zKSk7XG5cbiAgdmFyIG5hbWUgPSBnZW5lcmF0ZUFscGhhYmV0aWNOYW1lKG11cm11cmhhc2gocmVwbGFjZVdoaXRlc3BhY2UoSlNPTi5zdHJpbmdpZnkocnVsZXMpKSkpO1xuXG4gIHJldHVybiBuZXcgS2V5ZnJhbWVzKG5hbWUsIHN0cmluZ2lmeVJ1bGVzKHJ1bGVzLCBuYW1lLCAnQGtleWZyYW1lcycpKTtcbn1cblxuLy8gXG5cbnZhciB3aXRoVGhlbWUgPSAoZnVuY3Rpb24gKENvbXBvbmVudCQkMSkge1xuICB2YXIgV2l0aFRoZW1lID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiAocHJvcHMsIHJlZikge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgVGhlbWVDb25zdW1lcixcbiAgICAgIG51bGwsXG4gICAgICBmdW5jdGlvbiAodGhlbWUpIHtcbiAgICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgICB2YXIgZGVmYXVsdFByb3BzID0gQ29tcG9uZW50JCQxLmRlZmF1bHRQcm9wcztcblxuICAgICAgICB2YXIgdGhlbWVQcm9wID0gZGV0ZXJtaW5lVGhlbWUocHJvcHMsIHRoZW1lLCBkZWZhdWx0UHJvcHMpO1xuXG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHRoZW1lUHJvcCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ1t3aXRoVGhlbWVdIFlvdSBhcmUgbm90IHVzaW5nIGEgVGhlbWVQcm92aWRlciBub3IgcGFzc2luZyBhIHRoZW1lIHByb3Agb3IgYSB0aGVtZSBpbiBkZWZhdWx0UHJvcHMgaW4gY29tcG9uZW50IGNsYXNzIFwiJyArIGdldENvbXBvbmVudE5hbWUoQ29tcG9uZW50JCQxKSArICdcIicpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50JCQxLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgdGhlbWU6IHRoZW1lUHJvcCwgcmVmOiByZWYgfSkpO1xuICAgICAgfVxuICAgICk7XG4gIH0pO1xuXG4gIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKFdpdGhUaGVtZSwgQ29tcG9uZW50JCQxKTtcblxuICBXaXRoVGhlbWUuZGlzcGxheU5hbWUgPSAnV2l0aFRoZW1lKCcgKyBnZXRDb21wb25lbnROYW1lKENvbXBvbmVudCQkMSkgKyAnKSc7XG5cbiAgcmV0dXJuIFdpdGhUaGVtZTtcbn0pO1xuXG4vLyBcblxuLyogZXNsaW50LWRpc2FibGUgKi9cbnZhciBfX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfSEFVTlRFRF9CWV9TUE9PS1lfR0hPU1RTID0ge1xuICBTdHlsZVNoZWV0OiBTdHlsZVNoZWV0XG59O1xuXG4vLyBcblxuLyogV2FybmluZyBpZiB5b3UndmUgaW1wb3J0ZWQgdGhpcyBmaWxlIG9uIFJlYWN0IE5hdGl2ZSAqL1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZScpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgY29uc29sZS53YXJuKFwiSXQgbG9va3MgbGlrZSB5b3UndmUgaW1wb3J0ZWQgJ3N0eWxlZC1jb21wb25lbnRzJyBvbiBSZWFjdCBOYXRpdmUuXFxuXCIgKyBcIlBlcmhhcHMgeW91J3JlIGxvb2tpbmcgdG8gaW1wb3J0ICdzdHlsZWQtY29tcG9uZW50cy9uYXRpdmUnP1xcblwiICsgJ1JlYWQgbW9yZSBhYm91dCB0aGlzIGF0IGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2Jhc2ljcyNyZWFjdC1uYXRpdmUnKTtcbn1cblxuLyogV2FybmluZyBpZiB0aGVyZSBhcmUgc2V2ZXJhbCBpbnN0YW5jZXMgb2Ygc3R5bGVkLWNvbXBvbmVudHMgKi9cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAndGVzdCcgJiYgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIG5hdmlnYXRvci51c2VyQWdlbnQgPT09ICdzdHJpbmcnICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignTm9kZS5qcycpID09PSAtMSAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ2pzZG9tJykgPT09IC0xKSB7XG4gIHdpbmRvd1snX19zdHlsZWQtY29tcG9uZW50cy1pbml0X18nXSA9IHdpbmRvd1snX19zdHlsZWQtY29tcG9uZW50cy1pbml0X18nXSB8fCAwO1xuXG4gIGlmICh3aW5kb3dbJ19fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fJ10gPT09IDEpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUud2FybihcIkl0IGxvb2tzIGxpa2UgdGhlcmUgYXJlIHNldmVyYWwgaW5zdGFuY2VzIG9mICdzdHlsZWQtY29tcG9uZW50cycgaW5pdGlhbGl6ZWQgaW4gdGhpcyBhcHBsaWNhdGlvbi4gXCIgKyAnVGhpcyBtYXkgY2F1c2UgZHluYW1pYyBzdHlsZXMgbm90IHJlbmRlcmluZyBwcm9wZXJseSwgZXJyb3JzIGhhcHBlbmluZyBkdXJpbmcgcmVoeWRyYXRpb24gcHJvY2VzcyAnICsgJ2FuZCBtYWtlcyB5b3VyIGFwcGxpY2F0aW9uIGJpZ2dlciB3aXRob3V0IGEgZ29vZCByZWFzb24uXFxuXFxuJyArICdTZWUgaHR0cHM6Ly9zLWMuc2gvMkJBWHplZCBmb3IgbW9yZSBpbmZvLicpO1xuICB9XG5cbiAgd2luZG93WydfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfXyddICs9IDE7XG59XG5cbi8vXG5cbmV4cG9ydCBkZWZhdWx0IHN0eWxlZDtcbmV4cG9ydCB7IGNzcywga2V5ZnJhbWVzLCBjcmVhdGVHbG9iYWxTdHlsZSwgaXNTdHlsZWRDb21wb25lbnQsIFRoZW1lQ29uc3VtZXIsIFRoZW1lQ29udGV4dCwgVGhlbWVQcm92aWRlciwgd2l0aFRoZW1lLCBTZXJ2ZXJTdHlsZVNoZWV0LCBTdHlsZVNoZWV0TWFuYWdlciwgX19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0hBVU5URURfQllfU1BPT0tZX0dIT1NUUyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R5bGVkLWNvbXBvbmVudHMuYnJvd3Nlci5lc20uanMubWFwXG4iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvKSB7XG4gIHZhciBmcm9tID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnJztcblxuICB2YXIgdG9QYXJ0cyA9IHRvICYmIHRvLnNwbGl0KCcvJykgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSBmcm9tICYmIGZyb20uc3BsaXQoJy8nKSB8fCBbXTtcblxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xuICB2YXIgbXVzdEVuZEFicyA9IGlzVG9BYnMgfHwgaXNGcm9tQWJzO1xuXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xuICAgIC8vIHRvIGlzIGFic29sdXRlXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xuICAgIC8vIHRvIGlzIHJlbGF0aXZlLCBkcm9wIHRoZSBmaWxlbmFtZVxuICAgIGZyb21QYXJ0cy5wb3AoKTtcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xuICB9XG5cbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xuXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoID0gdm9pZCAwO1xuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xuICAgIHZhciBsYXN0ID0gZnJvbVBhcnRzW2Zyb21QYXJ0cy5sZW5ndGggLSAxXTtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XG4gIH0gZWxzZSB7XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XG5cbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKCFtdXN0RW5kQWJzKSBmb3IgKDsgdXAtLTsgdXApIHtcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcbiAgfWlmIChtdXN0RW5kQWJzICYmIGZyb21QYXJ0c1swXSAhPT0gJycgJiYgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSkpIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTsiLCJ2YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIHZhbHVlRXF1YWwoYSwgYikge1xuICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7XG5cbiAgaWYgKGEgPT0gbnVsbCB8fCBiID09IG51bGwpIHJldHVybiBmYWxzZTtcblxuICBpZiAoQXJyYXkuaXNBcnJheShhKSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGIpICYmIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJiBhLmV2ZXJ5KGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoaXRlbSwgYltpbmRleF0pO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIGFUeXBlID0gdHlwZW9mIGEgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGEpO1xuICB2YXIgYlR5cGUgPSB0eXBlb2YgYiA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYik7XG5cbiAgaWYgKGFUeXBlICE9PSBiVHlwZSkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChhVHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgYVZhbHVlID0gYS52YWx1ZU9mKCk7XG4gICAgdmFyIGJWYWx1ZSA9IGIudmFsdWVPZigpO1xuXG4gICAgaWYgKGFWYWx1ZSAhPT0gYSB8fCBiVmFsdWUgIT09IGIpIHJldHVybiB2YWx1ZUVxdWFsKGFWYWx1ZSwgYlZhbHVlKTtcblxuICAgIHZhciBhS2V5cyA9IE9iamVjdC5rZXlzKGEpO1xuICAgIHZhciBiS2V5cyA9IE9iamVjdC5rZXlzKGIpO1xuXG4gICAgaWYgKGFLZXlzLmxlbmd0aCAhPT0gYktleXMubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG5cbiAgICByZXR1cm4gYUtleXMuZXZlcnkoZnVuY3Rpb24gKGtleSkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoYVtrZXldLCBiW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWx1ZUVxdWFsOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gXCIvXCIgPyBwYXRoIDogXCIvXCIgKyBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKFwiXlwiICsgcHJlZml4ICsgXCIoXFxcXC98XFxcXD98I3wkKVwiLCBcImlcIikudGVzdChwYXRoKTtcbn1cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09IFwiL1wiID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCBcIi9cIjtcbiAgdmFyIHNlYXJjaCA9IFwiXCI7XG4gIHZhciBoYXNoID0gXCJcIjtcbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoXCIjXCIpO1xuXG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKFwiP1wiKTtcblxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gXCI/XCIgPyBcIlwiIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09IFwiI1wiID8gXCJcIiA6IGhhc2hcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCBcIi9cIjtcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09IFwiP1wiKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09IFwiP1wiID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09IFwiI1wiKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSBcIiNcIiA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG4gIHJldHVybiBwYXRoO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uO1xuXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gXCJzdHJpbmdcIikge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSBcIlwiO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09IFwiP1wiKSBsb2NhdGlvbi5zZWFyY2ggPSBcIj9cIiArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gXCJcIjtcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSBcIiNcIikgbG9jYXRpb24uaGFzaCA9IFwiI1wiICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9IFwiXCI7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArIFwiVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy5cIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gXCIvXCIpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IFwiL1wiO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByb21wdCA9PSBudWxsLCBcIkEgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lXCIpIDogdm9pZCAwO1xuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gXCJmdW5jdGlvblwiID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgXCJBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlXCIpIDogdm9pZCAwO1xuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5mdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIGlmICgodWEuaW5kZXhPZihcIkFuZHJvaWQgMi5cIikgIT09IC0xIHx8IHVhLmluZGV4T2YoXCJBbmRyb2lkIDQuMFwiKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoXCJNb2JpbGUgU2FmYXJpXCIpICE9PSAtMSAmJiB1YS5pbmRleE9mKFwiQ2hyb21lXCIpID09PSAtMSAmJiB1YS5pbmRleE9mKFwiV2luZG93cyBQaG9uZVwiKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmIFwicHVzaFN0YXRlXCIgaW4gd2luZG93Lmhpc3Rvcnk7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJUcmlkZW50XCIpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcIkZpcmVmb3hcIikgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5cbmZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJDcmlPU1wiKSA9PT0gLTE7XG59XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gXCJwb3BzdGF0ZVwiO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9IFwiaGFzaGNoYW5nZVwiO1xuXG5mdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIkJyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Vc2VIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRmb3JjZVJlZnJlc2ggPSBfcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6IFwiXCI7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksIFwiWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiBcIiArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gXCJQT1BcIjtcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09IFwib2JqZWN0XCIgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCBcIllvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0IFwiICsgXCJhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9IFwiUFVTSFwiO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsIFwiQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeVwiKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gXCJvYmplY3RcIiAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksIFwiWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgXCIgKyBcImFyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gXCJSRVBMQUNFXCI7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsIFwiQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeVwiKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxudmFyIEhhc2hDaGFuZ2VFdmVudCQxID0gXCJoYXNoY2hhbmdlXCI7XG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiIVwiID8gcGF0aCA6IFwiIS9cIiArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiIVwiID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xuICAgIH1cbiAgfSxcbiAgbm9zbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9LFxuICBzbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxuZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZihcIiNcIik7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gXCJcIiA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufVxuXG5mdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHZhciBoYXNoSW5kZXggPSB3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKFwiI1wiKTtcbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uod2luZG93LmxvY2F0aW9uLmhyZWYuc2xpY2UoMCwgaGFzaEluZGV4ID49IDAgPyBoYXNoSW5kZXggOiAwKSArIFwiI1wiICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gX3Byb3BzLmhhc2hUeXBlLFxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHZvaWQgMCA/IFwic2xhc2hcIiA6IF9wcm9wcyRoYXNoVHlwZTtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiBcIlwiO1xuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksIFwiWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiBcIiArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSBcIlBPUFwiO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH0gLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG5cblxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBcIiNcIiArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCBcIkhhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gXCJQVVNIXCI7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG4gICAgICAgIG5leHRQYXRocy5wdXNoKHBhdGgpO1xuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIFwiSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrXCIpIDogdm9pZCAwO1xuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgXCJIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9IFwiUkVQTEFDRVwiO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBSRVBMQUNFLCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsIFwiSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyXCIpIDogdm9pZCAwO1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogXCJQT1BcIixcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IF9wcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbXCIvXCJdIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IF9wcm9wcy5pbml0aWFsSW5kZXgsXG4gICAgICBpbml0aWFsSW5kZXggPSBfcHJvcHMkaW5pdGlhbEluZGV4ID09PSB2b2lkIDAgPyAwIDogX3Byb3BzJGluaXRpYWxJbmRleCxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSBcIm9iamVjdFwiICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgXCJZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCBcIiArIFwiYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSBcIlBVU0hcIjtcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuXG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gXCJvYmplY3RcIiAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksIFwiWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgXCIgKyBcImFyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gXCJSRVBMQUNFXCI7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuICAgIHZhciBhY3Rpb24gPSBcIlBPUFwiO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIHBhcnNlUGF0aCwgY3JlYXRlUGF0aCB9O1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbnZhciBnbG9iYWwgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lk1hdGggPT0gTWF0aFxuICA/IHdpbmRvdyA6IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYuTWF0aCA9PSBNYXRoID8gc2VsZlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgOiBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuaWYgKHR5cGVvZiBfX2cgPT0gJ251bWJlcicpIF9fZyA9IGdsb2JhbDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwidmFyIHN0b3JlID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ3drcycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlN5bWJvbDtcbnZhciBVU0VfU1lNQk9MID0gdHlwZW9mIFN5bWJvbCA9PSAnZnVuY3Rpb24nO1xuXG52YXIgJGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiBzdG9yZVtuYW1lXSB8fCAoc3RvcmVbbmFtZV0gPVxuICAgIFVTRV9TWU1CT0wgJiYgU3ltYm9sW25hbWVdIHx8IChVU0VfU1lNQk9MID8gU3ltYm9sIDogdWlkKSgnU3ltYm9sLicgKyBuYW1lKSk7XG59O1xuXG4kZXhwb3J0cy5zdG9yZSA9IHN0b3JlO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufSIsInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgaWYgKGNvbmRpdGlvbikge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpc1Byb2R1Y3Rpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgJycpKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBpbnZhcmlhbnQ7XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhbiBvYmplY3QhJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJpbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tICdjcmVhdGUtcmVhY3QtY29udGV4dCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tICdwYXRoLXRvLXJlZ2V4cCc7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcblxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xudmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5jb250ZXh0LlByb3ZpZGVyLmRpc3BsYXlOYW1lID0gXCJSb3V0ZXIuUHJvdmlkZXJcIjtcbmNvbnRleHQuQ29uc3VtZXIuZGlzcGxheU5hbWUgPSBcIlJvdXRlci5Db25zdW1lclwiO1xuXG52YXIgd2FybkFib3V0R2V0dGluZ1Byb3BlcnR5ID0gZnVuY3Rpb24gd2FybkFib3V0R2V0dGluZ1Byb3BlcnR5KCkge307XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgd2FybkFib3V0R2V0dGluZ1Byb3BlcnR5ID0gZnVuY3Rpb24gd2FybkFib3V0R2V0dGluZ1Byb3BlcnR5KG9iamVjdCwga2V5LCBtZXNzYWdlKSB7XG4gICAgdmFyIGRpZElzc3VlV2FybmluZyA9IGZhbHNlO1xuICAgIHZhciB2YWx1ZSA9IG9iamVjdFtrZXldO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIGtleSwge1xuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIGlmICghZGlkSXNzdWVXYXJuaW5nKSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgbWVzc2FnZSkgOiB2b2lkIDA7XG4gICAgICAgICAgZGlkSXNzdWVXYXJuaW5nID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH0sXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgfTtcbn1cblxudmFyIHdhcm5BYm91dEdldHRpbmdQcm9wZXJ0eSQxID0gd2FybkFib3V0R2V0dGluZ1Byb3BlcnR5O1xuXG5mdW5jdGlvbiBnZXRDb250ZXh0KHByb3BzLCBzdGF0ZSkge1xuICByZXR1cm4ge1xuICAgIGhpc3Rvcnk6IHByb3BzLmhpc3RvcnksXG4gICAgbG9jYXRpb246IHN0YXRlLmxvY2F0aW9uLFxuICAgIG1hdGNoOiBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaChzdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSksXG4gICAgc3RhdGljQ29udGV4dDogcHJvcHMuc3RhdGljQ29udGV4dFxuICB9O1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxuXG52YXIgUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgUm91dGVyLmNvbXB1dGVSb290TWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlUm9vdE1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgdXJsOiBcIi9cIixcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBpc0V4YWN0OiBwYXRobmFtZSA9PT0gXCIvXCJcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIFJvdXRlcihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgbG9jYXRpb246IHByb3BzLmhpc3RvcnkubG9jYXRpb25cbiAgICB9OyAvLyBUaGlzIGlzIGEgYml0IG9mIGEgaGFjay4gV2UgaGF2ZSB0byBzdGFydCBsaXN0ZW5pbmcgZm9yIGxvY2F0aW9uXG4gICAgLy8gY2hhbmdlcyBoZXJlIGluIHRoZSBjb25zdHJ1Y3RvciBpbiBjYXNlIHRoZXJlIGFyZSBhbnkgPFJlZGlyZWN0PnNcbiAgICAvLyBvbiB0aGUgaW5pdGlhbCByZW5kZXIuIElmIHRoZXJlIGFyZSwgdGhleSB3aWxsIHJlcGxhY2UvcHVzaCB3aGVuXG4gICAgLy8gdGhleSBtb3VudCBhbmQgc2luY2UgY0RNIGZpcmVzIGluIGNoaWxkcmVuIGJlZm9yZSBwYXJlbnRzLCB3ZSBtYXlcbiAgICAvLyBnZXQgYSBuZXcgbG9jYXRpb24gYmVmb3JlIHRoZSA8Um91dGVyPiBpcyBtb3VudGVkLlxuXG4gICAgX3RoaXMuX2lzTW91bnRlZCA9IGZhbHNlO1xuICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBudWxsO1xuXG4gICAgaWYgKCFwcm9wcy5zdGF0aWNDb250ZXh0KSB7XG4gICAgICBfdGhpcy51bmxpc3RlbiA9IHByb3BzLmhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgICBpZiAoX3RoaXMuX2lzTW91bnRlZCkge1xuICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBsb2NhdGlvbjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5faXNNb3VudGVkID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLl9wZW5kaW5nTG9jYXRpb24pIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBsb2NhdGlvbjogdGhpcy5fcGVuZGluZ0xvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHRoaXMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBjb250ZXh0JCQxID0gZ2V0Q29udGV4dCh0aGlzLnByb3BzLCB0aGlzLnN0YXRlKTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsLFxuICAgICAgdmFsdWU6IGNvbnRleHQkJDFcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpOyAvLyBUT0RPOiBSZW1vdmUgdGhpcyBpbiB2NVxuXG5cbmlmICghUmVhY3QuY3JlYXRlQ29udGV4dCkge1xuICBSb3V0ZXIuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gICAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY29udGV4dCQkMSA9IGdldENvbnRleHQodGhpcy5wcm9wcywgdGhpcy5zdGF0ZSk7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICB2YXIgY29udGV4dFdpdGhvdXRXYXJuaW5ncyA9IF9leHRlbmRzKHt9LCBjb250ZXh0JCQxKTtcblxuICAgICAgT2JqZWN0LmtleXMoY29udGV4dCQkMSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHdhcm5BYm91dEdldHRpbmdQcm9wZXJ0eSQxKGNvbnRleHQkJDEsIGtleSwgXCJZb3Ugc2hvdWxkIG5vdCBiZSB1c2luZyB0aGlzLmNvbnRleHQucm91dGVyLlwiICsga2V5ICsgXCIgZGlyZWN0bHkuIEl0IGlzIHByaXZhdGUgQVBJIFwiICsgXCJmb3IgaW50ZXJuYWwgdXNlIG9ubHkgYW5kIGlzIHN1YmplY3QgdG8gY2hhbmdlIGF0IGFueSB0aW1lLiBJbnN0ZWFkLCB1c2UgXCIgKyBcImEgPFJvdXRlPiBvciB3aXRoUm91dGVyKCkgdG8gYWNjZXNzIHRoZSBjdXJyZW50IGxvY2F0aW9uLCBtYXRjaCwgZXRjLlwiKTtcbiAgICAgIH0pO1xuICAgICAgY29udGV4dCQkMS5fd2l0aG91dFdhcm5pbmdzID0gY29udGV4dFdpdGhvdXRXYXJuaW5ncztcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyOiBjb250ZXh0JCQxXG4gICAgfTtcbiAgfTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJldlByb3BzLmhpc3RvcnkgPT09IHRoaXMucHJvcHMuaGlzdG9yeSwgXCJZb3UgY2Fubm90IGNoYW5nZSA8Um91dGVyIGhpc3Rvcnk+XCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGxvY2F0aW9uIGluIG1lbW9yeS5cbiAqL1xuXG52YXIgTWVtb3J5Um91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKE1lbW9yeVJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTWVtb3J5Um91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVNZW1vcnlIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTWVtb3J5Um91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gTWVtb3J5Um91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE1lbW9yeVJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgaW5pdGlhbEVudHJpZXM6IFByb3BUeXBlcy5hcnJheSxcbiAgICBpbml0aWFsSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxuICB9O1xuXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxNZW1vcnlSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBNZW1vcnlSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxudmFyIExpZmVjeWNsZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShMaWZlY3ljbGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIExpZmVjeWNsZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTGlmZWN5Y2xlLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vbk1vdW50KSB0aGlzLnByb3BzLm9uTW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVXBkYXRlKSB0aGlzLnByb3BzLm9uVXBkYXRlLmNhbGwodGhpcywgdGhpcywgcHJldlByb3BzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVubW91bnQpIHRoaXMucHJvcHMub25Vbm1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gTGlmZWN5Y2xlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwcm9tcHRpbmcgdGhlIHVzZXIgYmVmb3JlIG5hdmlnYXRpbmcgYXdheSBmcm9tIGEgc2NyZWVuLlxuICovXG5cbmZ1bmN0aW9uIFByb21wdChwcm9wcykge1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQkMSkge1xuICAgICFjb250ZXh0JCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UHJvbXB0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGlmICghcHJvcHMud2hlbiB8fCBjb250ZXh0JCQxLnN0YXRpY0NvbnRleHQpIHJldHVybiBudWxsO1xuICAgIHZhciBtZXRob2QgPSBjb250ZXh0JCQxLmhpc3RvcnkuYmxvY2s7XG4gICAgdmFyIG1lc3NhZ2UgPSBwcm9wcy5tZXNzYWdlO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIGlmIChwcmV2UHJvcHMubWVzc2FnZSAhPT0gbWVzc2FnZSkge1xuICAgICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9uVW5tb3VudDogZnVuY3Rpb24gb25Vbm1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuXG5Qcm9tcHQuZGVmYXVsdFByb3BzID0ge1xuICB3aGVuOiB0cnVlXG59O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciBtZXNzYWdlVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSk7XG4gIFByb21wdC5wcm9wVHlwZXMgPSB7XG4gICAgd2hlbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgbWVzc2FnZTogbWVzc2FnZVR5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgpIHtcbiAgaWYgKGNhY2hlW3BhdGhdKSByZXR1cm4gY2FjaGVbcGF0aF07XG4gIHZhciBnZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXRoKTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXRoXSA9IGdlbmVyYXRvcjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdG9yO1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXRoIGFuZCBwYXJhbWV0ZXJzLlxuICovXG5cblxuZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKHBhdGgsIHBhcmFtcykge1xuICBpZiAocGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGF0aCA9IFwiL1wiO1xuICB9XG5cbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyYW1zID0ge307XG4gIH1cblxuICByZXR1cm4gcGF0aCA9PT0gXCIvXCIgPyBwYXRoIDogY29tcGlsZVBhdGgocGF0aCkocGFyYW1zLCB7XG4gICAgcHJldHR5OiB0cnVlXG4gIH0pO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBuYXZpZ2F0aW5nIHByb2dyYW1tYXRpY2FsbHkgd2l0aCBhIGNvbXBvbmVudC5cbiAqL1xuXG5mdW5jdGlvbiBSZWRpcmVjdChwcm9wcykge1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQkMSkge1xuICAgICFjb250ZXh0JCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UmVkaXJlY3Q+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIG1ldGhvZCA9IHByb3BzLnB1c2ggPyBjb250ZXh0JCQxLmhpc3RvcnkucHVzaCA6IGNvbnRleHQkJDEuaGlzdG9yeS5yZXBsYWNlO1xuICAgIHZhciB0byA9IGNyZWF0ZUxvY2F0aW9uKHByb3BzLmNvbXB1dGVkTWF0Y2ggPyB0eXBlb2YgcHJvcHMudG8gPT09IFwic3RyaW5nXCIgPyBnZW5lcmF0ZVBhdGgocHJvcHMudG8sIHByb3BzLmNvbXB1dGVkTWF0Y2gucGFyYW1zKSA6IF9leHRlbmRzKHt9LCBwcm9wcy50bywge1xuICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aChwcm9wcy50by5wYXRobmFtZSwgcHJvcHMuY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgfSkgOiBwcm9wcy50byk7IC8vIFdoZW4gcmVuZGVyaW5nIGluIGEgc3RhdGljIGNvbnRleHQsXG4gICAgLy8gc2V0IHRoZSBuZXcgbG9jYXRpb24gaW1tZWRpYXRlbHkuXG5cbiAgICBpZiAoY29udGV4dCQkMS5zdGF0aWNDb250ZXh0KSB7XG4gICAgICBtZXRob2QodG8pO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KCkge1xuICAgICAgICBtZXRob2QodG8pO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgaWYgKCFsb2NhdGlvbnNBcmVFcXVhbChwcmV2UHJvcHMudG8sIHRvKSkge1xuICAgICAgICAgIG1ldGhvZCh0byk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0bzogdG9cbiAgICB9KTtcbiAgfSk7XG59XG5cblJlZGlyZWN0LmRlZmF1bHRQcm9wcyA9IHtcbiAgcHVzaDogZmFsc2Vcbn07XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUmVkaXJlY3QucHJvcFR5cGVzID0ge1xuICAgIHB1c2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSQxID0ge307XG52YXIgY2FjaGVMaW1pdCQxID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCQxID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgkMShwYXRoLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZUtleSA9IFwiXCIgKyBvcHRpb25zLmVuZCArIG9wdGlvbnMuc3RyaWN0ICsgb3B0aW9ucy5zZW5zaXRpdmU7XG4gIHZhciBwYXRoQ2FjaGUgPSBjYWNoZSQxW2NhY2hlS2V5XSB8fCAoY2FjaGUkMVtjYWNoZUtleV0gPSB7fSk7XG4gIGlmIChwYXRoQ2FjaGVbcGF0aF0pIHJldHVybiBwYXRoQ2FjaGVbcGF0aF07XG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZWdleHAgPSBwYXRoVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XG4gIHZhciByZXN1bHQgPSB7XG4gICAgcmVnZXhwOiByZWdleHAsXG4gICAga2V5czoga2V5c1xuICB9O1xuXG4gIGlmIChjYWNoZUNvdW50JDEgPCBjYWNoZUxpbWl0JDEpIHtcbiAgICBwYXRoQ2FjaGVbcGF0aF0gPSByZXN1bHQ7XG4gICAgY2FjaGVDb3VudCQxKys7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGguXG4gKi9cblxuXG5mdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIikgb3B0aW9ucyA9IHtcbiAgICBwYXRoOiBvcHRpb25zXG4gIH07XG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG4gIHZhciBwYXRocyA9IFtdLmNvbmNhdChwYXRoKTtcbiAgcmV0dXJuIHBhdGhzLnJlZHVjZShmdW5jdGlvbiAobWF0Y2hlZCwgcGF0aCkge1xuICAgIGlmIChtYXRjaGVkKSByZXR1cm4gbWF0Y2hlZDtcblxuICAgIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aCQxKHBhdGgsIHtcbiAgICAgIGVuZDogZXhhY3QsXG4gICAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlXG4gICAgfSksXG4gICAgICAgIHJlZ2V4cCA9IF9jb21waWxlUGF0aC5yZWdleHAsXG4gICAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICAgIHZhciBtYXRjaCA9IHJlZ2V4cC5leGVjKHBhdGhuYW1lKTtcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuICAgIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcbiAgICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBwYXRoLFxuICAgICAgLy8gdGhlIHBhdGggdXNlZCB0byBtYXRjaFxuICAgICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCxcbiAgICAgIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgICAgaXNFeGFjdDogaXNFeGFjdCxcbiAgICAgIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgfSwge30pXG4gICAgfTtcbiAgfSwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufVxuXG5mdW5jdGlvbiBnZXRDb250ZXh0JDEocHJvcHMsIGNvbnRleHQkJDEpIHtcbiAgdmFyIGxvY2F0aW9uID0gcHJvcHMubG9jYXRpb24gfHwgY29udGV4dCQkMS5sb2NhdGlvbjtcbiAgdmFyIG1hdGNoID0gcHJvcHMuY29tcHV0ZWRNYXRjaCA/IHByb3BzLmNvbXB1dGVkTWF0Y2ggLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXG4gIDogcHJvcHMucGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgcHJvcHMpIDogY29udGV4dCQkMS5tYXRjaDtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBjb250ZXh0JCQxLCB7XG4gICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgIG1hdGNoOiBtYXRjaFxuICB9KTtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG5cbnZhciBSb3V0ZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQkMSkge1xuICAgICAgIWNvbnRleHQkJDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBwcm9wcyA9IGdldENvbnRleHQkMShfdGhpcy5wcm9wcywgY29udGV4dCQkMSk7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7IC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XG4gICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgY2hpbGRyZW4gPSBjaGlsZHJlbihwcm9wcyk7XG5cbiAgICAgICAgaWYgKGNoaWxkcmVuID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgICAgICB2YXIgcGF0aCA9IF90aGlzLnByb3BzLnBhdGg7XG4gICAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCBcIllvdSByZXR1cm5lZCBgdW5kZWZpbmVkYCBmcm9tIHRoZSBgY2hpbGRyZW5gIGZ1bmN0aW9uIG9mIFwiICsgKFwiPFJvdXRlXCIgKyAocGF0aCA/IFwiIHBhdGg9XFxcIlwiICsgcGF0aCArIFwiXFxcIlwiIDogXCJcIikgKyBcIj4sIGJ1dCB5b3UgXCIpICsgXCJzaG91bGQgaGF2ZSByZXR1cm5lZCBhIFJlYWN0IGVsZW1lbnQgb3IgYG51bGxgXCIpIDogdm9pZCAwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBwcm9wc1xuICAgICAgfSwgY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikgPyBjaGlsZHJlbiA6IHByb3BzLm1hdGNoID8gY29tcG9uZW50ID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IHJlbmRlciA/IHJlbmRlcihwcm9wcykgOiBudWxsIDogbnVsbCk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpOyAvLyBUT0RPOiBSZW1vdmUgdGhpcyBpbiB2NVxuXG5cbmlmICghUmVhY3QuY3JlYXRlQ29udGV4dCkge1xuICBSb3V0ZS5jb250ZXh0VHlwZXMgPSB7XG4gICAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgfTtcbiAgUm91dGUuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gICAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgICF0aGlzLmNvbnRleHQucm91dGVyID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIHBhcmVudENvbnRleHQgPSB0aGlzLmNvbnRleHQucm91dGVyO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgcGFyZW50Q29udGV4dCA9IHBhcmVudENvbnRleHQuX3dpdGhvdXRXYXJuaW5ncztcbiAgICB9XG5cbiAgICB2YXIgY29udGV4dCQkMSA9IGdldENvbnRleHQkMSh0aGlzLnByb3BzLCBwYXJlbnRDb250ZXh0KTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIHZhciBjb250ZXh0V2l0aG91dFdhcm5pbmdzID0gX2V4dGVuZHMoe30sIGNvbnRleHQkJDEpO1xuXG4gICAgICBPYmplY3Qua2V5cyhjb250ZXh0JCQxKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgd2FybkFib3V0R2V0dGluZ1Byb3BlcnR5JDEoY29udGV4dCQkMSwga2V5LCBcIllvdSBzaG91bGQgbm90IGJlIHVzaW5nIHRoaXMuY29udGV4dC5yb3V0ZXIuXCIgKyBrZXkgKyBcIiBkaXJlY3RseS4gSXQgaXMgcHJpdmF0ZSBBUEkgXCIgKyBcImZvciBpbnRlcm5hbCB1c2Ugb25seSBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2UgYXQgYW55IHRpbWUuIEluc3RlYWQsIHVzZSBcIiArIFwiYSA8Um91dGU+IG9yIHdpdGhSb3V0ZXIoKSB0byBhY2Nlc3MgdGhlIGN1cnJlbnQgbG9jYXRpb24sIG1hdGNoLCBldGMuXCIpO1xuICAgICAgfSk7XG4gICAgICBjb250ZXh0JCQxLl93aXRob3V0V2FybmluZ3MgPSBjb250ZXh0V2l0aG91dFdhcm5pbmdzO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IGNvbnRleHQkJDFcbiAgICB9O1xuICB9O1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocHJvcHMsIHByb3BOYW1lKSB7XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSW52YWxpZCBwcm9wICdjb21wb25lbnQnIHN1cHBsaWVkIHRvICdSb3V0ZSc6IHRoZSBwcm9wIGlzIG5vdCBhIHZhbGlkIFJlYWN0IGNvbXBvbmVudFwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBwYXRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKV0pLFxuICAgIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sXG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5jb21wb25lbnQpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNvbXBvbmVudD4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSBcIi9cIiA/IHBhdGggOiBcIi9cIiArIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKSArIGxvY2F0aW9uLnBhdGhuYW1lXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHZhciBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZS5zdWJzdHIoYmFzZS5sZW5ndGgpXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSkgOiBpbnZhcmlhbnQoZmFsc2UpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBub29wKCkge31cbi8qKlxuICogVGhlIHB1YmxpYyB0b3AtbGV2ZWwgQVBJIGZvciBhIFwic3RhdGljXCIgPFJvdXRlcj4sIHNvLWNhbGxlZCBiZWNhdXNlIGl0XG4gKiBjYW4ndCBhY3R1YWxseSBjaGFuZ2UgdGhlIGN1cnJlbnQgbG9jYXRpb24uIEluc3RlYWQsIGl0IGp1c3QgcmVjb3Jkc1xuICogbG9jYXRpb24gY2hhbmdlcyBpbiBhIGNvbnRleHQgb2JqZWN0LiBVc2VmdWwgbWFpbmx5IGluIHRlc3RpbmcgYW5kXG4gKiBzZXJ2ZXItcmVuZGVyaW5nIHNjZW5hcmlvcy5cbiAqL1xuXG5cbnZhciBTdGF0aWNSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3RhdGljUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdGF0aWNSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG5cbiAgICBfdGhpcy5jcmVhdGVIcmVmID0gZnVuY3Rpb24gKHBhdGgpIHtcbiAgICAgIHJldHVybiBhZGRMZWFkaW5nU2xhc2goX3RoaXMucHJvcHMuYmFzZW5hbWUgKyBjcmVhdGVVUkwocGF0aCkpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVQdXNoID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzLmJhc2VuYW1lLFxuICAgICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcy5jb250ZXh0O1xuICAgICAgY29udGV4dC5hY3Rpb24gPSBcIlBVU0hcIjtcbiAgICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVSZXBsYWNlID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIuYmFzZW5hbWUsXG4gICAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzMi5jb250ZXh0O1xuICAgICAgY29udGV4dC5hY3Rpb24gPSBcIlJFUExBQ0VcIjtcbiAgICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVMaXN0ZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlQmxvY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0YXRpY1JvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wczMuYmFzZW5hbWUsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wczMuY29udGV4dCxcbiAgICAgICAgbG9jYXRpb24gPSBfdGhpcyRwcm9wczMubG9jYXRpb24sXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczMsIFtcImJhc2VuYW1lXCIsIFwiY29udGV4dFwiLCBcImxvY2F0aW9uXCJdKTtcblxuICAgIHZhciBoaXN0b3J5ID0ge1xuICAgICAgY3JlYXRlSHJlZjogdGhpcy5jcmVhdGVIcmVmLFxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXG4gICAgfTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBoaXN0b3J5OiBoaXN0b3J5LFxuICAgICAgc3RhdGljQ29udGV4dDogdGhpcy5wcm9wcy5jb250ZXh0IHx8IHt9XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBTdGF0aWNSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblN0YXRpY1JvdXRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGJhc2VuYW1lOiBcIlwiLFxuICBsb2NhdGlvbjogXCIvXCJcbn07XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3RhdGljUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgfTtcblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8U3RhdGljUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgU3RhdGljUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXG4gKi9cblxudmFyIFN3aXRjaCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTd2l0Y2gsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN3aXRjaCgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3dpdGNoLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQkMSkge1xuICAgICAgIWNvbnRleHQkJDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0JCQxLmxvY2F0aW9uO1xuICAgICAgdmFyIGVsZW1lbnQsIG1hdGNoOyAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcbiAgICAgIC8vIGhlcmUgYmVjYXVzZSB0b0FycmF5IGFkZHMga2V5cyB0byBhbGwgY2hpbGQgZWxlbWVudHMgYW5kIHdlIGRvIG5vdCB3YW50XG4gICAgICAvLyB0byB0cmlnZ2VyIGFuIHVubW91bnQvcmVtb3VudCBmb3IgdHdvIDxSb3V0ZT5zIHRoYXQgcmVuZGVyIHRoZSBzYW1lXG4gICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXG5cbiAgICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goX3RoaXMucHJvcHMuY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICBlbGVtZW50ID0gY2hpbGQ7XG4gICAgICAgICAgdmFyIHBhdGggPSBjaGlsZC5wcm9wcy5wYXRoIHx8IGNoaWxkLnByb3BzLmZyb207XG4gICAgICAgICAgbWF0Y2ggPSBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfZXh0ZW5kcyh7fSwgY2hpbGQucHJvcHMsIHtcbiAgICAgICAgICAgIHBhdGg6IHBhdGhcbiAgICAgICAgICB9KSkgOiBjb250ZXh0JCQxLm1hdGNoO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBtYXRjaCA/IFJlYWN0LmNsb25lRWxlbWVudChlbGVtZW50LCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgY29tcHV0ZWRNYXRjaDogbWF0Y2hcbiAgICAgIH0pIDogbnVsbDtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gU3dpdGNoO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIEEgcHVibGljIGhpZ2hlci1vcmRlciBjb21wb25lbnQgdG8gYWNjZXNzIHRoZSBpbXBlcmF0aXZlIEFQSVxuICovXG5cbmZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9uZW50KSB7XG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wid3JhcHBlZENvbXBvbmVudFJlZlwiXSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwge1xuICAgICAgY2hpbGRyZW46IGZ1bmN0aW9uIGNoaWxkcmVuKHJvdXRlQ29tcG9uZW50UHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcmVtYWluaW5nUHJvcHMsIHJvdXRlQ29tcG9uZW50UHJvcHMsIHtcbiAgICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcbiAgICAgICAgfSkpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIEMuZGlzcGxheU5hbWUgPSBcIndpdGhSb3V0ZXIoXCIgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArIFwiKVwiO1xuICBDLldyYXBwZWRDb21wb25lbnQgPSBDb21wb25lbnQ7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIEMucHJvcFR5cGVzID0ge1xuICAgICAgd3JhcHBlZENvbXBvbmVudFJlZjogUHJvcFR5cGVzLmZ1bmNcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGhvaXN0U3RhdGljcyhDLCBDb21wb25lbnQpO1xufVxuXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgd2l0aFJvdXRlciwgY29udGV4dCBhcyBfX1JvdXRlckNvbnRleHQgfTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIga2V5LCBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7IHZlcnNpb246ICcyLjYuMScgfTtcbmlmICh0eXBlb2YgX19lID09ICdudW1iZXInKSBfX2UgPSBjb3JlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iLCJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICByZXR1cm4gZFAuZihvYmplY3QsIGtleSwgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgcmV0dXJuIG9iamVjdDtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcbiIsIi8vIFRoYW5rJ3MgSUU4IGZvciBoaXMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJpbXBvcnQgeyBjc3MgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmV4cG9ydCBjb25zdCBjb2xvclBhbGV0dGVzID0ge1xuICBibGFjazogJyMzMzMzMzMnLFxuICB3aGl0ZTogJyNGRkZGRkYnLFxuICByZWQ6ICcjRkU2MDUwJyxcbiAgbGlnaHRHcmV5OiAnI0U1RTVFNSdcbn07XG5cbmV4cG9ydCBjb25zdCB0aGVtZUNvbG9ycyA9IHtcbiAgZGVmYXVsdDogY29sb3JQYWxldHRlcy5ibGFjayxcbiAgc2VsZWN0ZWQ6IGNvbG9yUGFsZXR0ZXMucmVkLFxuICBsaW5rOiBjb2xvclBhbGV0dGVzLnJlZCxcbiAgYm9yZGVyR3JleTogJyNDNEM0QzQnXG59O1xuXG5leHBvcnQgY29uc3QgdGV4dFNpemVzID0ge1xuICBzbWFsbFRleHQ6ICcxNHB4JyxcbiAgbm9ybWFsVGV4dDogJzE4cHgnLFxuICB0aXRsZVRleHQ6ICcyNHB4J1xufTtcblxuZXhwb3J0IGNvbnN0IG1hcmdpbnMgPSB7XG4gIHNtYWxsOiAnOHB4JyxcbiAgbWVkaXVtOiAnMTZweCcsXG4gIGxhcmdlOiAnMzJweCdcbn07XG5cbmV4cG9ydCBjb25zdCBoZWFkZXJIZWlnaHQgPSAnNjRweCc7XG5leHBvcnQgY29uc3QgYmFzaWNNYXJnaW4gPSAxNjtcbmV4cG9ydCBjb25zdCBjYXJkU2l6ZSA9IHtcbiAgd2lkdGg6ICczMjhweCcsXG4gIGhlaWdodDogJzQ5MnB4JyxcbiAgcGhvbmVXaWR0aDogJzM1OXB4J1xufTtcblxuY29uc3Qgc2l6ZXMgPSB7XG4gIGdpYW50OiAxMTcwLFxuICBkZXNrdG9wOiA5OTIsXG4gIHRhYmxldDogNzY4LFxuICBwaG9uZTogNTc2XG59O1xuXG5leHBvcnQgY29uc3QgbWVkaWEgPSBPYmplY3Qua2V5cyhzaXplcykucmVkdWNlKChhY2MsIGxhYmVsKSA9PiB7XG4gIGFjY1tsYWJlbF0gPSAoLi4uYXJncykgPT4gY3NzYFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAke3NpemVzW2xhYmVsXSAvIDE2fWVtKSB7XG4gICAgICAke2NzcyguLi5hcmdzKX1cbiAgICB9XG4gIGA7XG4gIHJldHVybiBhY2M7XG59LCB7fSk7XG4iLCIvLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmdcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgdGhhdCwgbGVuZ3RoKSB7XG4gIGFGdW5jdGlvbihmbik7XG4gIGlmICh0aGF0ID09PSB1bmRlZmluZWQpIHJldHVybiBmbjtcbiAgc3dpdGNoIChsZW5ndGgpIHtcbiAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbiAoYSkge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSk7XG4gICAgfTtcbiAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYik7XG4gICAgfTtcbiAgICBjYXNlIDM6IHJldHVybiBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYiwgYyk7XG4gICAgfTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24gKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGEgZnVuY3Rpb24hJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07XG4iLCJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBkUCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gZFAoTywgUCwgQXR0cmlidXRlcyk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoJ2dldCcgaW4gQXR0cmlidXRlcyB8fCAnc2V0JyBpbiBBdHRyaWJ1dGVzKSB0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpO1xuICBpZiAoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKSBPW1BdID0gQXR0cmlidXRlcy52YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIiwidmFyIGhhc093blByb3BlcnR5ID0ge30uaGFzT3duUHJvcGVydHk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0ge307XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZhbHNlO1xuIiwidmFyIGlkID0gMDtcbnZhciBweCA9IE1hdGgucmFuZG9tKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuICdTeW1ib2woJy5jb25jYXQoa2V5ID09PSB1bmRlZmluZWQgPyAnJyA6IGtleSwgJylfJywgKCsraWQgKyBweCkudG9TdHJpbmcoMzYpKTtcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xuLy8gdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCcgaW4gb2xkIElFXG52YXIgaXMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFNSQyA9IHJlcXVpcmUoJy4vX3VpZCcpKCdzcmMnKTtcbnZhciBUT19TVFJJTkcgPSAndG9TdHJpbmcnO1xudmFyICR0b1N0cmluZyA9IEZ1bmN0aW9uW1RPX1NUUklOR107XG52YXIgVFBMID0gKCcnICsgJHRvU3RyaW5nKS5zcGxpdChUT19TVFJJTkcpO1xuXG5yZXF1aXJlKCcuL19jb3JlJykuaW5zcGVjdFNvdXJjZSA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gJHRvU3RyaW5nLmNhbGwoaXQpO1xufTtcblxuKG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE8sIGtleSwgdmFsLCBzYWZlKSB7XG4gIHZhciBpc0Z1bmN0aW9uID0gdHlwZW9mIHZhbCA9PSAnZnVuY3Rpb24nO1xuICBpZiAoaXNGdW5jdGlvbikgaGFzKHZhbCwgJ25hbWUnKSB8fCBoaWRlKHZhbCwgJ25hbWUnLCBrZXkpO1xuICBpZiAoT1trZXldID09PSB2YWwpIHJldHVybjtcbiAgaWYgKGlzRnVuY3Rpb24pIGhhcyh2YWwsIFNSQykgfHwgaGlkZSh2YWwsIFNSQywgT1trZXldID8gJycgKyBPW2tleV0gOiBUUEwuam9pbihTdHJpbmcoa2V5KSkpO1xuICBpZiAoTyA9PT0gZ2xvYmFsKSB7XG4gICAgT1trZXldID0gdmFsO1xuICB9IGVsc2UgaWYgKCFzYWZlKSB7XG4gICAgZGVsZXRlIE9ba2V5XTtcbiAgICBoaWRlKE8sIGtleSwgdmFsKTtcbiAgfSBlbHNlIGlmIChPW2tleV0pIHtcbiAgICBPW2tleV0gPSB2YWw7XG4gIH0gZWxzZSB7XG4gICAgaGlkZShPLCBrZXksIHZhbCk7XG4gIH1cbi8vIGFkZCBmYWtlIEZ1bmN0aW9uI3RvU3RyaW5nIGZvciBjb3JyZWN0IHdvcmsgd3JhcHBlZCBtZXRob2RzIC8gY29uc3RydWN0b3JzIHdpdGggbWV0aG9kcyBsaWtlIExvRGFzaCBpc05hdGl2ZVxufSkoRnVuY3Rpb24ucHJvdG90eXBlLCBUT19TVFJJTkcsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gdHlwZW9mIHRoaXMgPT0gJ2Z1bmN0aW9uJyAmJiB0aGlzW1NSQ10gfHwgJHRvU3RyaW5nLmNhbGwodGhpcyk7XG59KTtcbiIsInZhciBkZWYgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgdGFnLCBzdGF0KSB7XG4gIGlmIChpdCAmJiAhaGFzKGl0ID0gc3RhdCA/IGl0IDogaXQucHJvdG90eXBlLCBUQUcpKSBkZWYoaXQsIFRBRywgeyBjb25maWd1cmFibGU6IHRydWUsIHZhbHVlOiB0YWcgfSk7XG59O1xuIiwiLy8gdG8gaW5kZXhlZCBvYmplY3QsIHRvT2JqZWN0IHdpdGggZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBzdHJpbmdzXG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIElPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiIsInZhciBzaGFyZWQgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgna2V5cycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiBzaGFyZWRba2V5XSB8fCAoc2hhcmVkW2tleV0gPSB1aWQoa2V5KSk7XG59O1xuIiwiIWZ1bmN0aW9uKGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUobnVsbCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShlKG51bGwpKTp3aW5kb3cuc3R5bGlzPWUobnVsbCl9KGZ1bmN0aW9uIGUoYSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9L15cXDArL2csYz0vW1xcMFxcclxcZl0vZyxzPS86ICovZyx0PS96b298Z3JhLyxpPS8oWyw6IF0pKHRyYW5zZm9ybSkvZyxmPS8sK1xccyooPyFbXihdKlspXSkvZyxuPS8gK1xccyooPyFbXihdKlspXSkvZyxsPS8gKltcXDBdICovZyxvPS8sXFxyKz8vZyxoPS8oW1xcdFxcclxcbiBdKSpcXGY/Ji9nLHU9LzpnbG9iYWxcXCgoKD86W15cXChcXClcXFtcXF1dKnxcXFsuKlxcXXxcXChbXlxcKFxcKV0qXFwpKSopXFwpL2csZD0vXFxXKy9nLGI9L0Aoa1xcdyspXFxzKihcXFMqKVxccyovLHA9Lzo6KHBsYWNlKS9nLGs9LzoocmVhZC1vbmx5KS9nLGc9L1xccysoPz1be1xcXTs9Oj5dKS9nLEE9LyhbW309Oj5dKVxccysvZyxDPS8oXFx7W157XSs/KTsoPz1cXH0pL2csdz0vXFxzezIsfS9nLHY9LyhbXlxcKF0pKDorKSAqL2csbT0vW3N2aF1cXHcrLVt0YmxyXXsyfS8seD0vXFwoXFxzKiguKilcXHMqXFwpL2csJD0vKFtcXHNcXFNdKj8pOy9nLHk9Ly1zZWxmfGZsZXgtL2csTz0vW15dKj8oOltycF1bZWxdYVtcXHctXSspW15dKi8saj0vc3RyZXRjaHw6XFxzKlxcdytcXC0oPzpjb250ZXxhdmFpbCkvLHo9LyhbXi1dKShpbWFnZS1zZXRcXCgpLyxOPVwiLXdlYmtpdC1cIixTPVwiLW1vei1cIixGPVwiLW1zLVwiLFc9NTkscT0xMjUsQj0xMjMsRD00MCxFPTQxLEc9OTEsSD05MyxJPTEwLEo9MTMsSz05LEw9NjQsTT0zMixQPTM4LFE9NDUsUj05NSxUPTQyLFU9NDQsVj01OCxYPTM5LFk9MzQsWj00NyxfPTYyLGVlPTQzLGFlPTEyNixyZT0wLGNlPTEyLHNlPTExLHRlPTEwNyxpZT0xMDksZmU9MTE1LG5lPTExMixsZT0xMTEsb2U9MTA1LGhlPTk5LHVlPTEwMCxkZT0xMTIsYmU9MSxwZT0xLGtlPTAsZ2U9MSxBZT0xLENlPTEsd2U9MCx2ZT0wLG1lPTAseGU9W10sJGU9W10seWU9MCxPZT1udWxsLGplPS0yLHplPS0xLE5lPTAsU2U9MSxGZT0yLFdlPTMscWU9MCxCZT0xLERlPVwiXCIsRWU9XCJcIixHZT1cIlwiO2Z1bmN0aW9uIEhlKGUsYSxzLHQsaSl7Zm9yKHZhciBmLG4sbz0wLGg9MCx1PTAsZD0wLGc9MCxBPTAsQz0wLHc9MCxtPTAsJD0wLHk9MCxPPTAsaj0wLHo9MCxSPTAsd2U9MCwkZT0wLE9lPTAsamU9MCx6ZT1zLmxlbmd0aCxKZT16ZS0xLFJlPVwiXCIsVGU9XCJcIixVZT1cIlwiLFZlPVwiXCIsWGU9XCJcIixZZT1cIlwiO1I8emU7KXtpZihDPXMuY2hhckNvZGVBdChSKSxSPT09SmUpaWYoaCtkK3UrbyE9PTApe2lmKDAhPT1oKUM9aD09PVo/STpaO2Q9dT1vPTAsemUrKyxKZSsrfWlmKGgrZCt1K289PT0wKXtpZihSPT09SmUpe2lmKHdlPjApVGU9VGUucmVwbGFjZShjLFwiXCIpO2lmKFRlLnRyaW0oKS5sZW5ndGg+MCl7c3dpdGNoKEMpe2Nhc2UgTTpjYXNlIEs6Y2FzZSBXOmNhc2UgSjpjYXNlIEk6YnJlYWs7ZGVmYXVsdDpUZSs9cy5jaGFyQXQoUil9Qz1XfX1pZigxPT09JGUpc3dpdGNoKEMpe2Nhc2UgQjpjYXNlIHE6Y2FzZSBXOmNhc2UgWTpjYXNlIFg6Y2FzZSBEOmNhc2UgRTpjYXNlIFU6JGU9MDtjYXNlIEs6Y2FzZSBKOmNhc2UgSTpjYXNlIE06YnJlYWs7ZGVmYXVsdDpmb3IoJGU9MCxqZT1SLGc9QyxSLS0sQz1XO2plPHplOylzd2l0Y2gocy5jaGFyQ29kZUF0KGplKyspKXtjYXNlIEk6Y2FzZSBKOmNhc2UgVzorK1IsQz1nLGplPXplO2JyZWFrO2Nhc2UgVjppZih3ZT4wKSsrUixDPWc7Y2FzZSBCOmplPXplfX1zd2l0Y2goQyl7Y2FzZSBCOmZvcihnPShUZT1UZS50cmltKCkpLmNoYXJDb2RlQXQoMCkseT0xLGplPSsrUjtSPHplOyl7c3dpdGNoKEM9cy5jaGFyQ29kZUF0KFIpKXtjYXNlIEI6eSsrO2JyZWFrO2Nhc2UgcTp5LS07YnJlYWs7Y2FzZSBaOnN3aXRjaChBPXMuY2hhckNvZGVBdChSKzEpKXtjYXNlIFQ6Y2FzZSBaOlI9UWUoQSxSLEplLHMpfWJyZWFrO2Nhc2UgRzpDKys7Y2FzZSBEOkMrKztjYXNlIFk6Y2FzZSBYOmZvcig7UisrPEplJiZzLmNoYXJDb2RlQXQoUikhPT1DOyk7fWlmKDA9PT15KWJyZWFrO1IrK31pZihVZT1zLnN1YnN0cmluZyhqZSxSKSxnPT09cmUpZz0oVGU9VGUucmVwbGFjZShyLFwiXCIpLnRyaW0oKSkuY2hhckNvZGVBdCgwKTtzd2l0Y2goZyl7Y2FzZSBMOmlmKHdlPjApVGU9VGUucmVwbGFjZShjLFwiXCIpO3N3aXRjaChBPVRlLmNoYXJDb2RlQXQoMSkpe2Nhc2UgdWU6Y2FzZSBpZTpjYXNlIGZlOmNhc2UgUTpmPWE7YnJlYWs7ZGVmYXVsdDpmPXhlfWlmKGplPShVZT1IZShhLGYsVWUsQSxpKzEpKS5sZW5ndGgsbWU+MCYmMD09PWplKWplPVRlLmxlbmd0aDtpZih5ZT4wKWlmKGY9SWUoeGUsVGUsT2UpLG49UGUoV2UsVWUsZixhLHBlLGJlLGplLEEsaSx0KSxUZT1mLmpvaW4oXCJcIiksdm9pZCAwIT09bilpZigwPT09KGplPShVZT1uLnRyaW0oKSkubGVuZ3RoKSlBPTAsVWU9XCJcIjtpZihqZT4wKXN3aXRjaChBKXtjYXNlIGZlOlRlPVRlLnJlcGxhY2UoeCxNZSk7Y2FzZSB1ZTpjYXNlIGllOmNhc2UgUTpVZT1UZStcIntcIitVZStcIn1cIjticmVhaztjYXNlIHRlOmlmKFVlPShUZT1UZS5yZXBsYWNlKGIsXCIkMSAkMlwiKyhCZT4wP0RlOlwiXCIpKSkrXCJ7XCIrVWUrXCJ9XCIsMT09PUFlfHwyPT09QWUmJkxlKFwiQFwiK1VlLDMpKVVlPVwiQFwiK04rVWUrXCJAXCIrVWU7ZWxzZSBVZT1cIkBcIitVZTticmVhaztkZWZhdWx0OmlmKFVlPVRlK1VlLHQ9PT1kZSlWZSs9VWUsVWU9XCJcIn1lbHNlIFVlPVwiXCI7YnJlYWs7ZGVmYXVsdDpVZT1IZShhLEllKGEsVGUsT2UpLFVlLHQsaSsxKX1YZSs9VWUsTz0wLCRlPTAsej0wLHdlPTAsT2U9MCxqPTAsVGU9XCJcIixVZT1cIlwiLEM9cy5jaGFyQ29kZUF0KCsrUik7YnJlYWs7Y2FzZSBxOmNhc2UgVzppZigoamU9KFRlPSh3ZT4wP1RlLnJlcGxhY2UoYyxcIlwiKTpUZSkudHJpbSgpKS5sZW5ndGgpPjEpe2lmKDA9PT16KWlmKChnPVRlLmNoYXJDb2RlQXQoMCkpPT09UXx8Zz45NiYmZzwxMjMpamU9KFRlPVRlLnJlcGxhY2UoXCIgXCIsXCI6XCIpKS5sZW5ndGg7aWYoeWU+MClpZih2b2lkIDAhPT0obj1QZShTZSxUZSxhLGUscGUsYmUsVmUubGVuZ3RoLHQsaSx0KSkpaWYoMD09PShqZT0oVGU9bi50cmltKCkpLmxlbmd0aCkpVGU9XCJcXDBcXDBcIjtzd2l0Y2goZz1UZS5jaGFyQ29kZUF0KDApLEE9VGUuY2hhckNvZGVBdCgxKSxnKXtjYXNlIHJlOmJyZWFrO2Nhc2UgTDppZihBPT09b2V8fEE9PT1oZSl7WWUrPVRlK3MuY2hhckF0KFIpO2JyZWFrfWRlZmF1bHQ6aWYoVGUuY2hhckNvZGVBdChqZS0xKT09PVYpYnJlYWs7VmUrPUtlKFRlLGcsQSxUZS5jaGFyQ29kZUF0KDIpKX19Tz0wLCRlPTAsej0wLHdlPTAsT2U9MCxUZT1cIlwiLEM9cy5jaGFyQ29kZUF0KCsrUil9fXN3aXRjaChDKXtjYXNlIEo6Y2FzZSBJOmlmKGgrZCt1K28rdmU9PT0wKXN3aXRjaCgkKXtjYXNlIEU6Y2FzZSBYOmNhc2UgWTpjYXNlIEw6Y2FzZSBhZTpjYXNlIF86Y2FzZSBUOmNhc2UgZWU6Y2FzZSBaOmNhc2UgUTpjYXNlIFY6Y2FzZSBVOmNhc2UgVzpjYXNlIEI6Y2FzZSBxOmJyZWFrO2RlZmF1bHQ6aWYoej4wKSRlPTF9aWYoaD09PVopaD0wO2Vsc2UgaWYoZ2UrTz09PTAmJnQhPT10ZSYmVGUubGVuZ3RoPjApd2U9MSxUZSs9XCJcXDBcIjtpZih5ZSpxZT4wKVBlKE5lLFRlLGEsZSxwZSxiZSxWZS5sZW5ndGgsdCxpLHQpO2JlPTEscGUrKzticmVhaztjYXNlIFc6Y2FzZSBxOmlmKGgrZCt1K289PT0wKXtiZSsrO2JyZWFrfWRlZmF1bHQ6c3dpdGNoKGJlKyssUmU9cy5jaGFyQXQoUiksQyl7Y2FzZSBLOmNhc2UgTTppZihkK28raD09PTApc3dpdGNoKHcpe2Nhc2UgVTpjYXNlIFY6Y2FzZSBLOmNhc2UgTTpSZT1cIlwiO2JyZWFrO2RlZmF1bHQ6aWYoQyE9PU0pUmU9XCIgXCJ9YnJlYWs7Y2FzZSByZTpSZT1cIlxcXFwwXCI7YnJlYWs7Y2FzZSBjZTpSZT1cIlxcXFxmXCI7YnJlYWs7Y2FzZSBzZTpSZT1cIlxcXFx2XCI7YnJlYWs7Y2FzZSBQOmlmKGQraCtvPT09MCYmZ2U+MClPZT0xLHdlPTEsUmU9XCJcXGZcIitSZTticmVhaztjYXNlIDEwODppZihkK2grbytrZT09PTAmJno+MClzd2l0Y2goUi16KXtjYXNlIDI6aWYodz09PW5lJiZzLmNoYXJDb2RlQXQoUi0zKT09PVYpa2U9dztjYXNlIDg6aWYobT09PWxlKWtlPW19YnJlYWs7Y2FzZSBWOmlmKGQraCtvPT09MCl6PVI7YnJlYWs7Y2FzZSBVOmlmKGgrdStkK289PT0wKXdlPTEsUmUrPVwiXFxyXCI7YnJlYWs7Y2FzZSBZOmNhc2UgWDppZigwPT09aClkPWQ9PT1DPzA6MD09PWQ/QzpkO2JyZWFrO2Nhc2UgRzppZihkK2grdT09PTApbysrO2JyZWFrO2Nhc2UgSDppZihkK2grdT09PTApby0tO2JyZWFrO2Nhc2UgRTppZihkK2grbz09PTApdS0tO2JyZWFrO2Nhc2UgRDppZihkK2grbz09PTApe2lmKDA9PT1PKXN3aXRjaCgyKncrMyptKXtjYXNlIDUzMzpicmVhaztkZWZhdWx0Onk9MCxPPTF9dSsrfWJyZWFrO2Nhc2UgTDppZihoK3UrZCtvK3oraj09PTApaj0xO2JyZWFrO2Nhc2UgVDpjYXNlIFo6aWYoZCtvK3U+MClicmVhaztzd2l0Y2goaCl7Y2FzZSAwOnN3aXRjaCgyKkMrMypzLmNoYXJDb2RlQXQoUisxKSl7Y2FzZSAyMzU6aD1aO2JyZWFrO2Nhc2UgMjIwOmplPVIsaD1UfWJyZWFrO2Nhc2UgVDppZihDPT09WiYmdz09PVQmJmplKzIhPT1SKXtpZigzMz09PXMuY2hhckNvZGVBdChqZSsyKSlWZSs9cy5zdWJzdHJpbmcoamUsUisxKTtSZT1cIlwiLGg9MH19fWlmKDA9PT1oKXtpZihnZStkK28raj09PTAmJnQhPT10ZSYmQyE9PVcpc3dpdGNoKEMpe2Nhc2UgVTpjYXNlIGFlOmNhc2UgXzpjYXNlIGVlOmNhc2UgRTpjYXNlIEQ6aWYoMD09PU8pe3N3aXRjaCh3KXtjYXNlIEs6Y2FzZSBNOmNhc2UgSTpjYXNlIEo6UmUrPVwiXFwwXCI7YnJlYWs7ZGVmYXVsdDpSZT1cIlxcMFwiK1JlKyhDPT09VT9cIlwiOlwiXFwwXCIpfXdlPTF9ZWxzZSBzd2l0Y2goQyl7Y2FzZSBEOmlmKHorNz09PVImJjEwOD09PXcpej0wO089Kyt5O2JyZWFrO2Nhc2UgRTppZigwPT0oTz0tLXkpKXdlPTEsUmUrPVwiXFwwXCJ9YnJlYWs7Y2FzZSBLOmNhc2UgTTpzd2l0Y2godyl7Y2FzZSByZTpjYXNlIEI6Y2FzZSBxOmNhc2UgVzpjYXNlIFU6Y2FzZSBjZTpjYXNlIEs6Y2FzZSBNOmNhc2UgSTpjYXNlIEo6YnJlYWs7ZGVmYXVsdDppZigwPT09Tyl3ZT0xLFJlKz1cIlxcMFwifX1pZihUZSs9UmUsQyE9PU0mJkMhPT1LKSQ9Q319bT13LHc9QyxSKyt9aWYoamU9VmUubGVuZ3RoLG1lPjApaWYoMD09PWplJiYwPT09WGUubGVuZ3RoJiYwPT09YVswXS5sZW5ndGg9PWZhbHNlKWlmKHQhPT1pZXx8MT09PWEubGVuZ3RoJiYoZ2U+MD9FZTpHZSk9PT1hWzBdKWplPWEuam9pbihcIixcIikubGVuZ3RoKzI7aWYoamU+MCl7aWYoZj0wPT09Z2UmJnQhPT10ZT9mdW5jdGlvbihlKXtmb3IodmFyIGEscixzPTAsdD1lLmxlbmd0aCxpPUFycmF5KHQpO3M8dDsrK3Mpe2Zvcih2YXIgZj1lW3NdLnNwbGl0KGwpLG49XCJcIixvPTAsaD0wLHU9MCxkPTAsYj1mLmxlbmd0aDtvPGI7KytvKXtpZigwPT09KGg9KHI9ZltvXSkubGVuZ3RoKSYmYj4xKWNvbnRpbnVlO2lmKHU9bi5jaGFyQ29kZUF0KG4ubGVuZ3RoLTEpLGQ9ci5jaGFyQ29kZUF0KDApLGE9XCJcIiwwIT09bylzd2l0Y2godSl7Y2FzZSBUOmNhc2UgYWU6Y2FzZSBfOmNhc2UgZWU6Y2FzZSBNOmNhc2UgRDpicmVhaztkZWZhdWx0OmE9XCIgXCJ9c3dpdGNoKGQpe2Nhc2UgUDpyPWErRWU7Y2FzZSBhZTpjYXNlIF86Y2FzZSBlZTpjYXNlIE06Y2FzZSBFOmNhc2UgRDpicmVhaztjYXNlIEc6cj1hK3IrRWU7YnJlYWs7Y2FzZSBWOnN3aXRjaCgyKnIuY2hhckNvZGVBdCgxKSszKnIuY2hhckNvZGVBdCgyKSl7Y2FzZSA1MzA6aWYoQ2U+MCl7cj1hK3Iuc3Vic3RyaW5nKDgsaC0xKTticmVha31kZWZhdWx0OmlmKG88MXx8ZltvLTFdLmxlbmd0aDwxKXI9YStFZStyfWJyZWFrO2Nhc2UgVTphPVwiXCI7ZGVmYXVsdDppZihoPjEmJnIuaW5kZXhPZihcIjpcIik+MClyPWErci5yZXBsYWNlKHYsXCIkMVwiK0VlK1wiJDJcIik7ZWxzZSByPWErcitFZX1uKz1yfWlbc109bi5yZXBsYWNlKGMsXCJcIikudHJpbSgpfXJldHVybiBpfShhKTphLHllPjApaWYodm9pZCAwIT09KG49UGUoRmUsVmUsZixlLHBlLGJlLGplLHQsaSx0KSkmJjA9PT0oVmU9bikubGVuZ3RoKXJldHVybiBZZStWZStYZTtpZihWZT1mLmpvaW4oXCIsXCIpK1wie1wiK1ZlK1wifVwiLEFlKmtlIT0wKXtpZigyPT09QWUmJiFMZShWZSwyKSlrZT0wO3N3aXRjaChrZSl7Y2FzZSBsZTpWZT1WZS5yZXBsYWNlKGssXCI6XCIrUytcIiQxXCIpK1ZlO2JyZWFrO2Nhc2UgbmU6VmU9VmUucmVwbGFjZShwLFwiOjpcIitOK1wiaW5wdXQtJDFcIikrVmUucmVwbGFjZShwLFwiOjpcIitTK1wiJDFcIikrVmUucmVwbGFjZShwLFwiOlwiK0YrXCJpbnB1dC0kMVwiKStWZX1rZT0wfX1yZXR1cm4gWWUrVmUrWGV9ZnVuY3Rpb24gSWUoZSxhLHIpe3ZhciBjPWEudHJpbSgpLnNwbGl0KG8pLHM9Yyx0PWMubGVuZ3RoLGk9ZS5sZW5ndGg7c3dpdGNoKGkpe2Nhc2UgMDpjYXNlIDE6Zm9yKHZhciBmPTAsbj0wPT09aT9cIlwiOmVbMF0rXCIgXCI7Zjx0OysrZilzW2ZdPUplKG4sc1tmXSxyLGkpLnRyaW0oKTticmVhaztkZWZhdWx0OmY9MDt2YXIgbD0wO2ZvcihzPVtdO2Y8dDsrK2YpZm9yKHZhciBoPTA7aDxpOysraClzW2wrK109SmUoZVtoXStcIiBcIixjW2ZdLHIsaSkudHJpbSgpfXJldHVybiBzfWZ1bmN0aW9uIEplKGUsYSxyLGMpe3ZhciBzPWEsdD1zLmNoYXJDb2RlQXQoMCk7aWYodDwzMyl0PShzPXMudHJpbSgpKS5jaGFyQ29kZUF0KDApO3N3aXRjaCh0KXtjYXNlIFA6c3dpdGNoKGdlK2Mpe2Nhc2UgMDpjYXNlIDE6aWYoMD09PWUudHJpbSgpLmxlbmd0aClicmVhaztkZWZhdWx0OnJldHVybiBzLnJlcGxhY2UoaCxcIiQxXCIrZS50cmltKCkpfWJyZWFrO2Nhc2UgVjpzd2l0Y2gocy5jaGFyQ29kZUF0KDEpKXtjYXNlIDEwMzppZihDZT4wJiZnZT4wKXJldHVybiBzLnJlcGxhY2UodSxcIiQxXCIpLnJlcGxhY2UoaCxcIiQxXCIrR2UpO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIGUudHJpbSgpK3MucmVwbGFjZShoLFwiJDFcIitlLnRyaW0oKSl9ZGVmYXVsdDppZihyKmdlPjAmJnMuaW5kZXhPZihcIlxcZlwiKT4wKXJldHVybiBzLnJlcGxhY2UoaCwoZS5jaGFyQ29kZUF0KDApPT09Vj9cIlwiOlwiJDFcIikrZS50cmltKCkpfXJldHVybiBlK3N9ZnVuY3Rpb24gS2UoZSxhLHIsYyl7dmFyIGwsbz0wLGg9ZStcIjtcIix1PTIqYSszKnIrNCpjO2lmKDk0ND09PXUpcmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciBhPWUubGVuZ3RoLHI9ZS5pbmRleE9mKFwiOlwiLDkpKzEsYz1lLnN1YnN0cmluZygwLHIpLnRyaW0oKSxzPWUuc3Vic3RyaW5nKHIsYS0xKS50cmltKCk7c3dpdGNoKGUuY2hhckNvZGVBdCg5KSpCZSl7Y2FzZSAwOmJyZWFrO2Nhc2UgUTppZigxMTAhPT1lLmNoYXJDb2RlQXQoMTApKWJyZWFrO2RlZmF1bHQ6Zm9yKHZhciB0PXMuc3BsaXQoKHM9XCJcIixmKSksaT0wLHI9MCxhPXQubGVuZ3RoO2k8YTtyPTAsKytpKXtmb3IodmFyIGw9dFtpXSxvPWwuc3BsaXQobik7bD1vW3JdOyl7dmFyIGg9bC5jaGFyQ29kZUF0KDApO2lmKDE9PT1CZSYmKGg+TCYmaDw5MHx8aD45NiYmaDwxMjN8fGg9PT1SfHxoPT09USYmbC5jaGFyQ29kZUF0KDEpIT09USkpc3dpdGNoKGlzTmFOKHBhcnNlRmxvYXQobCkpKygtMSE9PWwuaW5kZXhPZihcIihcIikpKXtjYXNlIDE6c3dpdGNoKGwpe2Nhc2VcImluZmluaXRlXCI6Y2FzZVwiYWx0ZXJuYXRlXCI6Y2FzZVwiYmFja3dhcmRzXCI6Y2FzZVwicnVubmluZ1wiOmNhc2VcIm5vcm1hbFwiOmNhc2VcImZvcndhcmRzXCI6Y2FzZVwiYm90aFwiOmNhc2VcIm5vbmVcIjpjYXNlXCJsaW5lYXJcIjpjYXNlXCJlYXNlXCI6Y2FzZVwiZWFzZS1pblwiOmNhc2VcImVhc2Utb3V0XCI6Y2FzZVwiZWFzZS1pbi1vdXRcIjpjYXNlXCJwYXVzZWRcIjpjYXNlXCJyZXZlcnNlXCI6Y2FzZVwiYWx0ZXJuYXRlLXJldmVyc2VcIjpjYXNlXCJpbmhlcml0XCI6Y2FzZVwiaW5pdGlhbFwiOmNhc2VcInVuc2V0XCI6Y2FzZVwic3RlcC1zdGFydFwiOmNhc2VcInN0ZXAtZW5kXCI6YnJlYWs7ZGVmYXVsdDpsKz1EZX19b1tyKytdPWx9cys9KDA9PT1pP1wiXCI6XCIsXCIpK28uam9pbihcIiBcIil9fWlmKHM9YytzK1wiO1wiLDE9PT1BZXx8Mj09PUFlJiZMZShzLDEpKXJldHVybiBOK3MrcztyZXR1cm4gc30oaCk7ZWxzZSBpZigwPT09QWV8fDI9PT1BZSYmIUxlKGgsMSkpcmV0dXJuIGg7c3dpdGNoKHUpe2Nhc2UgMTAxNTpyZXR1cm4gOTc9PT1oLmNoYXJDb2RlQXQoMTApP04raCtoOmg7Y2FzZSA5NTE6cmV0dXJuIDExNj09PWguY2hhckNvZGVBdCgzKT9OK2graDpoO2Nhc2UgOTYzOnJldHVybiAxMTA9PT1oLmNoYXJDb2RlQXQoNSk/TitoK2g6aDtjYXNlIDEwMDk6aWYoMTAwIT09aC5jaGFyQ29kZUF0KDQpKWJyZWFrO2Nhc2UgOTY5OmNhc2UgOTQyOnJldHVybiBOK2graDtjYXNlIDk3ODpyZXR1cm4gTitoK1MraCtoO2Nhc2UgMTAxOTpjYXNlIDk4MzpyZXR1cm4gTitoK1MraCtGK2graDtjYXNlIDg4MzppZihoLmNoYXJDb2RlQXQoOCk9PT1RKXJldHVybiBOK2graDtpZihoLmluZGV4T2YoXCJpbWFnZS1zZXQoXCIsMTEpPjApcmV0dXJuIGgucmVwbGFjZSh6LFwiJDFcIitOK1wiJDJcIikraDtyZXR1cm4gaDtjYXNlIDkzMjppZihoLmNoYXJDb2RlQXQoNCk9PT1RKXN3aXRjaChoLmNoYXJDb2RlQXQoNSkpe2Nhc2UgMTAzOnJldHVybiBOK1wiYm94LVwiK2gucmVwbGFjZShcIi1ncm93XCIsXCJcIikrTitoK0YraC5yZXBsYWNlKFwiZ3Jvd1wiLFwicG9zaXRpdmVcIikraDtjYXNlIDExNTpyZXR1cm4gTitoK0YraC5yZXBsYWNlKFwic2hyaW5rXCIsXCJuZWdhdGl2ZVwiKStoO2Nhc2UgOTg6cmV0dXJuIE4raCtGK2gucmVwbGFjZShcImJhc2lzXCIsXCJwcmVmZXJyZWQtc2l6ZVwiKStofXJldHVybiBOK2grRitoK2g7Y2FzZSA5NjQ6cmV0dXJuIE4raCtGK1wiZmxleC1cIitoK2g7Y2FzZSAxMDIzOmlmKDk5IT09aC5jaGFyQ29kZUF0KDgpKWJyZWFrO3JldHVybiBsPWguc3Vic3RyaW5nKGguaW5kZXhPZihcIjpcIiwxNSkpLnJlcGxhY2UoXCJmbGV4LVwiLFwiXCIpLnJlcGxhY2UoXCJzcGFjZS1iZXR3ZWVuXCIsXCJqdXN0aWZ5XCIpLE4rXCJib3gtcGFja1wiK2wrTitoK0YrXCJmbGV4LXBhY2tcIitsK2g7Y2FzZSAxMDA1OnJldHVybiB0LnRlc3QoaCk/aC5yZXBsYWNlKHMsXCI6XCIrTikraC5yZXBsYWNlKHMsXCI6XCIrUykraDpoO2Nhc2UgMWUzOnN3aXRjaChvPShsPWguc3Vic3RyaW5nKDEzKS50cmltKCkpLmluZGV4T2YoXCItXCIpKzEsbC5jaGFyQ29kZUF0KDApK2wuY2hhckNvZGVBdChvKSl7Y2FzZSAyMjY6bD1oLnJlcGxhY2UobSxcInRiXCIpO2JyZWFrO2Nhc2UgMjMyOmw9aC5yZXBsYWNlKG0sXCJ0Yi1ybFwiKTticmVhaztjYXNlIDIyMDpsPWgucmVwbGFjZShtLFwibHJcIik7YnJlYWs7ZGVmYXVsdDpyZXR1cm4gaH1yZXR1cm4gTitoK0YrbCtoO2Nhc2UgMTAxNzppZigtMT09PWguaW5kZXhPZihcInN0aWNreVwiLDkpKXJldHVybiBoO2Nhc2UgOTc1OnN3aXRjaChvPShoPWUpLmxlbmd0aC0xMCx1PShsPSgzMz09PWguY2hhckNvZGVBdChvKT9oLnN1YnN0cmluZygwLG8pOmgpLnN1YnN0cmluZyhlLmluZGV4T2YoXCI6XCIsNykrMSkudHJpbSgpKS5jaGFyQ29kZUF0KDApKygwfGwuY2hhckNvZGVBdCg3KSkpe2Nhc2UgMjAzOmlmKGwuY2hhckNvZGVBdCg4KTwxMTEpYnJlYWs7Y2FzZSAxMTU6aD1oLnJlcGxhY2UobCxOK2wpK1wiO1wiK2g7YnJlYWs7Y2FzZSAyMDc6Y2FzZSAxMDI6aD1oLnJlcGxhY2UobCxOKyh1PjEwMj9cImlubGluZS1cIjpcIlwiKStcImJveFwiKStcIjtcIitoLnJlcGxhY2UobCxOK2wpK1wiO1wiK2gucmVwbGFjZShsLEYrbCtcImJveFwiKStcIjtcIitofXJldHVybiBoK1wiO1wiO2Nhc2UgOTM4OmlmKGguY2hhckNvZGVBdCg1KT09PVEpc3dpdGNoKGguY2hhckNvZGVBdCg2KSl7Y2FzZSAxMDU6cmV0dXJuIGw9aC5yZXBsYWNlKFwiLWl0ZW1zXCIsXCJcIiksTitoK04rXCJib3gtXCIrbCtGK1wiZmxleC1cIitsK2g7Y2FzZSAxMTU6cmV0dXJuIE4raCtGK1wiZmxleC1pdGVtLVwiK2gucmVwbGFjZSh5LFwiXCIpK2g7ZGVmYXVsdDpyZXR1cm4gTitoK0YrXCJmbGV4LWxpbmUtcGFja1wiK2gucmVwbGFjZShcImFsaWduLWNvbnRlbnRcIixcIlwiKS5yZXBsYWNlKHksXCJcIikraH1icmVhaztjYXNlIDk3MzpjYXNlIDk4OTppZihoLmNoYXJDb2RlQXQoMykhPT1RfHwxMjI9PT1oLmNoYXJDb2RlQXQoNCkpYnJlYWs7Y2FzZSA5MzE6Y2FzZSA5NTM6aWYodHJ1ZT09PWoudGVzdChlKSlpZigxMTU9PT0obD1lLnN1YnN0cmluZyhlLmluZGV4T2YoXCI6XCIpKzEpKS5jaGFyQ29kZUF0KDApKXJldHVybiBLZShlLnJlcGxhY2UoXCJzdHJldGNoXCIsXCJmaWxsLWF2YWlsYWJsZVwiKSxhLHIsYykucmVwbGFjZShcIjpmaWxsLWF2YWlsYWJsZVwiLFwiOnN0cmV0Y2hcIik7ZWxzZSByZXR1cm4gaC5yZXBsYWNlKGwsTitsKStoLnJlcGxhY2UobCxTK2wucmVwbGFjZShcImZpbGwtXCIsXCJcIikpK2g7YnJlYWs7Y2FzZSA5NjI6aWYoaD1OK2grKDEwMj09PWguY2hhckNvZGVBdCg1KT9GK2g6XCJcIikraCxyK2M9PT0yMTEmJjEwNT09PWguY2hhckNvZGVBdCgxMykmJmguaW5kZXhPZihcInRyYW5zZm9ybVwiLDEwKT4wKXJldHVybiBoLnN1YnN0cmluZygwLGguaW5kZXhPZihcIjtcIiwyNykrMSkucmVwbGFjZShpLFwiJDFcIitOK1wiJDJcIikraH1yZXR1cm4gaH1mdW5jdGlvbiBMZShlLGEpe3ZhciByPWUuaW5kZXhPZigxPT09YT9cIjpcIjpcIntcIiksYz1lLnN1YnN0cmluZygwLDMhPT1hP3I6MTApLHM9ZS5zdWJzdHJpbmcocisxLGUubGVuZ3RoLTEpO3JldHVybiBPZSgyIT09YT9jOmMucmVwbGFjZShPLFwiJDFcIikscyxhKX1mdW5jdGlvbiBNZShlLGEpe3ZhciByPUtlKGEsYS5jaGFyQ29kZUF0KDApLGEuY2hhckNvZGVBdCgxKSxhLmNoYXJDb2RlQXQoMikpO3JldHVybiByIT09YStcIjtcIj9yLnJlcGxhY2UoJCxcIiBvciAoJDEpXCIpLnN1YnN0cmluZyg0KTpcIihcIithK1wiKVwifWZ1bmN0aW9uIFBlKGUsYSxyLGMscyx0LGksZixuLGwpe2Zvcih2YXIgbyxoPTAsdT1hO2g8eWU7KytoKXN3aXRjaChvPSRlW2hdLmNhbGwoVGUsZSx1LHIsYyxzLHQsaSxmLG4sbCkpe2Nhc2Ugdm9pZCAwOmNhc2UgZmFsc2U6Y2FzZSB0cnVlOmNhc2UgbnVsbDpicmVhaztkZWZhdWx0OnU9b31pZih1IT09YSlyZXR1cm4gdX1mdW5jdGlvbiBRZShlLGEscixjKXtmb3IodmFyIHM9YSsxO3M8cjsrK3Mpc3dpdGNoKGMuY2hhckNvZGVBdChzKSl7Y2FzZSBaOmlmKGU9PT1UKWlmKGMuY2hhckNvZGVBdChzLTEpPT09VCYmYSsyIT09cylyZXR1cm4gcysxO2JyZWFrO2Nhc2UgSTppZihlPT09WilyZXR1cm4gcysxfXJldHVybiBzfWZ1bmN0aW9uIFJlKGUpe2Zvcih2YXIgYSBpbiBlKXt2YXIgcj1lW2FdO3N3aXRjaChhKXtjYXNlXCJrZXlmcmFtZVwiOkJlPTB8cjticmVhaztjYXNlXCJnbG9iYWxcIjpDZT0wfHI7YnJlYWs7Y2FzZVwiY2FzY2FkZVwiOmdlPTB8cjticmVhaztjYXNlXCJjb21wcmVzc1wiOndlPTB8cjticmVhaztjYXNlXCJzZW1pY29sb25cIjp2ZT0wfHI7YnJlYWs7Y2FzZVwicHJlc2VydmVcIjptZT0wfHI7YnJlYWs7Y2FzZVwicHJlZml4XCI6aWYoT2U9bnVsbCwhcilBZT0wO2Vsc2UgaWYoXCJmdW5jdGlvblwiIT10eXBlb2YgcilBZT0xO2Vsc2UgQWU9MixPZT1yfX1yZXR1cm4gUmV9ZnVuY3Rpb24gVGUoYSxyKXtpZih2b2lkIDAhPT10aGlzJiZ0aGlzLmNvbnN0cnVjdG9yPT09VGUpcmV0dXJuIGUoYSk7dmFyIHM9YSx0PXMuY2hhckNvZGVBdCgwKTtpZih0PDMzKXQ9KHM9cy50cmltKCkpLmNoYXJDb2RlQXQoMCk7aWYoQmU+MClEZT1zLnJlcGxhY2UoZCx0PT09Rz9cIlwiOlwiLVwiKTtpZih0PTEsMT09PWdlKUdlPXM7ZWxzZSBFZT1zO3ZhciBpLGY9W0dlXTtpZih5ZT4wKWlmKHZvaWQgMCE9PShpPVBlKHplLHIsZixmLHBlLGJlLDAsMCwwLDApKSYmXCJzdHJpbmdcIj09dHlwZW9mIGkpcj1pO3ZhciBuPUhlKHhlLGYsciwwLDApO2lmKHllPjApaWYodm9pZCAwIT09KGk9UGUoamUsbixmLGYscGUsYmUsbi5sZW5ndGgsMCwwLDApKSYmXCJzdHJpbmdcIiE9dHlwZW9mKG49aSkpdD0wO3JldHVybiBEZT1cIlwiLEdlPVwiXCIsRWU9XCJcIixrZT0wLHBlPTEsYmU9MSx3ZSp0PT0wP246bi5yZXBsYWNlKGMsXCJcIikucmVwbGFjZShnLFwiXCIpLnJlcGxhY2UoQSxcIiQxXCIpLnJlcGxhY2UoQyxcIiQxXCIpLnJlcGxhY2UodyxcIiBcIil9aWYoVGUudXNlPWZ1bmN0aW9uIGUoYSl7c3dpdGNoKGEpe2Nhc2Ugdm9pZCAwOmNhc2UgbnVsbDp5ZT0kZS5sZW5ndGg9MDticmVhaztkZWZhdWx0OmlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGEpJGVbeWUrK109YTtlbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBhKWZvcih2YXIgcj0wLGM9YS5sZW5ndGg7cjxjOysrcillKGFbcl0pO2Vsc2UgcWU9MHwhIWF9cmV0dXJuIGV9LFRlLnNldD1SZSx2b2lkIDAhPT1hKVJlKGEpO3JldHVybiBUZX0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R5bGlzLm1pbi5qcy5tYXAiLCJ2YXIgc2ltcGxlSXNFcXVhbCA9IGZ1bmN0aW9uIHNpbXBsZUlzRXF1YWwoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn07XG5cbmZ1bmN0aW9uIGluZGV4IChyZXN1bHRGbiwgaXNFcXVhbCkge1xuICBpZiAoaXNFcXVhbCA9PT0gdm9pZCAwKSB7XG4gICAgaXNFcXVhbCA9IHNpbXBsZUlzRXF1YWw7XG4gIH1cblxuICB2YXIgbGFzdFRoaXM7XG4gIHZhciBsYXN0QXJncyA9IFtdO1xuICB2YXIgbGFzdFJlc3VsdDtcbiAgdmFyIGNhbGxlZE9uY2UgPSBmYWxzZTtcblxuICB2YXIgaXNOZXdBcmdFcXVhbFRvTGFzdCA9IGZ1bmN0aW9uIGlzTmV3QXJnRXF1YWxUb0xhc3QobmV3QXJnLCBpbmRleCkge1xuICAgIHJldHVybiBpc0VxdWFsKG5ld0FyZywgbGFzdEFyZ3NbaW5kZXhdLCBpbmRleCk7XG4gIH07XG5cbiAgdmFyIHJlc3VsdCA9IGZ1bmN0aW9uIHJlc3VsdCgpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgbmV3QXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIG5ld0FyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgaWYgKGNhbGxlZE9uY2UgJiYgbGFzdFRoaXMgPT09IHRoaXMgJiYgbmV3QXJncy5sZW5ndGggPT09IGxhc3RBcmdzLmxlbmd0aCAmJiBuZXdBcmdzLmV2ZXJ5KGlzTmV3QXJnRXF1YWxUb0xhc3QpKSB7XG4gICAgICByZXR1cm4gbGFzdFJlc3VsdDtcbiAgICB9XG5cbiAgICBsYXN0UmVzdWx0ID0gcmVzdWx0Rm4uYXBwbHkodGhpcywgbmV3QXJncyk7XG4gICAgY2FsbGVkT25jZSA9IHRydWU7XG4gICAgbGFzdFRoaXMgPSB0aGlzO1xuICAgIGxhc3RBcmdzID0gbmV3QXJncztcbiAgICByZXR1cm4gbGFzdFJlc3VsdDtcbiAgfTtcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsInZhciBpc2FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb1JlZ0V4cCA9IHRva2Vuc1RvUmVnRXhwXG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJylcblxuLyoqXG4gKiBQYXJzZSBhIHN0cmluZyBmb3IgdGhlIHJhdyB0b2tlbnMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshQXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHBhcnNlIChzdHIsIG9wdGlvbnMpIHtcbiAgdmFyIHRva2VucyA9IFtdXG4gIHZhciBrZXkgPSAwXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIHBhdGggPSAnJ1xuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXG4gIHZhciByZXNcblxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xuICAgIHZhciBtID0gcmVzWzBdXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XG4gICAgcGF0aCArPSBzdHIuc2xpY2UoaW5kZXgsIG9mZnNldClcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIHZhciBuZXh0ID0gc3RyW2luZGV4XVxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cbiAgICB2YXIgbmFtZSA9IHJlc1szXVxuICAgIHZhciBjYXB0dXJlID0gcmVzWzRdXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXG4gICAgdmFyIGFzdGVyaXNrID0gcmVzWzddXG5cbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxuICAgIGlmIChwYXRoKSB7XG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XG4gICAgdmFyIHJlcGVhdCA9IG1vZGlmaWVyID09PSAnKycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxuICAgIHZhciBwYXR0ZXJuID0gY2FwdHVyZSB8fCBncm91cFxuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KVxuICB9XG5cbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxuICBpZiAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxuICB9XG5cbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cbiAgaWYgKHBhdGgpIHtcbiAgICB0b2tlbnMucHVzaChwYXRoKVxuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXG5cbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHBhdHRlcm5zIGJlZm9yZSBjb21waWxhdGlvbi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1hdGNoZXNbaV0gPSBuZXcgUmVnRXhwKCdeKD86JyArIHRva2Vuc1tpXS5wYXR0ZXJuICsgJykkJylcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKG9iaiwgb3B0cykge1xuICAgIHZhciBwYXRoID0gJydcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fVxuICAgIHZhciBvcHRpb25zID0gb3B0cyB8fCB7fVxuICAgIHZhciBlbmNvZGUgPSBvcHRpb25zLnByZXR0eSA/IGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSA6IGVuY29kZVVSSUNvbXBvbmVudFxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICBwYXRoICs9IHRva2VuXG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlID0gZGF0YVt0b2tlbi5uYW1lXVxuICAgICAgdmFyIHNlZ21lbnRcblxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgLy8gUHJlcGVuZCBwYXJ0aWFsIHNlZ21lbnQgcHJlZml4ZXMuXG4gICAgICAgICAgaWYgKHRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIGJlIGRlZmluZWQnKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChpc2FycmF5KHZhbHVlKSkge1xuICAgICAgICBpZiAoIXRva2VuLnJlcGVhdCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IHJlcGVhdCwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpICsgJ2AnKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgYmUgZW1wdHknKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsdWUubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBzZWdtZW50ID0gZW5jb2RlKHZhbHVlW2pdKVxuXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGFsbCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHNlZ21lbnQpICsgJ2AnKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhdGggKz0gKGogPT09IDAgPyB0b2tlbi5wcmVmaXggOiB0b2tlbi5kZWxpbWl0ZXIpICsgc2VnbWVudFxuICAgICAgICB9XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc2VnbWVudCA9IHRva2VuLmFzdGVyaXNrID8gZW5jb2RlQXN0ZXJpc2sodmFsdWUpIDogZW5jb2RlKHZhbHVlKVxuXG4gICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBcIicgKyBzZWdtZW50ICsgJ1wiJylcbiAgICAgIH1cblxuICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXggKyBzZWdtZW50XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGhcbiAgfVxufVxuXG4vKipcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBFc2NhcGUgdGhlIGNhcHR1cmluZyBncm91cCBieSBlc2NhcGluZyBzcGVjaWFsIGNoYXJhY3RlcnMgYW5kIG1lYW5pbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcbiAgcmV0dXJuIGdyb3VwLnJlcGxhY2UoLyhbPSE6JFxcLygpXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSByZVxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcbiAgcmUua2V5cyA9IGtleXNcbiAgcmV0dXJuIHJlXG59XG5cbi8qKlxuICogR2V0IHRoZSBmbGFncyBmb3IgYSByZWdleHAgZnJvbSB0aGUgb3B0aW9ucy5cbiAqXG4gKiBAcGFyYW0gIHtPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZmxhZ3MgKG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcbn1cblxuLyoqXG4gKiBQdWxsIG91dCBrZXlzIGZyb20gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAgKHBhdGgsIGtleXMpIHtcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXG5cbiAgaWYgKGdyb3Vwcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBpLFxuICAgICAgICBwcmVmaXg6IG51bGwsXG4gICAgICAgIGRlbGltaXRlcjogbnVsbCxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxuICAgICAgICBwYXJ0aWFsOiBmYWxzZSxcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxuICAgICAgICBwYXR0ZXJuOiBudWxsXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcbiAgfVxuXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXG4gIHZhciByb3V0ZSA9ICcnXG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcodG9rZW4ucHJlZml4KVxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcblxuICAgICAga2V5cy5wdXNoKHRva2VuKVxuXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XG4gICAgICAgIGNhcHR1cmUgKz0gJyg/OicgKyBwcmVmaXggKyBjYXB0dXJlICsgJykqJ1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcbiAgICB9XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcbiAgdmFyIGVuZHNXaXRoRGVsaW1pdGVyID0gcm91dGUuc2xpY2UoLWRlbGltaXRlci5sZW5ndGgpID09PSBkZWxpbWl0ZXJcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHJvdXRlICs9ICckJ1xuICB9IGVsc2Uge1xuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cbiAgICByb3V0ZSArPSBzdHJpY3QgJiYgZW5kc1dpdGhEZWxpbWl0ZXIgPyAnJyA6ICcoPz0nICsgZGVsaW1pdGVyICsgJ3wkKSdcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG4iLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIFJvdXRlIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmV4cG9ydCAqIGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlQnJvd3Nlckhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBCcm93c2VyUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gQnJvd3NlclJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBCcm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXJcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIHdpbmRvdy5sb2NhdGlvbi5oYXNoLlxuICovXG5cbnZhciBIYXNoUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKEhhc2hSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEhhc2hSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhhc2hIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gSGFzaFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEhhc2hSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgSGFzaFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGhhc2hUeXBlOiBQcm9wVHlwZXMub25lT2YoW1wiaGFzaGJhbmdcIiwgXCJub3NsYXNoXCIsIFwic2xhc2hcIl0pXG4gIH07XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgSGFzaFJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG5mdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuICEhKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkpO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIGEgaGlzdG9yeS1hd2FyZSA8YT4uXG4gKi9cblxuXG52YXIgTGluayA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShMaW5rLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaW5rKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBMaW5rLnByb3RvdHlwZTtcblxuICBfcHJvdG8uaGFuZGxlQ2xpY2sgPSBmdW5jdGlvbiBoYW5kbGVDbGljayhldmVudCwgY29udGV4dCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uQ2xpY2spIHRoaXMucHJvcHMub25DbGljayhldmVudCk7XG5cbiAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAoIC8vIGlnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICF0aGlzLnByb3BzLnRhcmdldCB8fCB0aGlzLnByb3BzLnRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHZhciBtZXRob2QgPSB0aGlzLnByb3BzLnJlcGxhY2UgPyBjb250ZXh0Lmhpc3RvcnkucmVwbGFjZSA6IGNvbnRleHQuaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QodGhpcy5wcm9wcy50byk7XG4gICAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgaW5uZXJSZWYgPSBfdGhpcyRwcm9wcy5pbm5lclJlZixcbiAgICAgICAgcmVwbGFjZSA9IF90aGlzJHByb3BzLnJlcGxhY2UsXG4gICAgICAgIHRvID0gX3RoaXMkcHJvcHMudG8sXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wcywgW1wiaW5uZXJSZWZcIiwgXCJyZXBsYWNlXCIsIFwidG9cIl0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG5cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGNyZWF0ZUxvY2F0aW9uKHRvLCBudWxsLCBudWxsLCBjb250ZXh0LmxvY2F0aW9uKSA6IHRvO1xuICAgICAgdmFyIGhyZWYgPSBsb2NhdGlvbiA/IGNvbnRleHQuaGlzdG9yeS5jcmVhdGVIcmVmKGxvY2F0aW9uKSA6IFwiXCI7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCkge1xuICAgICAgICAgIHJldHVybiBfdGhpcy5oYW5kbGVDbGljayhldmVudCwgY29udGV4dCk7XG4gICAgICAgIH0sXG4gICAgICAgIGhyZWY6IGhyZWYsXG4gICAgICAgIHJlZjogaW5uZXJSZWZcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gTGluaztcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuTGluay5kZWZhdWx0UHJvcHMgPSB7XG4gIHJlcGxhY2U6IGZhbHNlXG59O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciB0b1R5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSk7XG4gIHZhciBpbm5lclJlZlR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuY10pO1xuICBMaW5rLnByb3BUeXBlcyA9IHtcbiAgICBpbm5lclJlZjogaW5uZXJSZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxuZnVuY3Rpb24gam9pbkNsYXNzbmFtZXMoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBjbGFzc25hbWVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGNsYXNzbmFtZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gY2xhc3NuYW1lcy5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICByZXR1cm4gaTtcbiAgfSkuam9pbihcIiBcIik7XG59XG4vKipcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxuICovXG5cblxuZnVuY3Rpb24gTmF2TGluayhfcmVmKSB7XG4gIHZhciBhcmlhQ3VycmVudCA9IF9yZWZbXCJhcmlhLWN1cnJlbnRcIl0sXG4gICAgICBhY3RpdmVDbGFzc05hbWUgPSBfcmVmLmFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvbiA9IF9yZWYubG9jYXRpb24sXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCJdKTtcblxuICB2YXIgcGF0aCA9IHR5cGVvZiB0byA9PT0gXCJvYmplY3RcIiA/IHRvLnBhdGhuYW1lIDogdG87IC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG5cbiAgdmFyIGVzY2FwZWRQYXRoID0gcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHtcbiAgICBwYXRoOiBlc2NhcGVkUGF0aCxcbiAgICBleGFjdDogZXhhY3QsXG4gICAgc3RyaWN0OiBzdHJpY3QsXG4gICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgIGNoaWxkcmVuOiBmdW5jdGlvbiBjaGlsZHJlbihfcmVmMikge1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3JlZjIubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2ggPSBfcmVmMi5tYXRjaDtcbiAgICAgIHZhciBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcCA/IGlzQWN0aXZlUHJvcChtYXRjaCwgbG9jYXRpb24pIDogbWF0Y2gpO1xuICAgICAgdmFyIGNsYXNzTmFtZSA9IGlzQWN0aXZlID8gam9pbkNsYXNzbmFtZXMoY2xhc3NOYW1lUHJvcCwgYWN0aXZlQ2xhc3NOYW1lKSA6IGNsYXNzTmFtZVByb3A7XG4gICAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIGFjdGl2ZVN0eWxlKSA6IHN0eWxlUHJvcDtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIF9leHRlbmRzKHtcbiAgICAgICAgXCJhcmlhLWN1cnJlbnRcIjogaXNBY3RpdmUgJiYgYXJpYUN1cnJlbnQgfHwgbnVsbCxcbiAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICAgIHN0eWxlOiBzdHlsZSxcbiAgICAgICAgdG86IHRvXG4gICAgICB9LCByZXN0KSk7XG4gICAgfVxuICB9KTtcbn1cblxuTmF2TGluay5kZWZhdWx0UHJvcHMgPSB7XG4gIFwiYXJpYS1jdXJyZW50XCI6IFwicGFnZVwiLFxuICBhY3RpdmVDbGFzc05hbWU6IFwiYWN0aXZlXCJcbn07XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIGFyaWFDdXJyZW50VHlwZSA9IFByb3BUeXBlcy5vbmVPZihbXCJwYWdlXCIsIFwic3RlcFwiLCBcImxvY2F0aW9uXCIsIFwiZGF0ZVwiLCBcInRpbWVcIiwgXCJ0cnVlXCJdKTtcbiAgTmF2TGluay5wcm9wVHlwZXMgPSB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFJvdXRlLnByb3BUeXBlcy5leGFjdCxcbiAgICBpc0FjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgc3RyaWN0OiBSb3V0ZS5wcm9wVHlwZXMuc3RyaWN0LFxuICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHRvOiBMaW5rLnByb3BUeXBlcy50b1xuICB9O1xufVxuXG5leHBvcnQgeyBCcm93c2VyUm91dGVyLCBIYXNoUm91dGVyLCBMaW5rLCBOYXZMaW5rIH07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jb25zdCBkZWZhdWx0STE4bkNvbnRleHQgPSB7XG4gIGN1cnJlbnRMYW5ndWFnZTogJ2VuJyxcbiAgXzogKCkgPT4ge30sXG4gIGNoYW5nZUxhbmd1YWdlOiAoKSA9PiB7fVxufTtcblxuY29uc3QgeyBQcm92aWRlciwgQ29uc3VtZXIgfSA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZGVmYXVsdEkxOG5Db250ZXh0KTtcbmV4cG9ydCB7IFByb3ZpZGVyIGFzIEkxOG5Qcm92aWRlciB9O1xuZXhwb3J0IHsgQ29uc3VtZXIgYXMgSTE4bkNvbnN1bWVyIH07XG4iLCIvLyBnZXR0aW5nIHRhZyBmcm9tIDE5LjEuMy42IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcoKVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuLy8gRVMzIHdyb25nIGhlcmVcbnZhciBBUkcgPSBjb2YoZnVuY3Rpb24gKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID09ICdBcmd1bWVudHMnO1xuXG4vLyBmYWxsYmFjayBmb3IgSUUxMSBTY3JpcHQgQWNjZXNzIERlbmllZCBlcnJvclxudmFyIHRyeUdldCA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGl0W2tleV07XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIE8sIFQsIEI7XG4gIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkID8gJ1VuZGVmaW5lZCcgOiBpdCA9PT0gbnVsbCA/ICdOdWxsJ1xuICAgIC8vIEBAdG9TdHJpbmdUYWcgY2FzZVxuICAgIDogdHlwZW9mIChUID0gdHJ5R2V0KE8gPSBPYmplY3QoaXQpLCBUQUcpKSA9PSAnc3RyaW5nJyA/IFRcbiAgICAvLyBidWlsdGluVGFnIGNhc2VcbiAgICA6IEFSRyA/IGNvZihPKVxuICAgIC8vIEVTMyBhcmd1bWVudHMgZmFsbGJhY2tcbiAgICA6IChCID0gY29mKE8pKSA9PSAnT2JqZWN0JyAmJiB0eXBlb2YgTy5jYWxsZWUgPT0gJ2Z1bmN0aW9uJyA/ICdBcmd1bWVudHMnIDogQjtcbn07XG4iLCJ2YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBTSEFSRUQgPSAnX19jb3JlLWpzX3NoYXJlZF9fJztcbnZhciBzdG9yZSA9IGdsb2JhbFtTSEFSRURdIHx8IChnbG9iYWxbU0hBUkVEXSA9IHt9KTtcblxuKG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIHN0b3JlW2tleV0gfHwgKHN0b3JlW2tleV0gPSB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiB7fSk7XG59KSgndmVyc2lvbnMnLCBbXSkucHVzaCh7XG4gIHZlcnNpb246IGNvcmUudmVyc2lvbixcbiAgbW9kZTogcmVxdWlyZSgnLi9fbGlicmFyeScpID8gJ3B1cmUnIDogJ2dsb2JhbCcsXG4gIGNvcHlyaWdodDogJ8KpIDIwMTggRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSknXG59KTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG52YXIgJGV4cG9ydCA9IGZ1bmN0aW9uICh0eXBlLCBuYW1lLCBzb3VyY2UpIHtcbiAgdmFyIElTX0ZPUkNFRCA9IHR5cGUgJiAkZXhwb3J0LkY7XG4gIHZhciBJU19HTE9CQUwgPSB0eXBlICYgJGV4cG9ydC5HO1xuICB2YXIgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuUztcbiAgdmFyIElTX1BST1RPID0gdHlwZSAmICRleHBvcnQuUDtcbiAgdmFyIElTX0JJTkQgPSB0eXBlICYgJGV4cG9ydC5CO1xuICB2YXIgdGFyZ2V0ID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIHx8IChnbG9iYWxbbmFtZV0gPSB7fSkgOiAoZ2xvYmFsW25hbWVdIHx8IHt9KVtQUk9UT1RZUEVdO1xuICB2YXIgZXhwb3J0cyA9IElTX0dMT0JBTCA/IGNvcmUgOiBjb3JlW25hbWVdIHx8IChjb3JlW25hbWVdID0ge30pO1xuICB2YXIgZXhwUHJvdG8gPSBleHBvcnRzW1BST1RPVFlQRV0gfHwgKGV4cG9ydHNbUFJPVE9UWVBFXSA9IHt9KTtcbiAgdmFyIGtleSwgb3duLCBvdXQsIGV4cDtcbiAgaWYgKElTX0dMT0JBTCkgc291cmNlID0gbmFtZTtcbiAgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgLy8gY29udGFpbnMgaW4gbmF0aXZlXG4gICAgb3duID0gIUlTX0ZPUkNFRCAmJiB0YXJnZXQgJiYgdGFyZ2V0W2tleV0gIT09IHVuZGVmaW5lZDtcbiAgICAvLyBleHBvcnQgbmF0aXZlIG9yIHBhc3NlZFxuICAgIG91dCA9IChvd24gPyB0YXJnZXQgOiBzb3VyY2UpW2tleV07XG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICBleHAgPSBJU19CSU5EICYmIG93biA/IGN0eChvdXQsIGdsb2JhbCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDtcbiAgICAvLyBleHRlbmQgZ2xvYmFsXG4gICAgaWYgKHRhcmdldCkgcmVkZWZpbmUodGFyZ2V0LCBrZXksIG91dCwgdHlwZSAmICRleHBvcnQuVSk7XG4gICAgLy8gZXhwb3J0XG4gICAgaWYgKGV4cG9ydHNba2V5XSAhPSBvdXQpIGhpZGUoZXhwb3J0cywga2V5LCBleHApO1xuICAgIGlmIChJU19QUk9UTyAmJiBleHBQcm90b1trZXldICE9IG91dCkgZXhwUHJvdG9ba2V5XSA9IG91dDtcbiAgfVxufTtcbmdsb2JhbC5jb3JlID0gY29yZTtcbi8vIHR5cGUgYml0bWFwXG4kZXhwb3J0LkYgPSAxOyAgIC8vIGZvcmNlZFxuJGV4cG9ydC5HID0gMjsgICAvLyBnbG9iYWxcbiRleHBvcnQuUyA9IDQ7ICAgLy8gc3RhdGljXG4kZXhwb3J0LlAgPSA4OyAgIC8vIHByb3RvXG4kZXhwb3J0LkIgPSAxNjsgIC8vIGJpbmRcbiRleHBvcnQuVyA9IDMyOyAgLy8gd3JhcFxuJGV4cG9ydC5VID0gNjQ7ICAvLyBzYWZlXG4kZXhwb3J0LlIgPSAxMjg7IC8vIHJlYWwgcHJvdG8gbWV0aG9kIGZvciBgbGlicmFyeWBcbm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gISFleGVjKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJpdG1hcCwgdmFsdWUpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlOiAhKGJpdG1hcCAmIDEpLFxuICAgIGNvbmZpZ3VyYWJsZTogIShiaXRtYXAgJiAyKSxcbiAgICB3cml0YWJsZTogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfTtcbn07XG4iLCIvLyA3LjEuMTUgVG9MZW5ndGhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPiAwID8gbWluKHRvSW50ZWdlcihpdCksIDB4MWZmZmZmZmZmZmZmZmYpIDogMDsgLy8gcG93KDIsIDUzKSAtIDEgPT0gOTAwNzE5OTI1NDc0MDk5MVxufTtcbiIsIi8vIDcuMS40IFRvSW50ZWdlclxudmFyIGNlaWwgPSBNYXRoLmNlaWw7XG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGlzTmFOKGl0ID0gK2l0KSA/IDAgOiAoaXQgPiAwID8gZmxvb3IgOiBjZWlsKShpdCk7XG59O1xuIiwidmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGludm9rZSA9IHJlcXVpcmUoJy4vX2ludm9rZScpO1xudmFyIGh0bWwgPSByZXF1aXJlKCcuL19odG1sJyk7XG52YXIgY2VsID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBzZXRUYXNrID0gZ2xvYmFsLnNldEltbWVkaWF0ZTtcbnZhciBjbGVhclRhc2sgPSBnbG9iYWwuY2xlYXJJbW1lZGlhdGU7XG52YXIgTWVzc2FnZUNoYW5uZWwgPSBnbG9iYWwuTWVzc2FnZUNoYW5uZWw7XG52YXIgRGlzcGF0Y2ggPSBnbG9iYWwuRGlzcGF0Y2g7XG52YXIgY291bnRlciA9IDA7XG52YXIgcXVldWUgPSB7fTtcbnZhciBPTlJFQURZU1RBVEVDSEFOR0UgPSAnb25yZWFkeXN0YXRlY2hhbmdlJztcbnZhciBkZWZlciwgY2hhbm5lbCwgcG9ydDtcbnZhciBydW4gPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBpZCA9ICt0aGlzO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG4gIGlmIChxdWV1ZS5oYXNPd25Qcm9wZXJ0eShpZCkpIHtcbiAgICB2YXIgZm4gPSBxdWV1ZVtpZF07XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgICBmbigpO1xuICB9XG59O1xudmFyIGxpc3RlbmVyID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gIHJ1bi5jYWxsKGV2ZW50LmRhdGEpO1xufTtcbi8vIE5vZGUuanMgMC45KyAmIElFMTArIGhhcyBzZXRJbW1lZGlhdGUsIG90aGVyd2lzZTpcbmlmICghc2V0VGFzayB8fCAhY2xlYXJUYXNrKSB7XG4gIHNldFRhc2sgPSBmdW5jdGlvbiBzZXRJbW1lZGlhdGUoZm4pIHtcbiAgICB2YXIgYXJncyA9IFtdO1xuICAgIHZhciBpID0gMTtcbiAgICB3aGlsZSAoYXJndW1lbnRzLmxlbmd0aCA+IGkpIGFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgcXVldWVbKytjb3VudGVyXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgICAgaW52b2tlKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbiksIGFyZ3MpO1xuICAgIH07XG4gICAgZGVmZXIoY291bnRlcik7XG4gICAgcmV0dXJuIGNvdW50ZXI7XG4gIH07XG4gIGNsZWFyVGFzayA9IGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGlkKSB7XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgfTtcbiAgLy8gTm9kZS5qcyAwLjgtXG4gIGlmIChyZXF1aXJlKCcuL19jb2YnKShwcm9jZXNzKSA9PSAncHJvY2VzcycpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhjdHgocnVuLCBpZCwgMSkpO1xuICAgIH07XG4gIC8vIFNwaGVyZSAoSlMgZ2FtZSBlbmdpbmUpIERpc3BhdGNoIEFQSVxuICB9IGVsc2UgaWYgKERpc3BhdGNoICYmIERpc3BhdGNoLm5vdykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBEaXNwYXRjaC5ub3coY3R4KHJ1biwgaWQsIDEpKTtcbiAgICB9O1xuICAvLyBCcm93c2VycyB3aXRoIE1lc3NhZ2VDaGFubmVsLCBpbmNsdWRlcyBXZWJXb3JrZXJzXG4gIH0gZWxzZSBpZiAoTWVzc2FnZUNoYW5uZWwpIHtcbiAgICBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgcG9ydCA9IGNoYW5uZWwucG9ydDI7XG4gICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBsaXN0ZW5lcjtcbiAgICBkZWZlciA9IGN0eChwb3J0LnBvc3RNZXNzYWdlLCBwb3J0LCAxKTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBwb3N0TWVzc2FnZSwgc2tpcCBXZWJXb3JrZXJzXG4gIC8vIElFOCBoYXMgcG9zdE1lc3NhZ2UsIGJ1dCBpdCdzIHN5bmMgJiB0eXBlb2YgaXRzIHBvc3RNZXNzYWdlIGlzICdvYmplY3QnXG4gIH0gZWxzZSBpZiAoZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIgJiYgdHlwZW9mIHBvc3RNZXNzYWdlID09ICdmdW5jdGlvbicgJiYgIWdsb2JhbC5pbXBvcnRTY3JpcHRzKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShpZCArICcnLCAnKicpO1xuICAgIH07XG4gICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBsaXN0ZW5lciwgZmFsc2UpO1xuICAvLyBJRTgtXG4gIH0gZWxzZSBpZiAoT05SRUFEWVNUQVRFQ0hBTkdFIGluIGNlbCgnc2NyaXB0JykpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgaHRtbC5hcHBlbmRDaGlsZChjZWwoJ3NjcmlwdCcpKVtPTlJFQURZU1RBVEVDSEFOR0VdID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBodG1sLnJlbW92ZUNoaWxkKHRoaXMpO1xuICAgICAgICBydW4uY2FsbChpZCk7XG4gICAgICB9O1xuICAgIH07XG4gIC8vIFJlc3Qgb2xkIGJyb3dzZXJzXG4gIH0gZWxzZSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHNldFRpbWVvdXQoY3R4KHJ1biwgaWQsIDEpLCAwKTtcbiAgICB9O1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBzZXRUYXNrLFxuICBjbGVhcjogY2xlYXJUYXNrXG59O1xuIiwidmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG5tb2R1bGUuZXhwb3J0cyA9IGRvY3VtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDI1LjQuMS41IE5ld1Byb21pc2VDYXBhYmlsaXR5KEMpXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xuXG5mdW5jdGlvbiBQcm9taXNlQ2FwYWJpbGl0eShDKSB7XG4gIHZhciByZXNvbHZlLCByZWplY3Q7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBDKGZ1bmN0aW9uICgkJHJlc29sdmUsICQkcmVqZWN0KSB7XG4gICAgaWYgKHJlc29sdmUgIT09IHVuZGVmaW5lZCB8fCByZWplY3QgIT09IHVuZGVmaW5lZCkgdGhyb3cgVHlwZUVycm9yKCdCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvcicpO1xuICAgIHJlc29sdmUgPSAkJHJlc29sdmU7XG4gICAgcmVqZWN0ID0gJCRyZWplY3Q7XG4gIH0pO1xuICB0aGlzLnJlc29sdmUgPSBhRnVuY3Rpb24ocmVzb2x2ZSk7XG4gIHRoaXMucmVqZWN0ID0gYUZ1bmN0aW9uKHJlamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiAoQykge1xuICByZXR1cm4gbmV3IFByb21pc2VDYXBhYmlsaXR5KEMpO1xufTtcbiIsIi8vIDcuMi4xIFJlcXVpcmVPYmplY3RDb2VyY2libGUoYXJndW1lbnQpXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgPT0gdW5kZWZpbmVkKSB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgXCIgKyBpdCk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIvLyBJRSA4LSBkb24ndCBlbnVtIGJ1ZyBrZXlzXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgJ2NvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZidcbikuc3BsaXQoJywnKTtcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCIoZnVuY3Rpb24gKGZhY3RvcnkpIHtcblx0dHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gKG1vZHVsZVsnZXhwb3J0cyddID0gZmFjdG9yeSgpKSA6XG5cdFx0dHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmVbJ2FtZCddID8gZGVmaW5lKGZhY3RvcnkoKSkgOlxuXHRcdFx0KHdpbmRvd1snc3R5bGlzUnVsZVNoZWV0J10gPSBmYWN0b3J5KCkpXG59KGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCdcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluc2VydFJ1bGUpIHtcblx0XHR2YXIgZGVsaW1pdGVyID0gJy8qfCovJ1xuXHRcdHZhciBuZWVkbGUgPSBkZWxpbWl0ZXIrJ30nXG5cblx0XHRmdW5jdGlvbiB0b1NoZWV0IChibG9jaykge1xuXHRcdFx0aWYgKGJsb2NrKVxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGluc2VydFJ1bGUoYmxvY2sgKyAnfScpXG5cdFx0XHRcdH0gY2F0Y2ggKGUpIHt9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZ1bmN0aW9uIHJ1bGVTaGVldCAoY29udGV4dCwgY29udGVudCwgc2VsZWN0b3JzLCBwYXJlbnRzLCBsaW5lLCBjb2x1bW4sIGxlbmd0aCwgbnMsIGRlcHRoLCBhdCkge1xuXHRcdFx0c3dpdGNoIChjb250ZXh0KSB7XG5cdFx0XHRcdC8vIHByb3BlcnR5XG5cdFx0XHRcdGNhc2UgMTpcblx0XHRcdFx0XHQvLyBAaW1wb3J0XG5cdFx0XHRcdFx0aWYgKGRlcHRoID09PSAwICYmIGNvbnRlbnQuY2hhckNvZGVBdCgwKSA9PT0gNjQpXG5cdFx0XHRcdFx0XHRyZXR1cm4gaW5zZXJ0UnVsZShjb250ZW50Kyc7JyksICcnXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gc2VsZWN0b3Jcblx0XHRcdFx0Y2FzZSAyOlxuXHRcdFx0XHRcdGlmIChucyA9PT0gMClcblx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgZGVsaW1pdGVyXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gYXQtcnVsZVxuXHRcdFx0XHRjYXNlIDM6XG5cdFx0XHRcdFx0c3dpdGNoIChucykge1xuXHRcdFx0XHRcdFx0Ly8gQGZvbnQtZmFjZSwgQHBhZ2Vcblx0XHRcdFx0XHRcdGNhc2UgMTAyOlxuXHRcdFx0XHRcdFx0Y2FzZSAxMTI6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBpbnNlcnRSdWxlKHNlbGVjdG9yc1swXStjb250ZW50KSwgJydcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgKGF0ID09PSAwID8gZGVsaW1pdGVyIDogJycpXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRjYXNlIC0yOlxuXHRcdFx0XHRcdGNvbnRlbnQuc3BsaXQobmVlZGxlKS5mb3JFYWNoKHRvU2hlZXQpXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59KSlcbiIsInZhciB1bml0bGVzc0tleXMgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxuICBib3JkZXJJbWFnZU91dHNldDogMSxcbiAgYm9yZGVySW1hZ2VTbGljZTogMSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogMSxcbiAgYm94RmxleDogMSxcbiAgYm94RmxleEdyb3VwOiAxLFxuICBib3hPcmRpbmFsR3JvdXA6IDEsXG4gIGNvbHVtbkNvdW50OiAxLFxuICBjb2x1bW5zOiAxLFxuICBmbGV4OiAxLFxuICBmbGV4R3JvdzogMSxcbiAgZmxleFBvc2l0aXZlOiAxLFxuICBmbGV4U2hyaW5rOiAxLFxuICBmbGV4TmVnYXRpdmU6IDEsXG4gIGZsZXhPcmRlcjogMSxcbiAgZ3JpZFJvdzogMSxcbiAgZ3JpZFJvd0VuZDogMSxcbiAgZ3JpZFJvd1NwYW46IDEsXG4gIGdyaWRSb3dTdGFydDogMSxcbiAgZ3JpZENvbHVtbjogMSxcbiAgZ3JpZENvbHVtbkVuZDogMSxcbiAgZ3JpZENvbHVtblNwYW46IDEsXG4gIGdyaWRDb2x1bW5TdGFydDogMSxcbiAgbXNHcmlkUm93OiAxLFxuICBtc0dyaWRSb3dTcGFuOiAxLFxuICBtc0dyaWRDb2x1bW46IDEsXG4gIG1zR3JpZENvbHVtblNwYW46IDEsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gIGxpbmVIZWlnaHQ6IDEsXG4gIG9wYWNpdHk6IDEsXG4gIG9yZGVyOiAxLFxuICBvcnBoYW5zOiAxLFxuICB0YWJTaXplOiAxLFxuICB3aWRvd3M6IDEsXG4gIHpJbmRleDogMSxcbiAgem9vbTogMSxcbiAgV2Via2l0TGluZUNsYW1wOiAxLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiAxLFxuICBmbG9vZE9wYWNpdHk6IDEsXG4gIHN0b3BPcGFjaXR5OiAxLFxuICBzdHJva2VEYXNoYXJyYXk6IDEsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IDEsXG4gIHN0cm9rZU1pdGVybGltaXQ6IDEsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIHN0cm9rZVdpZHRoOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCB1bml0bGVzc0tleXM7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJnc1thcmdJbmRleCsrXTsgfSlcbiAgICAgICk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9pbXBsZW1lbnRhdGlvbiA9IHJlcXVpcmUoJy4vaW1wbGVtZW50YXRpb24nKTtcblxudmFyIF9pbXBsZW1lbnRhdGlvbjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pbXBsZW1lbnRhdGlvbik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVDb250ZXh0IHx8IF9pbXBsZW1lbnRhdGlvbjIuZGVmYXVsdDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gICAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gICAgY29udGV4dFR5cGVzOiB0cnVlLFxuICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICAgIG1peGluczogdHJ1ZSxcbiAgICBwcm9wVHlwZXM6IHRydWUsXG4gICAgdHlwZTogdHJ1ZVxufTtcblxudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gICAgbmFtZTogdHJ1ZSxcbiAgICBsZW5ndGg6IHRydWUsXG4gICAgcHJvdG90eXBlOiB0cnVlLFxuICAgIGNhbGxlcjogdHJ1ZSxcbiAgICBjYWxsZWU6IHRydWUsXG4gICAgYXJndW1lbnRzOiB0cnVlLFxuICAgIGFyaXR5OiB0cnVlXG59O1xuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZiAmJiBnZXRQcm90b3R5cGVPZihPYmplY3QpO1xuXG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gICAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7IC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG5cbiAgICAgICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG4gICAgICAgICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICAgICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgIGlmICghUkVBQ1RfU1RBVElDU1trZXldICYmICFLTk9XTl9TVEFUSUNTW2tleV0gJiYgKCFibGFja2xpc3QgfHwgIWJsYWNrbGlzdFtrZXldKSkge1xuICAgICAgICAgICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcbiAgICAgICAgICAgICAgICB0cnkgeyAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiZnVuY3Rpb24gbWVtb2l6ZShmbikge1xuICB2YXIgY2FjaGUgPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGVbYXJnXSA9PT0gdW5kZWZpbmVkKSBjYWNoZVthcmddID0gZm4oYXJnKTtcbiAgICByZXR1cm4gY2FjaGVbYXJnXTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZTtcbiIsImltcG9ydCBtZW1vaXplIGZyb20gJ0BlbW90aW9uL21lbW9pemUnO1xuXG52YXIgcmVhY3RQcm9wc1JlZ2V4ID0gL14oKGNoaWxkcmVufGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfGtleXxyZWZ8YXV0b0ZvY3VzfGRlZmF1bHRWYWx1ZXxkZWZhdWx0Q2hlY2tlZHxpbm5lckhUTUx8c3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nfHN1cHByZXNzSHlkcmF0aW9uV2FybmluZ3x2YWx1ZUxpbmt8YWNjZXB0fGFjY2VwdENoYXJzZXR8YWNjZXNzS2V5fGFjdGlvbnxhbGxvd3xhbGxvd1VzZXJNZWRpYXxhbGxvd1BheW1lbnRSZXF1ZXN0fGFsbG93RnVsbFNjcmVlbnxhbGxvd1RyYW5zcGFyZW5jeXxhbHR8YXN5bmN8YXV0b0NvbXBsZXRlfGF1dG9QbGF5fGNhcHR1cmV8Y2VsbFBhZGRpbmd8Y2VsbFNwYWNpbmd8Y2hhbGxlbmdlfGNoYXJTZXR8Y2hlY2tlZHxjaXRlfGNsYXNzSUR8Y2xhc3NOYW1lfGNvbHN8Y29sU3Bhbnxjb250ZW50fGNvbnRlbnRFZGl0YWJsZXxjb250ZXh0TWVudXxjb250cm9sc3xjb250cm9sc0xpc3R8Y29vcmRzfGNyb3NzT3JpZ2lufGRhdGF8ZGF0ZVRpbWV8ZGVmYXVsdHxkZWZlcnxkaXJ8ZGlzYWJsZWR8ZG93bmxvYWR8ZHJhZ2dhYmxlfGVuY1R5cGV8Zm9ybXxmb3JtQWN0aW9ufGZvcm1FbmNUeXBlfGZvcm1NZXRob2R8Zm9ybU5vVmFsaWRhdGV8Zm9ybVRhcmdldHxmcmFtZUJvcmRlcnxoZWFkZXJzfGhlaWdodHxoaWRkZW58aGlnaHxocmVmfGhyZWZMYW5nfGh0bWxGb3J8aHR0cEVxdWl2fGlkfGlucHV0TW9kZXxpbnRlZ3JpdHl8aXN8a2V5UGFyYW1zfGtleVR5cGV8a2luZHxsYWJlbHxsYW5nfGxpc3R8bG9vcHxsb3d8bWFyZ2luSGVpZ2h0fG1hcmdpbldpZHRofG1heHxtYXhMZW5ndGh8bWVkaWF8bWVkaWFHcm91cHxtZXRob2R8bWlufG1pbkxlbmd0aHxtdWx0aXBsZXxtdXRlZHxuYW1lfG5vbmNlfG5vVmFsaWRhdGV8b3BlbnxvcHRpbXVtfHBhdHRlcm58cGxhY2Vob2xkZXJ8cGxheXNJbmxpbmV8cG9zdGVyfHByZWxvYWR8cHJvZmlsZXxyYWRpb0dyb3VwfHJlYWRPbmx5fHJlZmVycmVyUG9saWN5fHJlbHxyZXF1aXJlZHxyZXZlcnNlZHxyb2xlfHJvd3N8cm93U3BhbnxzYW5kYm94fHNjb3BlfHNjb3BlZHxzY3JvbGxpbmd8c2VhbWxlc3N8c2VsZWN0ZWR8c2hhcGV8c2l6ZXxzaXplc3xzbG90fHNwYW58c3BlbGxDaGVja3xzcmN8c3JjRG9jfHNyY0xhbmd8c3JjU2V0fHN0YXJ0fHN0ZXB8c3R5bGV8c3VtbWFyeXx0YWJJbmRleHx0YXJnZXR8dGl0bGV8dHlwZXx1c2VNYXB8dmFsdWV8d2lkdGh8d21vZGV8d3JhcHxhYm91dHxkYXRhdHlwZXxpbmxpc3R8cHJlZml4fHByb3BlcnR5fHJlc291cmNlfHR5cGVvZnx2b2NhYnxhdXRvQ2FwaXRhbGl6ZXxhdXRvQ29ycmVjdHxhdXRvU2F2ZXxjb2xvcnxpdGVtUHJvcHxpdGVtU2NvcGV8aXRlbVR5cGV8aXRlbUlEfGl0ZW1SZWZ8cmVzdWx0c3xzZWN1cml0eXx1bnNlbGVjdGFibGV8YWNjZW50SGVpZ2h0fGFjY3VtdWxhdGV8YWRkaXRpdmV8YWxpZ25tZW50QmFzZWxpbmV8YWxsb3dSZW9yZGVyfGFscGhhYmV0aWN8YW1wbGl0dWRlfGFyYWJpY0Zvcm18YXNjZW50fGF0dHJpYnV0ZU5hbWV8YXR0cmlidXRlVHlwZXxhdXRvUmV2ZXJzZXxhemltdXRofGJhc2VGcmVxdWVuY3l8YmFzZWxpbmVTaGlmdHxiYXNlUHJvZmlsZXxiYm94fGJlZ2lufGJpYXN8Ynl8Y2FsY01vZGV8Y2FwSGVpZ2h0fGNsaXB8Y2xpcFBhdGhVbml0c3xjbGlwUGF0aHxjbGlwUnVsZXxjb2xvckludGVycG9sYXRpb258Y29sb3JJbnRlcnBvbGF0aW9uRmlsdGVyc3xjb2xvclByb2ZpbGV8Y29sb3JSZW5kZXJpbmd8Y29udGVudFNjcmlwdFR5cGV8Y29udGVudFN0eWxlVHlwZXxjdXJzb3J8Y3h8Y3l8ZHxkZWNlbGVyYXRlfGRlc2NlbnR8ZGlmZnVzZUNvbnN0YW50fGRpcmVjdGlvbnxkaXNwbGF5fGRpdmlzb3J8ZG9taW5hbnRCYXNlbGluZXxkdXJ8ZHh8ZHl8ZWRnZU1vZGV8ZWxldmF0aW9ufGVuYWJsZUJhY2tncm91bmR8ZW5kfGV4cG9uZW50fGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWR8ZmlsbHxmaWxsT3BhY2l0eXxmaWxsUnVsZXxmaWx0ZXJ8ZmlsdGVyUmVzfGZpbHRlclVuaXRzfGZsb29kQ29sb3J8Zmxvb2RPcGFjaXR5fGZvY3VzYWJsZXxmb250RmFtaWx5fGZvbnRTaXplfGZvbnRTaXplQWRqdXN0fGZvbnRTdHJldGNofGZvbnRTdHlsZXxmb250VmFyaWFudHxmb250V2VpZ2h0fGZvcm1hdHxmcm9tfGZyfGZ4fGZ5fGcxfGcyfGdseXBoTmFtZXxnbHlwaE9yaWVudGF0aW9uSG9yaXpvbnRhbHxnbHlwaE9yaWVudGF0aW9uVmVydGljYWx8Z2x5cGhSZWZ8Z3JhZGllbnRUcmFuc2Zvcm18Z3JhZGllbnRVbml0c3xoYW5naW5nfGhvcml6QWR2WHxob3Jpek9yaWdpblh8aWRlb2dyYXBoaWN8aW1hZ2VSZW5kZXJpbmd8aW58aW4yfGludGVyY2VwdHxrfGsxfGsyfGszfGs0fGtlcm5lbE1hdHJpeHxrZXJuZWxVbml0TGVuZ3RofGtlcm5pbmd8a2V5UG9pbnRzfGtleVNwbGluZXN8a2V5VGltZXN8bGVuZ3RoQWRqdXN0fGxldHRlclNwYWNpbmd8bGlnaHRpbmdDb2xvcnxsaW1pdGluZ0NvbmVBbmdsZXxsb2NhbHxtYXJrZXJFbmR8bWFya2VyTWlkfG1hcmtlclN0YXJ0fG1hcmtlckhlaWdodHxtYXJrZXJVbml0c3xtYXJrZXJXaWR0aHxtYXNrfG1hc2tDb250ZW50VW5pdHN8bWFza1VuaXRzfG1hdGhlbWF0aWNhbHxtb2RlfG51bU9jdGF2ZXN8b2Zmc2V0fG9wYWNpdHl8b3BlcmF0b3J8b3JkZXJ8b3JpZW50fG9yaWVudGF0aW9ufG9yaWdpbnxvdmVyZmxvd3xvdmVybGluZVBvc2l0aW9ufG92ZXJsaW5lVGhpY2tuZXNzfHBhbm9zZTF8cGFpbnRPcmRlcnxwYXRoTGVuZ3RofHBhdHRlcm5Db250ZW50VW5pdHN8cGF0dGVyblRyYW5zZm9ybXxwYXR0ZXJuVW5pdHN8cG9pbnRlckV2ZW50c3xwb2ludHN8cG9pbnRzQXRYfHBvaW50c0F0WXxwb2ludHNBdFp8cHJlc2VydmVBbHBoYXxwcmVzZXJ2ZUFzcGVjdFJhdGlvfHByaW1pdGl2ZVVuaXRzfHJ8cmFkaXVzfHJlZlh8cmVmWXxyZW5kZXJpbmdJbnRlbnR8cmVwZWF0Q291bnR8cmVwZWF0RHVyfHJlcXVpcmVkRXh0ZW5zaW9uc3xyZXF1aXJlZEZlYXR1cmVzfHJlc3RhcnR8cmVzdWx0fHJvdGF0ZXxyeHxyeXxzY2FsZXxzZWVkfHNoYXBlUmVuZGVyaW5nfHNsb3BlfHNwYWNpbmd8c3BlY3VsYXJDb25zdGFudHxzcGVjdWxhckV4cG9uZW50fHNwZWVkfHNwcmVhZE1ldGhvZHxzdGFydE9mZnNldHxzdGREZXZpYXRpb258c3RlbWh8c3RlbXZ8c3RpdGNoVGlsZXN8c3RvcENvbG9yfHN0b3BPcGFjaXR5fHN0cmlrZXRocm91Z2hQb3NpdGlvbnxzdHJpa2V0aHJvdWdoVGhpY2tuZXNzfHN0cmluZ3xzdHJva2V8c3Ryb2tlRGFzaGFycmF5fHN0cm9rZURhc2hvZmZzZXR8c3Ryb2tlTGluZWNhcHxzdHJva2VMaW5lam9pbnxzdHJva2VNaXRlcmxpbWl0fHN0cm9rZU9wYWNpdHl8c3Ryb2tlV2lkdGh8c3VyZmFjZVNjYWxlfHN5c3RlbUxhbmd1YWdlfHRhYmxlVmFsdWVzfHRhcmdldFh8dGFyZ2V0WXx0ZXh0QW5jaG9yfHRleHREZWNvcmF0aW9ufHRleHRSZW5kZXJpbmd8dGV4dExlbmd0aHx0b3x0cmFuc2Zvcm18dTF8dTJ8dW5kZXJsaW5lUG9zaXRpb258dW5kZXJsaW5lVGhpY2tuZXNzfHVuaWNvZGV8dW5pY29kZUJpZGl8dW5pY29kZVJhbmdlfHVuaXRzUGVyRW18dkFscGhhYmV0aWN8dkhhbmdpbmd8dklkZW9ncmFwaGljfHZNYXRoZW1hdGljYWx8dmFsdWVzfHZlY3RvckVmZmVjdHx2ZXJzaW9ufHZlcnRBZHZZfHZlcnRPcmlnaW5YfHZlcnRPcmlnaW5ZfHZpZXdCb3h8dmlld1RhcmdldHx2aXNpYmlsaXR5fHdpZHRoc3x3b3JkU3BhY2luZ3x3cml0aW5nTW9kZXx4fHhIZWlnaHR8eDF8eDJ8eENoYW5uZWxTZWxlY3Rvcnx4bGlua0FjdHVhdGV8eGxpbmtBcmNyb2xlfHhsaW5rSHJlZnx4bGlua1JvbGV8eGxpbmtTaG93fHhsaW5rVGl0bGV8eGxpbmtUeXBlfHhtbEJhc2V8eG1sbnN8eG1sbnNYbGlua3x4bWxMYW5nfHhtbFNwYWNlfHl8eTF8eTJ8eUNoYW5uZWxTZWxlY3Rvcnx6fHpvb21BbmRQYW58Zm9yfGNsYXNzfGF1dG9mb2N1cyl8KChbRGRdW0FhXVtUdF1bQWFdfFtBYV1bUnJdW0lpXVtBYV18eCktLiopKSQvOyAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViZmVlNjhhNGNkN2U2MDA5ZWY2MWQyM1xuXG52YXIgaW5kZXggPSBtZW1vaXplKGZ1bmN0aW9uIChwcm9wKSB7XG4gIHJldHVybiByZWFjdFByb3BzUmVnZXgudGVzdChwcm9wKSB8fCBwcm9wLmNoYXJDb2RlQXQoMCkgPT09IDExMVxuICAvKiBvICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgxKSA9PT0gMTEwXG4gIC8qIG4gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDIpIDwgOTE7XG59XG4vKiBaKzEgKi9cbik7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXQ7XG52YXIgbWljcm90YXNrID0gcmVxdWlyZSgnLi9fbWljcm90YXNrJykoKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcbnZhciBwZXJmb3JtID0gcmVxdWlyZSgnLi9fcGVyZm9ybScpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcbnZhciBwcm9taXNlUmVzb2x2ZSA9IHJlcXVpcmUoJy4vX3Byb21pc2UtcmVzb2x2ZScpO1xudmFyIFBST01JU0UgPSAnUHJvbWlzZSc7XG52YXIgVHlwZUVycm9yID0gZ2xvYmFsLlR5cGVFcnJvcjtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgdmVyc2lvbnMgPSBwcm9jZXNzICYmIHByb2Nlc3MudmVyc2lvbnM7XG52YXIgdjggPSB2ZXJzaW9ucyAmJiB2ZXJzaW9ucy52OCB8fCAnJztcbnZhciAkUHJvbWlzZSA9IGdsb2JhbFtQUk9NSVNFXTtcbnZhciBpc05vZGUgPSBjbGFzc29mKHByb2Nlc3MpID09ICdwcm9jZXNzJztcbnZhciBlbXB0eSA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbnZhciBJbnRlcm5hbCwgbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5LCBPd25Qcm9taXNlQ2FwYWJpbGl0eSwgV3JhcHBlcjtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmY7XG5cbnZhciBVU0VfTkFUSVZFID0gISFmdW5jdGlvbiAoKSB7XG4gIHRyeSB7XG4gICAgLy8gY29ycmVjdCBzdWJjbGFzc2luZyB3aXRoIEBAc3BlY2llcyBzdXBwb3J0XG4gICAgdmFyIHByb21pc2UgPSAkUHJvbWlzZS5yZXNvbHZlKDEpO1xuICAgIHZhciBGYWtlUHJvbWlzZSA9IChwcm9taXNlLmNvbnN0cnVjdG9yID0ge30pW3JlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyldID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgICAgIGV4ZWMoZW1wdHksIGVtcHR5KTtcbiAgICB9O1xuICAgIC8vIHVuaGFuZGxlZCByZWplY3Rpb25zIHRyYWNraW5nIHN1cHBvcnQsIE5vZGVKUyBQcm9taXNlIHdpdGhvdXQgaXQgZmFpbHMgQEBzcGVjaWVzIHRlc3RcbiAgICByZXR1cm4gKGlzTm9kZSB8fCB0eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50ID09ICdmdW5jdGlvbicpXG4gICAgICAmJiBwcm9taXNlLnRoZW4oZW1wdHkpIGluc3RhbmNlb2YgRmFrZVByb21pc2VcbiAgICAgIC8vIHY4IDYuNiAoTm9kZSAxMCBhbmQgQ2hyb21lIDY2KSBoYXZlIGEgYnVnIHdpdGggcmVzb2x2aW5nIGN1c3RvbSB0aGVuYWJsZXNcbiAgICAgIC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTgzMDU2NVxuICAgICAgLy8gd2UgY2FuJ3QgZGV0ZWN0IGl0IHN5bmNocm9ub3VzbHksIHNvIGp1c3QgY2hlY2sgdmVyc2lvbnNcbiAgICAgICYmIHY4LmluZGV4T2YoJzYuNicpICE9PSAwXG4gICAgICAmJiB1c2VyQWdlbnQuaW5kZXhPZignQ2hyb21lLzY2JykgPT09IC0xO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn0oKTtcblxuLy8gaGVscGVyc1xudmFyIGlzVGhlbmFibGUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIHRoZW47XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgdHlwZW9mICh0aGVuID0gaXQudGhlbikgPT0gJ2Z1bmN0aW9uJyA/IHRoZW4gOiBmYWxzZTtcbn07XG52YXIgbm90aWZ5ID0gZnVuY3Rpb24gKHByb21pc2UsIGlzUmVqZWN0KSB7XG4gIGlmIChwcm9taXNlLl9uKSByZXR1cm47XG4gIHByb21pc2UuX24gPSB0cnVlO1xuICB2YXIgY2hhaW4gPSBwcm9taXNlLl9jO1xuICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIG9rID0gcHJvbWlzZS5fcyA9PSAxO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgcnVuID0gZnVuY3Rpb24gKHJlYWN0aW9uKSB7XG4gICAgICB2YXIgaGFuZGxlciA9IG9rID8gcmVhY3Rpb24ub2sgOiByZWFjdGlvbi5mYWlsO1xuICAgICAgdmFyIHJlc29sdmUgPSByZWFjdGlvbi5yZXNvbHZlO1xuICAgICAgdmFyIHJlamVjdCA9IHJlYWN0aW9uLnJlamVjdDtcbiAgICAgIHZhciBkb21haW4gPSByZWFjdGlvbi5kb21haW47XG4gICAgICB2YXIgcmVzdWx0LCB0aGVuLCBleGl0ZWQ7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoaGFuZGxlcikge1xuICAgICAgICAgIGlmICghb2spIHtcbiAgICAgICAgICAgIGlmIChwcm9taXNlLl9oID09IDIpIG9uSGFuZGxlVW5oYW5kbGVkKHByb21pc2UpO1xuICAgICAgICAgICAgcHJvbWlzZS5faCA9IDE7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChoYW5kbGVyID09PSB0cnVlKSByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChkb21haW4pIGRvbWFpbi5lbnRlcigpO1xuICAgICAgICAgICAgcmVzdWx0ID0gaGFuZGxlcih2YWx1ZSk7IC8vIG1heSB0aHJvd1xuICAgICAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgICAgICBkb21haW4uZXhpdCgpO1xuICAgICAgICAgICAgICBleGl0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocmVzdWx0ID09PSByZWFjdGlvbi5wcm9taXNlKSB7XG4gICAgICAgICAgICByZWplY3QoVHlwZUVycm9yKCdQcm9taXNlLWNoYWluIGN5Y2xlJykpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGhlbiA9IGlzVGhlbmFibGUocmVzdWx0KSkge1xuICAgICAgICAgICAgdGhlbi5jYWxsKHJlc3VsdCwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9IGVsc2UgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9IGVsc2UgcmVqZWN0KHZhbHVlKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGRvbWFpbiAmJiAhZXhpdGVkKSBkb21haW4uZXhpdCgpO1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB3aGlsZSAoY2hhaW4ubGVuZ3RoID4gaSkgcnVuKGNoYWluW2krK10pOyAvLyB2YXJpYWJsZSBsZW5ndGggLSBjYW4ndCB1c2UgZm9yRWFjaFxuICAgIHByb21pc2UuX2MgPSBbXTtcbiAgICBwcm9taXNlLl9uID0gZmFsc2U7XG4gICAgaWYgKGlzUmVqZWN0ICYmICFwcm9taXNlLl9oKSBvblVuaGFuZGxlZChwcm9taXNlKTtcbiAgfSk7XG59O1xudmFyIG9uVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIHVuaGFuZGxlZCA9IGlzVW5oYW5kbGVkKHByb21pc2UpO1xuICAgIHZhciByZXN1bHQsIGhhbmRsZXIsIGNvbnNvbGU7XG4gICAgaWYgKHVuaGFuZGxlZCkge1xuICAgICAgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChpc05vZGUpIHtcbiAgICAgICAgICBwcm9jZXNzLmVtaXQoJ3VuaGFuZGxlZFJlamVjdGlvbicsIHZhbHVlLCBwcm9taXNlKTtcbiAgICAgICAgfSBlbHNlIGlmIChoYW5kbGVyID0gZ2xvYmFsLm9udW5oYW5kbGVkcmVqZWN0aW9uKSB7XG4gICAgICAgICAgaGFuZGxlcih7IHByb21pc2U6IHByb21pc2UsIHJlYXNvbjogdmFsdWUgfSk7XG4gICAgICAgIH0gZWxzZSBpZiAoKGNvbnNvbGUgPSBnbG9iYWwuY29uc29sZSkgJiYgY29uc29sZS5lcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbicsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICAvLyBCcm93c2VycyBzaG91bGQgbm90IHRyaWdnZXIgYHJlamVjdGlvbkhhbmRsZWRgIGV2ZW50IGlmIGl0IHdhcyBoYW5kbGVkIGhlcmUsIE5vZGVKUyAtIHNob3VsZFxuICAgICAgcHJvbWlzZS5faCA9IGlzTm9kZSB8fCBpc1VuaGFuZGxlZChwcm9taXNlKSA/IDIgOiAxO1xuICAgIH0gcHJvbWlzZS5fYSA9IHVuZGVmaW5lZDtcbiAgICBpZiAodW5oYW5kbGVkICYmIHJlc3VsdC5lKSB0aHJvdyByZXN1bHQudjtcbiAgfSk7XG59O1xudmFyIGlzVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgcmV0dXJuIHByb21pc2UuX2ggIT09IDEgJiYgKHByb21pc2UuX2EgfHwgcHJvbWlzZS5fYykubGVuZ3RoID09PSAwO1xufTtcbnZhciBvbkhhbmRsZVVuaGFuZGxlZCA9IGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gIHRhc2suY2FsbChnbG9iYWwsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgaGFuZGxlcjtcbiAgICBpZiAoaXNOb2RlKSB7XG4gICAgICBwcm9jZXNzLmVtaXQoJ3JlamVjdGlvbkhhbmRsZWQnLCBwcm9taXNlKTtcbiAgICB9IGVsc2UgaWYgKGhhbmRsZXIgPSBnbG9iYWwub25yZWplY3Rpb25oYW5kbGVkKSB7XG4gICAgICBoYW5kbGVyKHsgcHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiBwcm9taXNlLl92IH0pO1xuICAgIH1cbiAgfSk7XG59O1xudmFyICRyZWplY3QgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgdmFyIHByb21pc2UgPSB0aGlzO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHByb21pc2UuX3YgPSB2YWx1ZTtcbiAgcHJvbWlzZS5fcyA9IDI7XG4gIGlmICghcHJvbWlzZS5fYSkgcHJvbWlzZS5fYSA9IHByb21pc2UuX2Muc2xpY2UoKTtcbiAgbm90aWZ5KHByb21pc2UsIHRydWUpO1xufTtcbnZhciAkcmVzb2x2ZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICB2YXIgcHJvbWlzZSA9IHRoaXM7XG4gIHZhciB0aGVuO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHRyeSB7XG4gICAgaWYgKHByb21pc2UgPT09IHZhbHVlKSB0aHJvdyBUeXBlRXJyb3IoXCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZlwiKTtcbiAgICBpZiAodGhlbiA9IGlzVGhlbmFibGUodmFsdWUpKSB7XG4gICAgICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgd3JhcHBlciA9IHsgX3c6IHByb21pc2UsIF9kOiBmYWxzZSB9OyAvLyB3cmFwXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdGhlbi5jYWxsKHZhbHVlLCBjdHgoJHJlc29sdmUsIHdyYXBwZXIsIDEpLCBjdHgoJHJlamVjdCwgd3JhcHBlciwgMSkpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgJHJlamVjdC5jYWxsKHdyYXBwZXIsIGUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICAgICAgcHJvbWlzZS5fcyA9IDE7XG4gICAgICBub3RpZnkocHJvbWlzZSwgZmFsc2UpO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgICRyZWplY3QuY2FsbCh7IF93OiBwcm9taXNlLCBfZDogZmFsc2UgfSwgZSk7IC8vIHdyYXBcbiAgfVxufTtcblxuLy8gY29uc3RydWN0b3IgcG9seWZpbGxcbmlmICghVVNFX05BVElWRSkge1xuICAvLyAyNS40LjMuMSBQcm9taXNlKGV4ZWN1dG9yKVxuICAkUHJvbWlzZSA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICBhbkluc3RhbmNlKHRoaXMsICRQcm9taXNlLCBQUk9NSVNFLCAnX2gnKTtcbiAgICBhRnVuY3Rpb24oZXhlY3V0b3IpO1xuICAgIEludGVybmFsLmNhbGwodGhpcyk7XG4gICAgdHJ5IHtcbiAgICAgIGV4ZWN1dG9yKGN0eCgkcmVzb2x2ZSwgdGhpcywgMSksIGN0eCgkcmVqZWN0LCB0aGlzLCAxKSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAkcmVqZWN0LmNhbGwodGhpcywgZXJyKTtcbiAgICB9XG4gIH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuICBJbnRlcm5hbCA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICB0aGlzLl9jID0gW107ICAgICAgICAgICAgIC8vIDwtIGF3YWl0aW5nIHJlYWN0aW9uc1xuICAgIHRoaXMuX2EgPSB1bmRlZmluZWQ7ICAgICAgLy8gPC0gY2hlY2tlZCBpbiBpc1VuaGFuZGxlZCByZWFjdGlvbnNcbiAgICB0aGlzLl9zID0gMDsgICAgICAgICAgICAgIC8vIDwtIHN0YXRlXG4gICAgdGhpcy5fZCA9IGZhbHNlOyAgICAgICAgICAvLyA8LSBkb25lXG4gICAgdGhpcy5fdiA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSB2YWx1ZVxuICAgIHRoaXMuX2ggPSAwOyAgICAgICAgICAgICAgLy8gPC0gcmVqZWN0aW9uIHN0YXRlLCAwIC0gZGVmYXVsdCwgMSAtIGhhbmRsZWQsIDIgLSB1bmhhbmRsZWRcbiAgICB0aGlzLl9uID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIG5vdGlmeVxuICB9O1xuICBJbnRlcm5hbC5wcm90b3R5cGUgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKSgkUHJvbWlzZS5wcm90b3R5cGUsIHtcbiAgICAvLyAyNS40LjUuMyBQcm9taXNlLnByb3RvdHlwZS50aGVuKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKVxuICAgIHRoZW46IGZ1bmN0aW9uIHRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgICAgIHZhciByZWFjdGlvbiA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCAkUHJvbWlzZSkpO1xuICAgICAgcmVhY3Rpb24ub2sgPSB0eXBlb2Ygb25GdWxmaWxsZWQgPT0gJ2Z1bmN0aW9uJyA/IG9uRnVsZmlsbGVkIDogdHJ1ZTtcbiAgICAgIHJlYWN0aW9uLmZhaWwgPSB0eXBlb2Ygb25SZWplY3RlZCA9PSAnZnVuY3Rpb24nICYmIG9uUmVqZWN0ZWQ7XG4gICAgICByZWFjdGlvbi5kb21haW4gPSBpc05vZGUgPyBwcm9jZXNzLmRvbWFpbiA6IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX2MucHVzaChyZWFjdGlvbik7XG4gICAgICBpZiAodGhpcy5fYSkgdGhpcy5fYS5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmICh0aGlzLl9zKSBub3RpZnkodGhpcywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHJlYWN0aW9uLnByb21pc2U7XG4gICAgfSxcbiAgICAvLyAyNS40LjUuMSBQcm9taXNlLnByb3RvdHlwZS5jYXRjaChvblJlamVjdGVkKVxuICAgICdjYXRjaCc6IGZ1bmN0aW9uIChvblJlamVjdGVkKSB7XG4gICAgICByZXR1cm4gdGhpcy50aGVuKHVuZGVmaW5lZCwgb25SZWplY3RlZCk7XG4gICAgfVxuICB9KTtcbiAgT3duUHJvbWlzZUNhcGFiaWxpdHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHByb21pc2UgPSBuZXcgSW50ZXJuYWwoKTtcbiAgICB0aGlzLnByb21pc2UgPSBwcm9taXNlO1xuICAgIHRoaXMucmVzb2x2ZSA9IGN0eCgkcmVzb2x2ZSwgcHJvbWlzZSwgMSk7XG4gICAgdGhpcy5yZWplY3QgPSBjdHgoJHJlamVjdCwgcHJvbWlzZSwgMSk7XG4gIH07XG4gIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmYgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uIChDKSB7XG4gICAgcmV0dXJuIEMgPT09ICRQcm9taXNlIHx8IEMgPT09IFdyYXBwZXJcbiAgICAgID8gbmV3IE93blByb21pc2VDYXBhYmlsaXR5KEMpXG4gICAgICA6IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgfTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgeyBQcm9taXNlOiAkUHJvbWlzZSB9KTtcbnJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJykoJFByb21pc2UsIFBST01JU0UpO1xucmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKShQUk9NSVNFKTtcbldyYXBwZXIgPSByZXF1aXJlKCcuL19jb3JlJylbUFJPTUlTRV07XG5cbi8vIHN0YXRpY3NcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjUgUHJvbWlzZS5yZWplY3QocilcbiAgcmVqZWN0OiBmdW5jdGlvbiByZWplY3Qocikge1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkodGhpcyk7XG4gICAgdmFyICQkcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgJCRyZWplY3Qocik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChMSUJSQVJZIHx8ICFVU0VfTkFUSVZFKSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNiBQcm9taXNlLnJlc29sdmUoeClcbiAgcmVzb2x2ZTogZnVuY3Rpb24gcmVzb2x2ZSh4KSB7XG4gICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKExJQlJBUlkgJiYgdGhpcyA9PT0gV3JhcHBlciA/ICRQcm9taXNlIDogdGhpcywgeCk7XG4gIH1cbn0pO1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKFVTRV9OQVRJVkUgJiYgcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKShmdW5jdGlvbiAoaXRlcikge1xuICAkUHJvbWlzZS5hbGwoaXRlcilbJ2NhdGNoJ10oZW1wdHkpO1xufSkpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC4xIFByb21pc2UuYWxsKGl0ZXJhYmxlKVxuICBhbGw6IGZ1bmN0aW9uIGFsbChpdGVyYWJsZSkge1xuICAgIHZhciBDID0gdGhpcztcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICAgIHZhciByZXNvbHZlID0gY2FwYWJpbGl0eS5yZXNvbHZlO1xuICAgIHZhciByZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdmFsdWVzID0gW107XG4gICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgdmFyIHJlbWFpbmluZyA9IDE7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIHZhciAkaW5kZXggPSBpbmRleCsrO1xuICAgICAgICB2YXIgYWxyZWFkeUNhbGxlZCA9IGZhbHNlO1xuICAgICAgICB2YWx1ZXMucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICByZW1haW5pbmcrKztcbiAgICAgICAgQy5yZXNvbHZlKHByb21pc2UpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKGFscmVhZHlDYWxsZWQpIHJldHVybjtcbiAgICAgICAgICBhbHJlYWR5Q2FsbGVkID0gdHJ1ZTtcbiAgICAgICAgICB2YWx1ZXNbJGluZGV4XSA9IHZhbHVlO1xuICAgICAgICAgIC0tcmVtYWluaW5nIHx8IHJlc29sdmUodmFsdWVzKTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZSkgcmVqZWN0KHJlc3VsdC52KTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9LFxuICAvLyAyNS40LjQuNCBQcm9taXNlLnJhY2UoaXRlcmFibGUpXG4gIHJhY2U6IGZ1bmN0aW9uIHJhY2UoaXRlcmFibGUpIHtcbiAgICB2YXIgQyA9IHRoaXM7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgICB2YXIgcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgdmFyIHJlc3VsdCA9IHBlcmZvcm0oZnVuY3Rpb24gKCkge1xuICAgICAgZm9yT2YoaXRlcmFibGUsIGZhbHNlLCBmdW5jdGlvbiAocHJvbWlzZSkge1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihjYXBhYmlsaXR5LnJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBpZiAocmVzdWx0LmUpIHJlamVjdChyZXN1bHQudik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2RpdicpLCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwiLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFMpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiBpdDtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAodHlwZW9mIChmbiA9IGl0LnZhbHVlT2YpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIENvbnN0cnVjdG9yLCBuYW1lLCBmb3JiaWRkZW5GaWVsZCkge1xuICBpZiAoIShpdCBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSB8fCAoZm9yYmlkZGVuRmllbGQgIT09IHVuZGVmaW5lZCAmJiBmb3JiaWRkZW5GaWVsZCBpbiBpdCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IobmFtZSArICc6IGluY29ycmVjdCBpbnZvY2F0aW9uIScpO1xuICB9IHJldHVybiBpdDtcbn07XG4iLCJ2YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xudmFyIEJSRUFLID0ge307XG52YXIgUkVUVVJOID0ge307XG52YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhYmxlLCBlbnRyaWVzLCBmbiwgdGhhdCwgSVRFUkFUT1IpIHtcbiAgdmFyIGl0ZXJGbiA9IElURVJBVE9SID8gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcmFibGU7IH0gOiBnZXRJdGVyRm4oaXRlcmFibGUpO1xuICB2YXIgZiA9IGN0eChmbiwgdGhhdCwgZW50cmllcyA/IDIgOiAxKTtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxlbmd0aCwgc3RlcCwgaXRlcmF0b3IsIHJlc3VsdDtcbiAgaWYgKHR5cGVvZiBpdGVyRm4gIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ZXJhYmxlICsgJyBpcyBub3QgaXRlcmFibGUhJyk7XG4gIC8vIGZhc3QgY2FzZSBmb3IgYXJyYXlzIHdpdGggZGVmYXVsdCBpdGVyYXRvclxuICBpZiAoaXNBcnJheUl0ZXIoaXRlckZuKSkgZm9yIChsZW5ndGggPSB0b0xlbmd0aChpdGVyYWJsZS5sZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgIHJlc3VsdCA9IGVudHJpZXMgPyBmKGFuT2JqZWN0KHN0ZXAgPSBpdGVyYWJsZVtpbmRleF0pWzBdLCBzdGVwWzFdKSA6IGYoaXRlcmFibGVbaW5kZXhdKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfSBlbHNlIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChpdGVyYWJsZSk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTspIHtcbiAgICByZXN1bHQgPSBjYWxsKGl0ZXJhdG9yLCBmLCBzdGVwLnZhbHVlLCBlbnRyaWVzKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcbmV4cG9ydHMuQlJFQUsgPSBCUkVBSztcbmV4cG9ydHMuUkVUVVJOID0gUkVUVVJOO1xuIiwiLy8gY2FsbCBzb21ldGhpbmcgb24gaXRlcmF0b3Igc3RlcCB3aXRoIHNhZmUgY2xvc2luZyBvbiBlcnJvclxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVyYXRvciwgZm4sIHZhbHVlLCBlbnRyaWVzKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVudHJpZXMgPyBmbihhbk9iamVjdCh2YWx1ZSlbMF0sIHZhbHVlWzFdKSA6IGZuKHZhbHVlKTtcbiAgLy8gNy40LjYgSXRlcmF0b3JDbG9zZShpdGVyYXRvciwgY29tcGxldGlvbilcbiAgfSBjYXRjaCAoZSkge1xuICAgIHZhciByZXQgPSBpdGVyYXRvclsncmV0dXJuJ107XG4gICAgaWYgKHJldCAhPT0gdW5kZWZpbmVkKSBhbk9iamVjdChyZXQuY2FsbChpdGVyYXRvcikpO1xuICAgIHRocm93IGU7XG4gIH1cbn07XG4iLCIvLyBjaGVjayBvbiBkZWZhdWx0IEFycmF5IGl0ZXJhdG9yXG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBBcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgIT09IHVuZGVmaW5lZCAmJiAoSXRlcmF0b3JzLkFycmF5ID09PSBpdCB8fCBBcnJheVByb3RvW0lURVJBVE9SXSA9PT0gaXQpO1xufTtcbiIsInZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvcmUnKS5nZXRJdGVyYXRvck1ldGhvZCA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgIT0gdW5kZWZpbmVkKSByZXR1cm4gaXRbSVRFUkFUT1JdXG4gICAgfHwgaXRbJ0BAaXRlcmF0b3InXVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59O1xuIiwiLy8gNy4zLjIwIFNwZWNpZXNDb25zdHJ1Y3RvcihPLCBkZWZhdWx0Q29uc3RydWN0b3IpXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgU1BFQ0lFUyA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBEKSB7XG4gIHZhciBDID0gYW5PYmplY3QoTykuY29uc3RydWN0b3I7XG4gIHZhciBTO1xuICByZXR1cm4gQyA9PT0gdW5kZWZpbmVkIHx8IChTID0gYW5PYmplY3QoQylbU1BFQ0lFU10pID09IHVuZGVmaW5lZCA/IEQgOiBhRnVuY3Rpb24oUyk7XG59O1xuIiwiLy8gZmFzdCBhcHBseSwgaHR0cDovL2pzcGVyZi5sbmtpdC5jb20vZmFzdC1hcHBseS81XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgYXJncywgdGhhdCkge1xuICB2YXIgdW4gPSB0aGF0ID09PSB1bmRlZmluZWQ7XG4gIHN3aXRjaCAoYXJncy5sZW5ndGgpIHtcbiAgICBjYXNlIDA6IHJldHVybiB1biA/IGZuKClcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCk7XG4gICAgY2FzZSAxOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdKTtcbiAgICBjYXNlIDI6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgIGNhc2UgMzogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgY2FzZSA0OiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKTtcbiAgfSByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJncyk7XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIG1hY3JvdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXQ7XG52YXIgT2JzZXJ2ZXIgPSBnbG9iYWwuTXV0YXRpb25PYnNlcnZlciB8fCBnbG9iYWwuV2ViS2l0TXV0YXRpb25PYnNlcnZlcjtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgUHJvbWlzZSA9IGdsb2JhbC5Qcm9taXNlO1xudmFyIGlzTm9kZSA9IHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBoZWFkLCBsYXN0LCBub3RpZnk7XG5cbiAgdmFyIGZsdXNoID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBwYXJlbnQsIGZuO1xuICAgIGlmIChpc05vZGUgJiYgKHBhcmVudCA9IHByb2Nlc3MuZG9tYWluKSkgcGFyZW50LmV4aXQoKTtcbiAgICB3aGlsZSAoaGVhZCkge1xuICAgICAgZm4gPSBoZWFkLmZuO1xuICAgICAgaGVhZCA9IGhlYWQubmV4dDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZuKCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChoZWFkKSBub3RpZnkoKTtcbiAgICAgICAgZWxzZSBsYXN0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH0gbGFzdCA9IHVuZGVmaW5lZDtcbiAgICBpZiAocGFyZW50KSBwYXJlbnQuZW50ZXIoKTtcbiAgfTtcblxuICAvLyBOb2RlLmpzXG4gIGlmIChpc05vZGUpIHtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGZsdXNoKTtcbiAgICB9O1xuICAvLyBicm93c2VycyB3aXRoIE11dGF0aW9uT2JzZXJ2ZXIsIGV4Y2VwdCBpT1MgU2FmYXJpIC0gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzMzOVxuICB9IGVsc2UgaWYgKE9ic2VydmVyICYmICEoZ2xvYmFsLm5hdmlnYXRvciAmJiBnbG9iYWwubmF2aWdhdG9yLnN0YW5kYWxvbmUpKSB7XG4gICAgdmFyIHRvZ2dsZSA9IHRydWU7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJyk7XG4gICAgbmV3IE9ic2VydmVyKGZsdXNoKS5vYnNlcnZlKG5vZGUsIHsgY2hhcmFjdGVyRGF0YTogdHJ1ZSB9KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBub2RlLmRhdGEgPSB0b2dnbGUgPSAhdG9nZ2xlO1xuICAgIH07XG4gIC8vIGVudmlyb25tZW50cyB3aXRoIG1heWJlIG5vbi1jb21wbGV0ZWx5IGNvcnJlY3QsIGJ1dCBleGlzdGVudCBQcm9taXNlXG4gIH0gZWxzZSBpZiAoUHJvbWlzZSAmJiBQcm9taXNlLnJlc29sdmUpIHtcbiAgICAvLyBQcm9taXNlLnJlc29sdmUgd2l0aG91dCBhbiBhcmd1bWVudCB0aHJvd3MgYW4gZXJyb3IgaW4gTEcgV2ViT1MgMlxuICAgIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcHJvbWlzZS50aGVuKGZsdXNoKTtcbiAgICB9O1xuICAvLyBmb3Igb3RoZXIgZW52aXJvbm1lbnRzIC0gbWFjcm90YXNrIGJhc2VkIG9uOlxuICAvLyAtIHNldEltbWVkaWF0ZVxuICAvLyAtIE1lc3NhZ2VDaGFubmVsXG4gIC8vIC0gd2luZG93LnBvc3RNZXNzYWdcbiAgLy8gLSBvbnJlYWR5c3RhdGVjaGFuZ2VcbiAgLy8gLSBzZXRUaW1lb3V0XG4gIH0gZWxzZSB7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gc3RyYW5nZSBJRSArIHdlYnBhY2sgZGV2IHNlcnZlciBidWcgLSB1c2UgLmNhbGwoZ2xvYmFsKVxuICAgICAgbWFjcm90YXNrLmNhbGwoZ2xvYmFsLCBmbHVzaCk7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoZm4pIHtcbiAgICB2YXIgdGFzayA9IHsgZm46IGZuLCBuZXh0OiB1bmRlZmluZWQgfTtcbiAgICBpZiAobGFzdCkgbGFzdC5uZXh0ID0gdGFzaztcbiAgICBpZiAoIWhlYWQpIHtcbiAgICAgIGhlYWQgPSB0YXNrO1xuICAgICAgbm90aWZ5KCk7XG4gICAgfSBsYXN0ID0gdGFzaztcbiAgfTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHsgZTogZmFsc2UsIHY6IGV4ZWMoKSB9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHsgZTogdHJ1ZSwgdjogZSB9O1xuICB9XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIG5hdmlnYXRvciA9IGdsb2JhbC5uYXZpZ2F0b3I7XG5cbm1vZHVsZS5leHBvcnRzID0gbmF2aWdhdG9yICYmIG5hdmlnYXRvci51c2VyQWdlbnQgfHwgJyc7XG4iLCJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gcmVxdWlyZSgnLi9fbmV3LXByb21pc2UtY2FwYWJpbGl0eScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDLCB4KSB7XG4gIGFuT2JqZWN0KEMpO1xuICBpZiAoaXNPYmplY3QoeCkgJiYgeC5jb25zdHJ1Y3RvciA9PT0gQykgcmV0dXJuIHg7XG4gIHZhciBwcm9taXNlQ2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5LmYoQyk7XG4gIHZhciByZXNvbHZlID0gcHJvbWlzZUNhcGFiaWxpdHkucmVzb2x2ZTtcbiAgcmVzb2x2ZSh4KTtcbiAgcmV0dXJuIHByb21pc2VDYXBhYmlsaXR5LnByb21pc2U7XG59O1xuIiwidmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRhcmdldCwgc3JjLCBzYWZlKSB7XG4gIGZvciAodmFyIGtleSBpbiBzcmMpIHJlZGVmaW5lKHRhcmdldCwga2V5LCBzcmNba2V5XSwgc2FmZSk7XG4gIHJldHVybiB0YXJnZXQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIEMgPSBnbG9iYWxbS0VZXTtcbiAgaWYgKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pIGRQLmYoQywgU1BFQ0lFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH1cbiAgfSk7XG59O1xuIiwidmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgU0FGRV9DTE9TSU5HID0gZmFsc2U7XG5cbnRyeSB7XG4gIHZhciByaXRlciA9IFs3XVtJVEVSQVRPUl0oKTtcbiAgcml0ZXJbJ3JldHVybiddID0gZnVuY3Rpb24gKCkgeyBTQUZFX0NMT1NJTkcgPSB0cnVlOyB9O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdGhyb3ctbGl0ZXJhbFxuICBBcnJheS5mcm9tKHJpdGVyLCBmdW5jdGlvbiAoKSB7IHRocm93IDI7IH0pO1xufSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMsIHNraXBDbG9zaW5nKSB7XG4gIGlmICghc2tpcENsb3NpbmcgJiYgIVNBRkVfQ0xPU0lORykgcmV0dXJuIGZhbHNlO1xuICB2YXIgc2FmZSA9IGZhbHNlO1xuICB0cnkge1xuICAgIHZhciBhcnIgPSBbN107XG4gICAgdmFyIGl0ZXIgPSBhcnJbSVRFUkFUT1JdKCk7XG4gICAgaXRlci5uZXh0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4geyBkb25lOiBzYWZlID0gdHJ1ZSB9OyB9O1xuICAgIGFycltJVEVSQVRPUl0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiBpdGVyOyB9O1xuICAgIGV4ZWMoYXJyKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiBzYWZlO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBhZGRUb1Vuc2NvcGFibGVzID0gcmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJyk7XG52YXIgc3RlcCA9IHJlcXVpcmUoJy4vX2l0ZXItc3RlcCcpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcblxuLy8gMjIuMS4zLjQgQXJyYXkucHJvdG90eXBlLmVudHJpZXMoKVxuLy8gMjIuMS4zLjEzIEFycmF5LnByb3RvdHlwZS5rZXlzKClcbi8vIDIyLjEuMy4yOSBBcnJheS5wcm90b3R5cGUudmFsdWVzKClcbi8vIDIyLjEuMy4zMCBBcnJheS5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19pdGVyLWRlZmluZScpKEFycmF5LCAnQXJyYXknLCBmdW5jdGlvbiAoaXRlcmF0ZWQsIGtpbmQpIHtcbiAgdGhpcy5fdCA9IHRvSU9iamVjdChpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuICB0aGlzLl9rID0ga2luZDsgICAgICAgICAgICAgICAgLy8ga2luZFxuLy8gMjIuMS41LjIuMSAlQXJyYXlJdGVyYXRvclByb3RvdHlwZSUubmV4dCgpXG59LCBmdW5jdGlvbiAoKSB7XG4gIHZhciBPID0gdGhpcy5fdDtcbiAgdmFyIGtpbmQgPSB0aGlzLl9rO1xuICB2YXIgaW5kZXggPSB0aGlzLl9pKys7XG4gIGlmICghTyB8fCBpbmRleCA+PSBPLmxlbmd0aCkge1xuICAgIHRoaXMuX3QgPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHN0ZXAoMSk7XG4gIH1cbiAgaWYgKGtpbmQgPT0gJ2tleXMnKSByZXR1cm4gc3RlcCgwLCBpbmRleCk7XG4gIGlmIChraW5kID09ICd2YWx1ZXMnKSByZXR1cm4gc3RlcCgwLCBPW2luZGV4XSk7XG4gIHJldHVybiBzdGVwKDAsIFtpbmRleCwgT1tpbmRleF1dKTtcbn0sICd2YWx1ZXMnKTtcblxuLy8gYXJndW1lbnRzTGlzdFtAQGl0ZXJhdG9yXSBpcyAlQXJyYXlQcm90b192YWx1ZXMlICg5LjQuNC42LCA5LjQuNC43KVxuSXRlcmF0b3JzLkFyZ3VtZW50cyA9IEl0ZXJhdG9ycy5BcnJheTtcblxuYWRkVG9VbnNjb3BhYmxlcygna2V5cycpO1xuYWRkVG9VbnNjb3BhYmxlcygndmFsdWVzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCdlbnRyaWVzJyk7XG4iLCIvLyAyMi4xLjMuMzEgQXJyYXkucHJvdG90eXBlW0BAdW5zY29wYWJsZXNdXG52YXIgVU5TQ09QQUJMRVMgPSByZXF1aXJlKCcuL193a3MnKSgndW5zY29wYWJsZXMnKTtcbnZhciBBcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuaWYgKEFycmF5UHJvdG9bVU5TQ09QQUJMRVNdID09IHVuZGVmaW5lZCkgcmVxdWlyZSgnLi9faGlkZScpKEFycmF5UHJvdG8sIFVOU0NPUEFCTEVTLCB7fSk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgQXJyYXlQcm90b1tVTlNDT1BBQkxFU11ba2V5XSA9IHRydWU7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZG9uZSwgdmFsdWUpIHtcbiAgcmV0dXJuIHsgdmFsdWU6IHZhbHVlLCBkb25lOiAhIWRvbmUgfTtcbn07XG4iLCIvLyBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIGFuZCBub24tZW51bWVyYWJsZSBvbGQgVjggc3RyaW5nc1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKSA/IE9iamVjdCA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gY29mKGl0KSA9PSAnU3RyaW5nJyA/IGl0LnNwbGl0KCcnKSA6IE9iamVjdChpdCk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyICRpdGVyQ3JlYXRlID0gcmVxdWlyZSgnLi9faXRlci1jcmVhdGUnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBCVUdHWSA9ICEoW10ua2V5cyAmJiAnbmV4dCcgaW4gW10ua2V5cygpKTsgLy8gU2FmYXJpIGhhcyBidWdneSBpdGVyYXRvcnMgdy9vIGBuZXh0YFxudmFyIEZGX0lURVJBVE9SID0gJ0BAaXRlcmF0b3InO1xudmFyIEtFWVMgPSAna2V5cyc7XG52YXIgVkFMVUVTID0gJ3ZhbHVlcyc7XG5cbnZhciByZXR1cm5UaGlzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQmFzZSwgTkFNRSwgQ29uc3RydWN0b3IsIG5leHQsIERFRkFVTFQsIElTX1NFVCwgRk9SQ0VEKSB7XG4gICRpdGVyQ3JlYXRlKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KTtcbiAgdmFyIGdldE1ldGhvZCA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgaWYgKCFCVUdHWSAmJiBraW5kIGluIHByb3RvKSByZXR1cm4gcHJvdG9ba2luZF07XG4gICAgc3dpdGNoIChraW5kKSB7XG4gICAgICBjYXNlIEtFWVM6IHJldHVybiBmdW5jdGlvbiBrZXlzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgICAgY2FzZSBWQUxVRVM6IHJldHVybiBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgfSByZXR1cm4gZnVuY3Rpb24gZW50cmllcygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgfTtcbiAgdmFyIFRBRyA9IE5BTUUgKyAnIEl0ZXJhdG9yJztcbiAgdmFyIERFRl9WQUxVRVMgPSBERUZBVUxUID09IFZBTFVFUztcbiAgdmFyIFZBTFVFU19CVUcgPSBmYWxzZTtcbiAgdmFyIHByb3RvID0gQmFzZS5wcm90b3R5cGU7XG4gIHZhciAkbmF0aXZlID0gcHJvdG9bSVRFUkFUT1JdIHx8IHByb3RvW0ZGX0lURVJBVE9SXSB8fCBERUZBVUxUICYmIHByb3RvW0RFRkFVTFRdO1xuICB2YXIgJGRlZmF1bHQgPSAkbmF0aXZlIHx8IGdldE1ldGhvZChERUZBVUxUKTtcbiAgdmFyICRlbnRyaWVzID0gREVGQVVMVCA/ICFERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoJ2VudHJpZXMnKSA6IHVuZGVmaW5lZDtcbiAgdmFyICRhbnlOYXRpdmUgPSBOQU1FID09ICdBcnJheScgPyBwcm90by5lbnRyaWVzIHx8ICRuYXRpdmUgOiAkbmF0aXZlO1xuICB2YXIgbWV0aG9kcywga2V5LCBJdGVyYXRvclByb3RvdHlwZTtcbiAgLy8gRml4IG5hdGl2ZVxuICBpZiAoJGFueU5hdGl2ZSkge1xuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YoJGFueU5hdGl2ZS5jYWxsKG5ldyBCYXNlKCkpKTtcbiAgICBpZiAoSXRlcmF0b3JQcm90b3R5cGUgIT09IE9iamVjdC5wcm90b3R5cGUgJiYgSXRlcmF0b3JQcm90b3R5cGUubmV4dCkge1xuICAgICAgLy8gU2V0IEBAdG9TdHJpbmdUYWcgdG8gbmF0aXZlIGl0ZXJhdG9yc1xuICAgICAgc2V0VG9TdHJpbmdUYWcoSXRlcmF0b3JQcm90b3R5cGUsIFRBRywgdHJ1ZSk7XG4gICAgICAvLyBmaXggZm9yIHNvbWUgb2xkIGVuZ2luZXNcbiAgICAgIGlmICghTElCUkFSWSAmJiB0eXBlb2YgSXRlcmF0b3JQcm90b3R5cGVbSVRFUkFUT1JdICE9ICdmdW5jdGlvbicpIGhpZGUoSXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCByZXR1cm5UaGlzKTtcbiAgICB9XG4gIH1cbiAgLy8gZml4IEFycmF5I3t2YWx1ZXMsIEBAaXRlcmF0b3J9Lm5hbWUgaW4gVjggLyBGRlxuICBpZiAoREVGX1ZBTFVFUyAmJiAkbmF0aXZlICYmICRuYXRpdmUubmFtZSAhPT0gVkFMVUVTKSB7XG4gICAgVkFMVUVTX0JVRyA9IHRydWU7XG4gICAgJGRlZmF1bHQgPSBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiAkbmF0aXZlLmNhbGwodGhpcyk7IH07XG4gIH1cbiAgLy8gRGVmaW5lIGl0ZXJhdG9yXG4gIGlmICgoIUxJQlJBUlkgfHwgRk9SQ0VEKSAmJiAoQlVHR1kgfHwgVkFMVUVTX0JVRyB8fCAhcHJvdG9bSVRFUkFUT1JdKSkge1xuICAgIGhpZGUocHJvdG8sIElURVJBVE9SLCAkZGVmYXVsdCk7XG4gIH1cbiAgLy8gUGx1ZyBmb3IgbGlicmFyeVxuICBJdGVyYXRvcnNbTkFNRV0gPSAkZGVmYXVsdDtcbiAgSXRlcmF0b3JzW1RBR10gPSByZXR1cm5UaGlzO1xuICBpZiAoREVGQVVMVCkge1xuICAgIG1ldGhvZHMgPSB7XG4gICAgICB2YWx1ZXM6IERFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChWQUxVRVMpLFxuICAgICAga2V5czogSVNfU0VUID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoS0VZUyksXG4gICAgICBlbnRyaWVzOiAkZW50cmllc1xuICAgIH07XG4gICAgaWYgKEZPUkNFRCkgZm9yIChrZXkgaW4gbWV0aG9kcykge1xuICAgICAgaWYgKCEoa2V5IGluIHByb3RvKSkgcmVkZWZpbmUocHJvdG8sIGtleSwgbWV0aG9kc1trZXldKTtcbiAgICB9IGVsc2UgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoQlVHR1kgfHwgVkFMVUVTX0JVRyksIE5BTUUsIG1ldGhvZHMpO1xuICB9XG4gIHJldHVybiBtZXRob2RzO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgZGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcblxuLy8gMjUuMS4yLjEuMSAlSXRlcmF0b3JQcm90b3R5cGUlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2hpZGUnKShJdGVyYXRvclByb3RvdHlwZSwgcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyksIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCkge1xuICBDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBjcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUsIHsgbmV4dDogZGVzY3JpcHRvcigxLCBuZXh0KSB9KTtcbiAgc2V0VG9TdHJpbmdUYWcoQ29uc3RydWN0b3IsIE5BTUUgKyAnIEl0ZXJhdG9yJyk7XG59O1xuIiwiLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBkUHMgPSByZXF1aXJlKCcuL19vYmplY3QtZHBzJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG52YXIgRW1wdHkgPSBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH07XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24gKCkge1xuICAvLyBUaHJhc2gsIHdhc3RlIGFuZCBzb2RvbXk6IElFIEdDIGJ1Z1xuICB2YXIgaWZyYW1lID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdpZnJhbWUnKTtcbiAgdmFyIGkgPSBlbnVtQnVnS2V5cy5sZW5ndGg7XG4gIHZhciBsdCA9ICc8JztcbiAgdmFyIGd0ID0gJz4nO1xuICB2YXIgaWZyYW1lRG9jdW1lbnQ7XG4gIGlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICByZXF1aXJlKCcuL19odG1sJykuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgaWZyYW1lLnNyYyA9ICdqYXZhc2NyaXB0Oic7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tc2NyaXB0LXVybFxuICAvLyBjcmVhdGVEaWN0ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuT2JqZWN0O1xuICAvLyBodG1sLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZURvY3VtZW50ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XG4gIGlmcmFtZURvY3VtZW50Lm9wZW4oKTtcbiAgaWZyYW1lRG9jdW1lbnQud3JpdGUobHQgKyAnc2NyaXB0JyArIGd0ICsgJ2RvY3VtZW50LkY9T2JqZWN0JyArIGx0ICsgJy9zY3JpcHQnICsgZ3QpO1xuICBpZnJhbWVEb2N1bWVudC5jbG9zZSgpO1xuICBjcmVhdGVEaWN0ID0gaWZyYW1lRG9jdW1lbnQuRjtcbiAgd2hpbGUgKGktLSkgZGVsZXRlIGNyZWF0ZURpY3RbUFJPVE9UWVBFXVtlbnVtQnVnS2V5c1tpXV07XG4gIHJldHVybiBjcmVhdGVEaWN0KCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5jcmVhdGUgfHwgZnVuY3Rpb24gY3JlYXRlKE8sIFByb3BlcnRpZXMpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKE8gIT09IG51bGwpIHtcbiAgICBFbXB0eVtQUk9UT1RZUEVdID0gYW5PYmplY3QoTyk7XG4gICAgcmVzdWx0ID0gbmV3IEVtcHR5KCk7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IG51bGw7XG4gICAgLy8gYWRkIFwiX19wcm90b19fXCIgZm9yIE9iamVjdC5nZXRQcm90b3R5cGVPZiBwb2x5ZmlsbFxuICAgIHJlc3VsdFtJRV9QUk9UT10gPSBPO1xuICB9IGVsc2UgcmVzdWx0ID0gY3JlYXRlRGljdCgpO1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gcmVzdWx0IDogZFBzKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBrZXlzID0gZ2V0S2V5cyhQcm9wZXJ0aWVzKTtcbiAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICB2YXIgaSA9IDA7XG4gIHZhciBQO1xuICB3aGlsZSAobGVuZ3RoID4gaSkgZFAuZihPLCBQID0ga2V5c1tpKytdLCBQcm9wZXJ0aWVzW1BdKTtcbiAgcmV0dXJuIE87XG59O1xuIiwiLy8gMTkuMS4yLjE0IC8gMTUuMi4zLjE0IE9iamVjdC5rZXlzKE8pXG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cy1pbnRlcm5hbCcpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIGtleXMoTykge1xuICByZXR1cm4gJGtleXMoTywgZW51bUJ1Z0tleXMpO1xufTtcbiIsInZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgYXJyYXlJbmRleE9mID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKShmYWxzZSk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZXMpIHtcbiAgdmFyIE8gPSB0b0lPYmplY3Qob2JqZWN0KTtcbiAgdmFyIGkgPSAwO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBrZXk7XG4gIGZvciAoa2V5IGluIE8pIGlmIChrZXkgIT0gSUVfUFJPVE8pIGhhcyhPLCBrZXkpICYmIHJlc3VsdC5wdXNoKGtleSk7XG4gIC8vIERvbid0IGVudW0gYnVnICYgaGlkZGVuIGtleXNcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIGlmIChoYXMoTywga2V5ID0gbmFtZXNbaSsrXSkpIHtcbiAgICB+YXJyYXlJbmRleE9mKHJlc3VsdCwga2V5KSB8fCByZXN1bHQucHVzaChrZXkpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwiLy8gZmFsc2UgLT4gQXJyYXkjaW5kZXhPZlxuLy8gdHJ1ZSAgLT4gQXJyYXkjaW5jbHVkZXNcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoSVNfSU5DTFVERVMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgZWwsIGZyb21JbmRleCkge1xuICAgIHZhciBPID0gdG9JT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IHRvQWJzb2x1dGVJbmRleChmcm9tSW5kZXgsIGxlbmd0aCk7XG4gICAgdmFyIHZhbHVlO1xuICAgIC8vIEFycmF5I2luY2x1ZGVzIHVzZXMgU2FtZVZhbHVlWmVybyBlcXVhbGl0eSBhbGdvcml0aG1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgaWYgKElTX0lOQ0xVREVTICYmIGVsICE9IGVsKSB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHtcbiAgICAgIHZhbHVlID0gT1tpbmRleCsrXTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICAgIGlmICh2YWx1ZSAhPSB2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgLy8gQXJyYXkjaW5kZXhPZiBpZ25vcmVzIGhvbGVzLCBBcnJheSNpbmNsdWRlcyAtIG5vdFxuICAgIH0gZWxzZSBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKElTX0lOQ0xVREVTIHx8IGluZGV4IGluIE8pIHtcbiAgICAgIGlmIChPW2luZGV4XSA9PT0gZWwpIHJldHVybiBJU19JTkNMVURFUyB8fCBpbmRleCB8fCAwO1xuICAgIH0gcmV0dXJuICFJU19JTkNMVURFUyAmJiAtMTtcbiAgfTtcbn07XG4iLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICBpbmRleCA9IHRvSW50ZWdlcihpbmRleCk7XG4gIHJldHVybiBpbmRleCA8IDAgPyBtYXgoaW5kZXggKyBsZW5ndGgsIDApIDogbWluKGluZGV4LCBsZW5ndGgpO1xufTtcbiIsIi8vIDE5LjEuMi45IC8gMTUuMi4zLjIgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIChPKSB7XG4gIE8gPSB0b09iamVjdChPKTtcbiAgaWYgKGhhcyhPLCBJRV9QUk9UTykpIHJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYgKHR5cGVvZiBPLmNvbnN0cnVjdG9yID09ICdmdW5jdGlvbicgJiYgTyBpbnN0YW5jZW9mIE8uY29uc3RydWN0b3IpIHtcbiAgICByZXR1cm4gTy5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIH0gcmV0dXJuIE8gaW5zdGFuY2VvZiBPYmplY3QgPyBPYmplY3RQcm90byA6IG51bGw7XG59O1xuIiwiLy8gNy4xLjEzIFRvT2JqZWN0KGFyZ3VtZW50KVxudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjcuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSx5PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHo9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsQT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsQj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEM9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGFhKGEsYixlLGMsZCxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2UsYyxkLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gRChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGU9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWUrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2FhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZSl9dmFyIEU9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEY9e307XG5mdW5jdGlvbiBHKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUY7dGhpcy51cGRhdGVyPWV8fEV9Ry5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtHLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/RChcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0cucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEgoKXt9SC5wcm90b3R5cGU9Ry5wcm90b3R5cGU7ZnVuY3Rpb24gSShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1GO3RoaXMudXBkYXRlcj1lfHxFfXZhciBKPUkucHJvdG90eXBlPW5ldyBIO1xuSi5jb25zdHJ1Y3Rvcj1JO2soSixHLnByb3RvdHlwZSk7Si5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSz17Y3VycmVudDpudWxsLGN1cnJlbnREaXNwYXRjaGVyOm51bGx9LEw9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxNPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBOKGEsYixlKXt2YXIgYz12b2lkIDAsZD17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilMLmNhbGwoYixjKSYmIU0uaGFzT3duUHJvcGVydHkoYykmJihkW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtjXSYmKGRbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOksuY3VycmVudH19XG5mdW5jdGlvbiBiYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2csUT1bXTtmdW5jdGlvbiBSKGEsYixlLGMpe2lmKFEubGVuZ3RoKXt2YXIgZD1RLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9ZTtkLmNvbnRleHQ9YztkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZSxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBTKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+US5sZW5ndGgmJlEucHVzaChhKX1cbmZ1bmN0aW9uIFQoYSxiLGUsYyl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGUoYyxhLFwiXCI9PT1iP1wiLlwiK1UoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZD1hW2hdO3ZhciBmPWIrVShkLGgpO2crPVQoZCxmLGUsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1DJiZhW0NdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitVKGQsaCsrKSxnKz1UKGQsZixlLGMpO2Vsc2VcIm9iamVjdFwiPT09ZCYmKGU9XCJcIithLEQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1lP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmUsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFYoYSxiLGUpe3JldHVybiBudWxsPT1hPzA6VChhLFwiXCIsYixlKX1mdW5jdGlvbiBVKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBjYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBkYShhLGIsZSl7dmFyIGM9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9XKGEsYyxlLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE8oYSkmJihhPWJhKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrZSkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVyhhLGIsZSxjLGQpe3ZhciBnPVwiXCI7bnVsbCE9ZSYmKGc9KFwiXCIrZSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGMsZCk7VihhLGRhLGIpO1MoYil9XG52YXIgWD17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtXKGEsYyxudWxsLGIsZSk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1SKG51bGwsbnVsbCxiLGUpO1YoYSxjYSxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1coYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtPKGEpP3ZvaWQgMDpEKFwiMTQzXCIpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpHLFB1cmVDb21wb25lbnQ6SSxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6Yixcbl9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfSxmb3J3YXJkUmVmOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LHJlbmRlcjphfX0sbGF6eTpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6QixfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjpBLHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX0sRnJhZ21lbnQ6cixTdHJpY3RNb2RlOnQsU3VzcGVuc2U6eixjcmVhdGVFbGVtZW50Ok4sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixlKXtudWxsPT09YXx8dm9pZCAwPT09YT9EKFwiMjY3XCIsYSk6dm9pZCAwO3ZhciBjPXZvaWQgMCxkPWsoe30sYS5wcm9wcyksZz1hLmtleSxoPWEucmVmLGY9YS5fb3duZXI7XG5pZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1LLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KTt2YXIgbD12b2lkIDA7YS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzJiYobD1hLnR5cGUuZGVmYXVsdFByb3BzKTtmb3IoYyBpbiBiKUwuY2FsbChiLGMpJiYhTS5oYXNPd25Qcm9wZXJ0eShjKSYmKGRbY109dm9pZCAwPT09YltjXSYmdm9pZCAwIT09bD9sW2NdOmJbY10pfWM9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1jKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Yyl7bD1BcnJheShjKTtmb3IodmFyIG09MDttPGM7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1sfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOmZ9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPU4uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxpc1ZhbGlkRWxlbWVudDpPLHZlcnNpb246XCIxNi43LjBcIixcbnVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlOngsdW5zdGFibGVfUHJvZmlsZXI6dSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50T3duZXI6Syxhc3NpZ246a319LFk9e2RlZmF1bHQ6WH0sWj1ZJiZYfHxZO21vZHVsZS5leHBvcnRzPVouZGVmYXVsdHx8WjtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuNy4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksYmE9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBrPVtjLGQsZSxmLGcsaF0sbD0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGtbbCsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIHQoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtjYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWFhP3ZvaWQgMDp0KFwiMjI3XCIpO2Z1bmN0aW9uIGRhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fVxudmFyIGVhPSExLGZhPW51bGwsaGE9ITEsaWE9bnVsbCxqYT17b25FcnJvcjpmdW5jdGlvbihhKXtlYT0hMDtmYT1hfX07ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2VhPSExO2ZhPW51bGw7ZGEuYXBwbHkoamEsYXJndW1lbnRzKX1mdW5jdGlvbiBsYShhLGIsYyxkLGUsZixnLGgsayl7a2EuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGVhKXtpZihlYSl7dmFyIGw9ZmE7ZWE9ITE7ZmE9bnVsbH1lbHNlIHQoXCIxOThcIiksbD12b2lkIDA7aGF8fChoYT0hMCxpYT1sKX19dmFyIG1hPW51bGwsbmE9e307XG5mdW5jdGlvbiBvYSgpe2lmKG1hKWZvcih2YXIgYSBpbiBuYSl7dmFyIGI9bmFbYV0sYz1tYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOnQoXCI5NlwiLGEpO2lmKCFwYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDp0KFwiOTdcIixhKTtwYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO3FhLmhhc093blByb3BlcnR5KGgpP3QoXCI5OVwiLGgpOnZvaWQgMDtxYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZyYShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8ocmEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtlP3ZvaWQgMDp0KFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gcmEoYSxiLGMpe3NhW2FdP3QoXCIxMDBcIixhKTp2b2lkIDA7c2FbYV09Yjt0YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBwYT1bXSxxYT17fSxzYT17fSx0YT17fSx1YT1udWxsLHZhPW51bGwsd2E9bnVsbDtmdW5jdGlvbiB4YShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9d2EoYyk7bGEoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiB5YShhLGIpe251bGw9PWI/dChcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19XG5mdW5jdGlvbiB6YShhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgQWE9bnVsbDtmdW5jdGlvbiBCYShhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspeGEoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmeGEoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fVxudmFyIENhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe21hP3QoXCIxMDFcIik6dm9pZCAwO21hPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO29hKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtuYS5oYXNPd25Qcm9wZXJ0eShjKSYmbmFbY109PT1kfHwobmFbY10/dChcIjEwMlwiLGMpOnZvaWQgMCxuYVtjXT1kLGI9ITApfWImJm9hKCl9fTtcbmZ1bmN0aW9uIERhKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9dWEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIEVhKGEpe251bGwhPT1hJiYoQWE9eWEoQWEsYSkpO2E9QWE7QWE9bnVsbDtpZihhJiYoemEoYSxCYSksQWE/dChcIjk1XCIpOnZvaWQgMCxoYSkpdGhyb3cgYT1pYSxoYT0hMSxpYT1udWxsLGE7fXZhciBGYT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxHYT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0ZhLEhhPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrRmE7ZnVuY3Rpb24gSWEoYSl7aWYoYVtHYV0pcmV0dXJuIGFbR2FdO2Zvcig7IWFbR2FdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbR2FdO3JldHVybiA1PT09YS50YWd8fDY9PT1hLnRhZz9hOm51bGx9ZnVuY3Rpb24gSmEoYSl7YT1hW0dhXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfVxuZnVuY3Rpb24gS2EoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3QoXCIzM1wiKX1mdW5jdGlvbiBMYShhKXtyZXR1cm4gYVtIYV18fG51bGx9ZnVuY3Rpb24gTWEoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBOYShhLGIsYyl7aWYoYj1EYShhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPXlhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXlhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfVxuZnVuY3Rpb24gT2EoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1NYShiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspTmEoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylOYShjW2JdLFwiYnViYmxlZFwiLGEpfX1mdW5jdGlvbiBQYShhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1EYShhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eWEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eWEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFFhKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmUGEoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfVxuZnVuY3Rpb24gUmEoYSl7emEoYSxPYSl9dmFyIFNhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fCF3aW5kb3cuZG9jdW1lbnR8fCF3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7ZnVuY3Rpb24gVGEoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVWE9e2FuaW1hdGlvbmVuZDpUYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpUYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlRhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlRhKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVmE9e30sV2E9e307XG5TYSYmKFdhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFVhLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFVhLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFVhLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFVhLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gWGEoYSl7aWYoVmFbYV0pcmV0dXJuIFZhW2FdO2lmKCFVYVthXSlyZXR1cm4gYTt2YXIgYj1VYVthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBXYSlyZXR1cm4gVmFbYV09YltjXTtyZXR1cm4gYX1cbnZhciBZYT1YYShcImFuaW1hdGlvbmVuZFwiKSxaYT1YYShcImFuaW1hdGlvbml0ZXJhdGlvblwiKSwkYT1YYShcImFuaW1hdGlvbnN0YXJ0XCIpLGFiPVhhKFwidHJhbnNpdGlvbmVuZFwiKSxiYj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksY2I9bnVsbCxlYj1udWxsLGZiPW51bGw7XG5mdW5jdGlvbiBnYigpe2lmKGZiKXJldHVybiBmYjt2YXIgYSxiPWViLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGNiP2NiLnZhbHVlOmNiLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIGZiPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gaGIoKXtyZXR1cm4hMH1mdW5jdGlvbiBpYigpe3JldHVybiExfVxuZnVuY3Rpb24geihhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/aGI6aWI7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1pYjtyZXR1cm4gdGhpc31cbm4oei5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1oYil9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1oYil9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1oYn0saXNQZXJzaXN0ZW50OmliLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWliO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7ei5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG56LmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2piKGMpO3JldHVybiBjfTtqYih6KTtmdW5jdGlvbiBrYihhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1mdW5jdGlvbiBsYihhKXthIGluc3RhbmNlb2YgdGhpcz92b2lkIDA6dChcIjI3OVwiKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9XG5mdW5jdGlvbiBqYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1rYjthLnJlbGVhc2U9bGJ9dmFyIG1iPXouZXh0ZW5kKHtkYXRhOm51bGx9KSxuYj16LmV4dGVuZCh7ZGF0YTpudWxsfSksb2I9WzksMTMsMjcsMzJdLHBiPVNhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxxYj1udWxsO1NhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihxYj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHJiPVNhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhcWIsc2I9U2EmJighcGJ8fHFiJiY4PHFiJiYxMT49cWIpLHRiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLHViPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHZiPSExO1xuZnVuY3Rpb24gd2IoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1vYi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHhiKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHliPSExO2Z1bmN0aW9uIHpiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB4YihiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7dmI9ITA7cmV0dXJuIHRiO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PXRiJiZ2Yj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBBYihhLGIpe2lmKHliKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFwYiYmd2IoYSxiKT8oYT1nYigpLGZiPWViPWNiPW51bGwseWI9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHNiJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBCYj17ZXZlbnRUeXBlczp1YixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZvaWQgMDt2YXIgZj12b2lkIDA7aWYocGIpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZT11Yi5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6ZT11Yi5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmU9dWIuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1lPXZvaWQgMH1lbHNlIHliP3diKGEsYykmJihlPXViLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGU9dWIuY29tcG9zaXRpb25TdGFydCk7ZT8oc2ImJlwia29cIiE9PWMubG9jYWxlJiYoeWJ8fGUhPT11Yi5jb21wb3NpdGlvblN0YXJ0P2U9PT11Yi5jb21wb3NpdGlvbkVuZCYmeWImJihmPWdiKCkpOihjYj1kLGViPVwidmFsdWVcImluIGNiP2NiLnZhbHVlOmNiLnRleHRDb250ZW50LHliPVxuITApKSxlPW1iLmdldFBvb2xlZChlLGIsYyxkKSxmP2UuZGF0YT1mOihmPXhiKGMpLG51bGwhPT1mJiYoZS5kYXRhPWYpKSxSYShlKSxmPWUpOmY9bnVsbDsoYT1yYj96YihhLGMpOkFiKGEsYykpPyhiPW5iLmdldFBvb2xlZCh1Yi5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsUmEoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWY/YjpudWxsPT09Yj9mOltmLGJdfX0sQ2I9bnVsbCxEYj1udWxsLEViPW51bGw7ZnVuY3Rpb24gSGIoYSl7aWYoYT12YShhKSl7XCJmdW5jdGlvblwiIT09dHlwZW9mIENiP3QoXCIyODBcIik6dm9pZCAwO3ZhciBiPXVhKGEuc3RhdGVOb2RlKTtDYihhLnN0YXRlTm9kZSxhLnR5cGUsYil9fWZ1bmN0aW9uIEliKGEpe0RiP0ViP0ViLnB1c2goYSk6RWI9W2FdOkRiPWF9ZnVuY3Rpb24gSmIoKXtpZihEYil7dmFyIGE9RGIsYj1FYjtFYj1EYj1udWxsO0hiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylIYihiW2FdKX19XG5mdW5jdGlvbiBLYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIExiKGEsYixjKXtyZXR1cm4gYShiLGMpfWZ1bmN0aW9uIE1iKCl7fXZhciBOYj0hMTtmdW5jdGlvbiBPYihhLGIpe2lmKE5iKXJldHVybiBhKGIpO05iPSEwO3RyeXtyZXR1cm4gS2IoYSxiKX1maW5hbGx5e2lmKE5iPSExLG51bGwhPT1EYnx8bnVsbCE9PUViKU1iKCksSmIoKX19dmFyIFBiPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIFFiKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhUGJbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxuZnVuY3Rpb24gUmIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIFNiKGEpe2lmKCFTYSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn1mdW5jdGlvbiBUYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWIoYSl7dmFyIGI9VGIoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYihhKSl9ZnVuY3Rpb24gV2IoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9XG52YXIgWGI9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsWWI9L14oLiopW1xcXFxcXC9dLyxEPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsWmI9RD9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMywkYj1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsYWM9RD9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsYmM9RD9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsY2M9RD9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsZGM9RD9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksZWM9RD9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxmYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZ2M9RD9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsaGM9RD9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6XG42MDExMyxpYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LGpjPUQ/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsa2M9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGxjKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1rYyYmYVtrY118fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbmZ1bmN0aW9uIG1jKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgZmM6cmV0dXJuXCJDb25jdXJyZW50TW9kZVwiO2Nhc2UgYWM6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgJGI6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIGNjOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIGJjOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgaGM6cmV0dXJuXCJTdXNwZW5zZVwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRjOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2M6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcblwiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIGljOnJldHVybiBtYyhhLnR5cGUpO2Nhc2UgamM6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBtYyhhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBuYyhhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9bWMoYS50eXBlKTtjPW51bGw7ZCYmKGM9bWMoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShZYixcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxudmFyIG9jPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxwYz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LHFjPXt9LHJjPXt9O1xuZnVuY3Rpb24gc2MoYSl7aWYocGMuY2FsbChyYyxhKSlyZXR1cm4hMDtpZihwYy5jYWxsKHFjLGEpKXJldHVybiExO2lmKG9jLnRlc3QoYSkpcmV0dXJuIHJjW2FdPSEwO3FjW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHRjKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gdWMoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8dGMoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBFKGEsYixjLGQsZSl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yn12YXIgRj17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDAsITEsYSxudWxsKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtGW2JdPW5ldyBFKGIsMSwhMSxhWzFdLG51bGwpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDIsITEsYSxudWxsKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwzLCEwLGEsbnVsbCl9KTtcbltcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDQsITEsYSxudWxsKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsNiwhMSxhLG51bGwpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTt2YXIgdmM9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiB3YyhhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2YyxcbndjKTtGW2JdPW5ldyBFKGIsMSwhMSxhLG51bGwpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6aHJlZiB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7RltiXT1uZXcgRShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIil9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7RltiXT1uZXcgRShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiKX0pO0YudGFiSW5kZXg9bmV3IEUoXCJ0YWJJbmRleFwiLDEsITEsXCJ0YWJpbmRleFwiLG51bGwpO1xuZnVuY3Rpb24geGMoYSxiLGMsZCl7dmFyIGU9Ri5oYXNPd25Qcm9wZXJ0eShiKT9GW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwodWMoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP3NjKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG5mdW5jdGlvbiB5YyhhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gemMoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQWMoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9eWMobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBCYyhhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnhjKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBDYyhhLGIpe0JjKGEsYik7dmFyIGM9eWMoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RGMoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRGMoYSxiLnR5cGUseWMoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBFYyhhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBEYyhhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9dmFyIEZjPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIEdjKGEsYixjKXthPXouZ2V0UG9vbGVkKEZjLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7SWIoYyk7UmEoYSk7cmV0dXJuIGF9dmFyIEpjPW51bGwsS2M9bnVsbDtmdW5jdGlvbiBMYyhhKXtFYShhKX1cbmZ1bmN0aW9uIE1jKGEpe3ZhciBiPUthKGEpO2lmKFdiKGIpKXJldHVybiBhfWZ1bmN0aW9uIE5jKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIE9jPSExO1NhJiYoT2M9U2IoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gUGMoKXtKYyYmKEpjLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFFjKSxLYz1KYz1udWxsKX1mdW5jdGlvbiBRYyhhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmTWMoS2MpJiYoYT1HYyhLYyxhLFJiKGEpKSxPYihMYyxhKSl9ZnVuY3Rpb24gUmMoYSxiLGMpe1wiZm9jdXNcIj09PWE/KFBjKCksSmM9YixLYz1jLEpjLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFFjKSk6XCJibHVyXCI9PT1hJiZQYygpfWZ1bmN0aW9uIFNjKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIE1jKEtjKX1cbmZ1bmN0aW9uIFRjKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gTWMoYil9ZnVuY3Rpb24gVWMoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gTWMoYil9XG52YXIgVmM9e2V2ZW50VHlwZXM6RmMsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpPYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/S2EoYik6d2luZG93LGY9dm9pZCAwLGc9dm9pZCAwLGg9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wic2VsZWN0XCI9PT1ofHxcImlucHV0XCI9PT1oJiZcImZpbGVcIj09PWUudHlwZT9mPU5jOlFiKGUpP09jP2Y9VWM6KGY9U2MsZz1SYyk6KGg9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWgudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGY9VGMpO2lmKGYmJihmPWYoYSxiKSkpcmV0dXJuIEdjKGYsYyxkKTtnJiZnKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRGMoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sV2M9ei5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFhjPXtBbHQ6XCJhbHRLZXlcIixcbkNvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFljKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9WGNbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBaYygpe3JldHVybiBZY31cbnZhciAkYz0wLGFkPTAsYmQ9ITEsY2Q9ITEsZGQ9V2MuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlpjLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPSRjOyRjPWEuc2NyZWVuWDtyZXR1cm4gYmQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihiZD0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPWFkO2FkPWEuc2NyZWVuWTtyZXR1cm4gY2Q/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihjZD0hMCwwKX19KSxlZD1kZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksZmQ9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LGdkPXtldmVudFR5cGVzOmZkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZj1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFmJiYhZSlyZXR1cm4gbnVsbDtlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8ZS5wYXJlbnRXaW5kb3c6d2luZG93O2Y/KGY9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP0lhKGIpOm51bGwpOmY9bnVsbDtpZihmPT09YilyZXR1cm4gbnVsbDt2YXIgZz12b2lkIDAsaD12b2lkIDAsaz12b2lkIDAsbD12b2lkIDA7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpZz1kZCxoPWZkLm1vdXNlTGVhdmUsaz1mZC5tb3VzZUVudGVyLGw9XCJtb3VzZVwiO1xuZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpZz1lZCxoPWZkLnBvaW50ZXJMZWF2ZSxrPWZkLnBvaW50ZXJFbnRlcixsPVwicG9pbnRlclwiO3ZhciBtPW51bGw9PWY/ZTpLYShmKTtlPW51bGw9PWI/ZTpLYShiKTthPWcuZ2V0UG9vbGVkKGgsZixjLGQpO2EudHlwZT1sK1wibGVhdmVcIjthLnRhcmdldD1tO2EucmVsYXRlZFRhcmdldD1lO2M9Zy5nZXRQb29sZWQoayxiLGMsZCk7Yy50eXBlPWwrXCJlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PW07ZD1iO2lmKGYmJmQpYTp7Yj1mO2U9ZDtsPTA7Zm9yKGc9YjtnO2c9TWEoZykpbCsrO2c9MDtmb3Ioaz1lO2s7az1NYShrKSlnKys7Zm9yKDswPGwtZzspYj1NYShiKSxsLS07Zm9yKDswPGctbDspZT1NYShlKSxnLS07Zm9yKDtsLS07KXtpZihiPT09ZXx8Yj09PWUuYWx0ZXJuYXRlKWJyZWFrIGE7Yj1NYShiKTtlPU1hKGUpfWI9bnVsbH1lbHNlIGI9bnVsbDtlPWI7Zm9yKGI9W107ZiYmZiE9PWU7KXtsPVxuZi5hbHRlcm5hdGU7aWYobnVsbCE9PWwmJmw9PT1lKWJyZWFrO2IucHVzaChmKTtmPU1hKGYpfWZvcihmPVtdO2QmJmQhPT1lOyl7bD1kLmFsdGVybmF0ZTtpZihudWxsIT09bCYmbD09PWUpYnJlYWs7Zi5wdXNoKGQpO2Q9TWEoZCl9Zm9yKGQ9MDtkPGIubGVuZ3RoO2QrKylQYShiW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihkPWYubGVuZ3RoOzA8ZC0tOylQYShmW2RdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm5bYSxjXX19LGhkPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7ZnVuY3Rpb24gaWQoYSxiKXtyZXR1cm4gYT09PWI/MCE9PWF8fDAhPT1ifHwxL2E9PT0xL2I6YSE9PWEmJmIhPT1ifVxuZnVuY3Rpb24gamQoYSxiKXtpZihpZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWhkLmNhbGwoYixjW2RdKXx8IWlkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24ga2QoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gbGQoYSl7MiE9PWtkKGEpP3QoXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gbWQoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9a2QoYSksMz09PWI/dChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gbGQoZSksYTtpZihnPT09ZClyZXR1cm4gbGQoZSksYjtnPWcuc2libGluZ310KFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6dChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP3QoXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz90KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIG5kKGEpe2E9bWQoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgb2Q9ei5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHBkPXouZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSkscWQ9V2MuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiByZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBzZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sdGQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHVkPVdjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1zZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1yZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/dGRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlpjLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP3JkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP3JkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksdmQ9ZGQuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHdkPVdjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlpjfSkseGQ9ei5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSkseWQ9ZGQuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx6ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtZYSxcImFuaW1hdGlvbkVuZFwiXSxbWmEsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sWyRhLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbYWIsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSxBZD17fSxCZD17fTtmdW5jdGlvbiBDZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O0FkW2FdPWI7QmRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFxuW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXtDZChhLCEwKX0pO3pkLmZvckVhY2goZnVuY3Rpb24oYSl7Q2QoYSwhMSl9KTtcbnZhciBEZD17ZXZlbnRUeXBlczpBZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT1CZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9QmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1yZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9dWQ7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPXFkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9ZGQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnZkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9d2Q7YnJlYWs7Y2FzZSBZYTpjYXNlIFphOmNhc2UgJGE6YT1vZDticmVhaztjYXNlIGFiOmE9eGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9V2M7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT15ZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPXBkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9ZWQ7YnJlYWs7ZGVmYXVsdDphPXp9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtSYShiKTtyZXR1cm4gYn19LEVkPURkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbkZkPVtdO2Z1bmN0aW9uIEdkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ7Zm9yKGQ9YztkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWQpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChjKTtjPUlhKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPVJiKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1udWxsLGg9MDtoPHBhLmxlbmd0aDtoKyspe3ZhciBrPXBhW2hdO2smJihrPWsuZXh0cmFjdEV2ZW50cyhkLGIsZixlKSkmJihnPXlhKGcsaykpfUVhKGcpfX12YXIgSGQ9ITA7XG5mdW5jdGlvbiBIKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KEVkKGEpP0lkOkpkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gS2QoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRWQoYSk/SWQ6SmQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBJZChhLGIpe0xiKEpkLGEsYil9XG5mdW5jdGlvbiBKZChhLGIpe2lmKEhkKXt2YXIgYz1SYihiKTtjPUlhKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09a2QoYyl8fChjPW51bGwpO2lmKEZkLmxlbmd0aCl7dmFyIGQ9RmQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7T2IoR2QsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD5GZC5sZW5ndGgmJkZkLnB1c2goYSl9fX12YXIgTGQ9e30sTWQ9MCxOZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7XG5mdW5jdGlvbiBPZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxOZCl8fChhW05kXT1NZCsrLExkW2FbTmRdXT17fSk7cmV0dXJuIExkW2FbTmRdXX1mdW5jdGlvbiBQZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gUWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gUmQoYSxiKXt2YXIgYz1RZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1RZChjKX19ZnVuY3Rpb24gU2QoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9TZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBUZCgpe2Zvcih2YXIgYT13aW5kb3csYj1QZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e2E9Yi5jb250ZW50RG9jdW1lbnQuZGVmYXVsdFZpZXd9Y2F0Y2goYyl7YnJlYWt9Yj1QZChhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBVZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIFZkPVNhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsV2Q9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LFhkPW51bGwsWWQ9bnVsbCxaZD1udWxsLCRkPSExO1xuZnVuY3Rpb24gYWUoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZigkZHx8bnVsbD09WGR8fFhkIT09UGQoYykpcmV0dXJuIG51bGw7Yz1YZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZVZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBaZCYmamQoWmQsYyk/bnVsbDooWmQ9YyxhPXouZ2V0UG9vbGVkKFdkLnNlbGVjdCxZZCxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PVhkLFJhKGEpLGEpfVxudmFyIGJlPXtldmVudFR5cGVzOldkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZjtpZighKGY9IWUpKXthOntlPU9kKGUpO2Y9dGEub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWZbZ107aWYoIWUuaGFzT3duUHJvcGVydHkoaCl8fCFlW2hdKXtlPSExO2JyZWFrIGF9fWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9LYShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKFFiKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKVhkPWUsWWQ9YixaZD1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6WmQ9WWQ9WGQ9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6JGQ9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiAkZD0hMSxhZShjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihWZClicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIGFlKGMsZCl9cmV0dXJuIG51bGx9fTtDYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3VhPUxhO3ZhPUphO3dhPUthO0NhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46RGQsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmdkLENoYW5nZUV2ZW50UGx1Z2luOlZjLFNlbGVjdEV2ZW50UGx1Z2luOmJlLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46QmJ9KTtmdW5jdGlvbiBkZShhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGVlKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9ZGUoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfWZ1bmN0aW9uIGZlKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIit5YyhjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gZ2UoYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3QoXCI5MVwiKTp2b2lkIDA7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGUoYSxiKXt2YXIgYz1iLnZhbHVlO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz90KFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6dChcIjkzXCIpLGI9YlswXSksYz1iKSxudWxsPT1jJiYoYz1cIlwiKSk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6eWMoYyl9fVxuZnVuY3Rpb24gaWUoYSxiKXt2YXIgYz15YyhiLnZhbHVlKSxkPXljKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamUoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmKGEudmFsdWU9Yil9dmFyIGtlPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGxlKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gbWUoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2xlKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG5lPXZvaWQgMCxvZT1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rZS5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuZT1uZXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuZS5pbm5lckhUTUw9XCI8c3ZnPlwiK2IrXCI8L3N2Zz5cIjtmb3IoYj1uZS5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwZShhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFlPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJlPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxZSkuZm9yRWFjaChmdW5jdGlvbihhKXtyZS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FlW2JdPXFlW2FdfSl9KTtmdW5jdGlvbiBzZShhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWUuaGFzT3duUHJvcGVydHkoYSkmJnFlW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRlKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNlKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHVlPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2ZShhLGIpe2ImJih1ZVthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dChcIjEzN1wiLGEsXCJcIik6dm9pZCAwKSxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiYobnVsbCE9Yi5jaGlsZHJlbj90KFwiNjBcIik6dm9pZCAwLFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dm9pZCAwOnQoXCI2MVwiKSksbnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlP3QoXCI2MlwiLFwiXCIpOnZvaWQgMCl9XG5mdW5jdGlvbiB3ZShhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19XG5mdW5jdGlvbiB4ZShhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1PZChhKTtiPXRhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXt2YXIgZT1iW2RdO2lmKCFjLmhhc093blByb3BlcnR5KGUpfHwhY1tlXSl7c3dpdGNoKGUpe2Nhc2UgXCJzY3JvbGxcIjpLZChcInNjcm9sbFwiLGEpO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6S2QoXCJmb2N1c1wiLGEpO0tkKFwiYmx1clwiLGEpO2MuYmx1cj0hMDtjLmZvY3VzPSEwO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpTYihlKSYmS2QoZSxhKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YmIuaW5kZXhPZihlKSYmSChlLGEpfWNbZV09ITB9fX1mdW5jdGlvbiB5ZSgpe312YXIgemU9bnVsbCxBZT1udWxsO1xuZnVuY3Rpb24gQmUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfWZ1bmN0aW9uIENlKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgRGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsRWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO1xuZnVuY3Rpb24gRmUoYSxiLGMsZCxlKXthW0hhXT1lO1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZCYyhhLGUpO3dlKGMsZCk7ZD13ZShjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP3RlKGEsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9vZShhLGgpOlwiY2hpbGRyZW5cIj09PWc/cGUoYSxoKTp4YyhhLGcsaCxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Q2MoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppZShhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP2ZlKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9mZShhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSxcbiEwKTpmZShhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19ZnVuY3Rpb24gR2UoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBIZShhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgSWU9W10sSmU9LTE7ZnVuY3Rpb24gSShhKXswPkplfHwoYS5jdXJyZW50PUllW0plXSxJZVtKZV09bnVsbCxKZS0tKX1mdW5jdGlvbiBKKGEsYil7SmUrKztJZVtKZV09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBLZT17fSxLPXtjdXJyZW50OktlfSxMPXtjdXJyZW50OiExfSxMZT1LZTtcbmZ1bmN0aW9uIE1lKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gS2U7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTShhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIE5lKGEpe0koTCxhKTtJKEssYSl9ZnVuY3Rpb24gT2UoYSl7SShMLGEpO0koSyxhKX1cbmZ1bmN0aW9uIFBlKGEsYixjKXtLLmN1cnJlbnQhPT1LZT90KFwiMTY4XCIpOnZvaWQgMDtKKEssYixhKTtKKEwsYyxhKX1mdW5jdGlvbiBRZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpZSBpbiBhP3ZvaWQgMDp0KFwiMTA4XCIsbWMoYil8fFwiVW5rbm93blwiLGUpO3JldHVybiBuKHt9LGMsZCl9ZnVuY3Rpb24gUmUoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxLZTtMZT1LLmN1cnJlbnQ7SihLLGIsYSk7SihMLEwuY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFNlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtkP3ZvaWQgMDp0KFwiMTY5XCIpO2M/KGI9UWUoYSxiLExlKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWIsSShMLGEpLEkoSyxhKSxKKEssYixhKSk6SShMLGEpO0ooTCxjLGEpfXZhciBUZT1udWxsLFVlPW51bGw7ZnVuY3Rpb24gVmUoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbmZ1bmN0aW9uIFdlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1RlPVZlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtVZT1WZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gWGUoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gTihhLGIsYyxkKXtyZXR1cm4gbmV3IFhlKGEsYixjLGQpfVxuZnVuY3Rpb24gWWUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBaZShhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gWWUoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWdjKXJldHVybiAxMTtpZihhPT09aWMpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gJGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1OKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9YS5maXJzdENvbnRleHREZXBlbmRlbmN5O2Muc2libGluZz1hLnNpYmxpbmc7XG5jLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBhZihhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpWWUoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgYWM6cmV0dXJuIGJmKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgZmM6cmV0dXJuIGNmKGMsZXwzLGYsYik7Y2FzZSBiYzpyZXR1cm4gY2YoYyxlfDIsZixiKTtjYXNlIGNjOnJldHVybiBhPU4oMTIsYyxiLGV8NCksYS5lbGVtZW50VHlwZT1jYyxhLnR5cGU9Y2MsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBoYzpyZXR1cm4gYT1OKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPWhjLGEudHlwZT1oYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZGM6Zz0xMDticmVhayBhO2Nhc2UgZWM6Zz05O2JyZWFrIGE7Y2FzZSBnYzpnPTExO2JyZWFrIGE7Y2FzZSBpYzpnPVxuMTQ7YnJlYWsgYTtjYXNlIGpjOmc9MTY7ZD1udWxsO2JyZWFrIGF9dChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPU4oZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBiZihhLGIsYyxkKXthPU4oNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGNmKGEsYixjLGQpe2E9Tig4LGEsZCxiKTtiPTA9PT0oYiYxKT9iYzpmYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGRmKGEsYixjKXthPU4oNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gZWYoYSxiLGMpe2I9Tig0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1mdW5jdGlvbiBmZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lOzA9PT1jP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPWI6YzxiP2EuZWFybGllc3RQZW5kaW5nVGltZT1iOmEubGF0ZXN0UGVuZGluZ1RpbWU+YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yik7Z2YoYixhKX1cbmZ1bmN0aW9uIGhmKGEsYil7YS5kaWRFcnJvcj0hMTthLmxhdGVzdFBpbmdlZFRpbWU+PWImJihhLmxhdGVzdFBpbmdlZFRpbWU9MCk7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lLGQ9YS5sYXRlc3RQZW5kaW5nVGltZTtjPT09Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9ZD09PWI/YS5sYXRlc3RQZW5kaW5nVGltZT0wOmQ6ZD09PWImJihhLmxhdGVzdFBlbmRpbmdUaW1lPWMpO2M9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7ZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7MD09PWM/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YS5sYXRlc3RTdXNwZW5kZWRUaW1lPWI6YzxiP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWI6ZD5iJiYoYS5sYXRlc3RTdXNwZW5kZWRUaW1lPWIpO2dmKGIsYSl9ZnVuY3Rpb24gamYoYSxiKXt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7YT1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtjPmImJihiPWMpO2E+YiYmKGI9YSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBnZihhLGIpe3ZhciBjPWIuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9Yi5sYXRlc3RTdXNwZW5kZWRUaW1lLGU9Yi5lYXJsaWVzdFBlbmRpbmdUaW1lLGY9Yi5sYXRlc3RQaW5nZWRUaW1lO2U9MCE9PWU/ZTpmOzA9PT1lJiYoMD09PWF8fGQ8YSkmJihlPWQpO2E9ZTswIT09YSYmYz5hJiYoYT1jKTtiLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWU7Yi5leHBpcmF0aW9uVGltZT1hfXZhciBrZj0hMTtmdW5jdGlvbiBsZihhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBtZihhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsLG5leHRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gb2YoYSxiKXtudWxsPT09YS5sYXN0VXBkYXRlP2EuZmlyc3RVcGRhdGU9YS5sYXN0VXBkYXRlPWI6KGEubGFzdFVwZGF0ZS5uZXh0PWIsYS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gcGYoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtpZihudWxsPT09Yyl7dmFyIGQ9YS51cGRhdGVRdWV1ZTt2YXIgZT1udWxsO251bGw9PT1kJiYoZD1hLnVwZGF0ZVF1ZXVlPWxmKGEubWVtb2l6ZWRTdGF0ZSkpfWVsc2UgZD1hLnVwZGF0ZVF1ZXVlLGU9Yy51cGRhdGVRdWV1ZSxudWxsPT09ZD9udWxsPT09ZT8oZD1hLnVwZGF0ZVF1ZXVlPWxmKGEubWVtb2l6ZWRTdGF0ZSksZT1jLnVwZGF0ZVF1ZXVlPWxmKGMubWVtb2l6ZWRTdGF0ZSkpOmQ9YS51cGRhdGVRdWV1ZT1tZihlKTpudWxsPT09ZSYmKGU9Yy51cGRhdGVRdWV1ZT1tZihkKSk7bnVsbD09PWV8fGQ9PT1lP29mKGQsYik6bnVsbD09PWQubGFzdFVwZGF0ZXx8bnVsbD09PWUubGFzdFVwZGF0ZT8ob2YoZCxiKSxvZihlLGIpKToob2YoZCxiKSxlLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBxZihhLGIpe3ZhciBjPWEudXBkYXRlUXVldWU7Yz1udWxsPT09Yz9hLnVwZGF0ZVF1ZXVlPWxmKGEubWVtb2l6ZWRTdGF0ZSk6cmYoYSxjKTtudWxsPT09Yy5sYXN0Q2FwdHVyZWRVcGRhdGU/Yy5maXJzdENhcHR1cmVkVXBkYXRlPWMubGFzdENhcHR1cmVkVXBkYXRlPWI6KGMubGFzdENhcHR1cmVkVXBkYXRlLm5leHQ9YixjLmxhc3RDYXB0dXJlZFVwZGF0ZT1iKX1mdW5jdGlvbiByZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZiPT09Yy51cGRhdGVRdWV1ZSYmKGI9YS51cGRhdGVRdWV1ZT1tZihiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBzZihhLGIsYyxkLGUsZil7c3dpdGNoKGMudGFnKXtjYXNlIDE6cmV0dXJuIGE9Yy5wYXlsb2FkLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtjYXNlIDM6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTIwNDl8NjQ7Y2FzZSAwOmE9Yy5wYXlsb2FkO2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2lmKG51bGw9PT1lfHx2b2lkIDA9PT1lKWJyZWFrO3JldHVybiBuKHt9LGQsZSk7Y2FzZSAyOmtmPSEwfXJldHVybiBkfVxuZnVuY3Rpb24gdGYoYSxiLGMsZCxlKXtrZj0hMTtiPXJmKGEsYik7Zm9yKHZhciBmPWIuYmFzZVN0YXRlLGc9bnVsbCxoPTAsaz1iLmZpcnN0VXBkYXRlLGw9ZjtudWxsIT09azspe3ZhciBtPWsuZXhwaXJhdGlvblRpbWU7bTxlPyhudWxsPT09ZyYmKGc9ayxmPWwpLGg8bSYmKGg9bSkpOihsPXNmKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWs6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0RWZmZWN0PWspKSk7az1rLm5leHR9bT1udWxsO2ZvcihrPWIuZmlyc3RDYXB0dXJlZFVwZGF0ZTtudWxsIT09azspe3ZhciByPWsuZXhwaXJhdGlvblRpbWU7cjxlPyhudWxsPT09bSYmKG09ayxudWxsPT09ZyYmKGY9bCkpLGg8ciYmKGg9cikpOihsPXNmKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD1cbjMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RDYXB0dXJlZEVmZmVjdD9iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9azooYi5sYXN0Q2FwdHVyZWRFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdENhcHR1cmVkRWZmZWN0PWspKSk7az1rLm5leHR9bnVsbD09PWcmJihiLmxhc3RVcGRhdGU9bnVsbCk7bnVsbD09PW0/Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbDphLmVmZmVjdFRhZ3w9MzI7bnVsbD09PWcmJm51bGw9PT1tJiYoZj1sKTtiLmJhc2VTdGF0ZT1mO2IuZmlyc3RVcGRhdGU9ZztiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9bTthLmV4cGlyYXRpb25UaW1lPWg7YS5tZW1vaXplZFN0YXRlPWx9XG5mdW5jdGlvbiB1ZihhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7dmYoYi5maXJzdEVmZmVjdCxjKTtiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO3ZmKGIuZmlyc3RDYXB0dXJlZEVmZmVjdCxjKTtiLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bnVsbH1mdW5jdGlvbiB2ZihhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmNhbGxiYWNrO2lmKG51bGwhPT1jKXthLmNhbGxiYWNrPW51bGw7dmFyIGQ9YjtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz90KFwiMTkxXCIsYyk6dm9pZCAwO2MuY2FsbChkKX1hPWEubmV4dEVmZmVjdH19XG5mdW5jdGlvbiB3ZihhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOm5jKGIpfX12YXIgeGY9e2N1cnJlbnQ6bnVsbH0seWY9bnVsbCx6Zj1udWxsLEFmPW51bGw7ZnVuY3Rpb24gQmYoYSxiKXt2YXIgYz1hLnR5cGUuX2NvbnRleHQ7Sih4ZixjLl9jdXJyZW50VmFsdWUsYSk7Yy5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gQ2YoYSl7dmFyIGI9eGYuY3VycmVudDtJKHhmLGEpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gRGYoYSl7eWY9YTtBZj16Zj1udWxsO2EuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT1udWxsfVxuZnVuY3Rpb24gRWYoYSxiKXtpZihBZiE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpQWY9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PXpmPyhudWxsPT09eWY/dChcIjI5M1wiKTp2b2lkIDAseWYuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT16Zj1iKTp6Zj16Zi5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgRmY9e30sTz17Y3VycmVudDpGZn0sR2Y9e2N1cnJlbnQ6RmZ9LEhmPXtjdXJyZW50OkZmfTtmdW5jdGlvbiBJZihhKXthPT09RmY/dChcIjE3NFwiKTp2b2lkIDA7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZihhLGIpe0ooSGYsYixhKTtKKEdmLGEsYSk7SihPLEZmLGEpO3ZhciBjPWIubm9kZVR5cGU7c3dpdGNoKGMpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOm1lKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpjPTg9PT1jP2IucGFyZW50Tm9kZTpiLGI9Yy5uYW1lc3BhY2VVUkl8fG51bGwsYz1jLnRhZ05hbWUsYj1tZShiLGMpfUkoTyxhKTtKKE8sYixhKX1mdW5jdGlvbiBLZihhKXtJKE8sYSk7SShHZixhKTtJKEhmLGEpfWZ1bmN0aW9uIExmKGEpe0lmKEhmLmN1cnJlbnQpO3ZhciBiPUlmKE8uY3VycmVudCk7dmFyIGM9bWUoYixhLnR5cGUpO2IhPT1jJiYoSihHZixhLGEpLEooTyxjLGEpKX1mdW5jdGlvbiBNZihhKXtHZi5jdXJyZW50PT09YSYmKEkoTyxhKSxJKEdmLGEpKX1cbmZ1bmN0aW9uIFAoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9ZnVuY3Rpb24gTmYoYSl7dmFyIGI9YS5fcmVzdWx0O3N3aXRjaChhLl9zdGF0dXMpe2Nhc2UgMTpyZXR1cm4gYjtjYXNlIDI6dGhyb3cgYjtjYXNlIDA6dGhyb3cgYjtkZWZhdWx0OnRocm93IGEuX3N0YXR1cz0wLGI9YS5fY3RvcixiPWIoKSxiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pLGEuX3Jlc3VsdD1iLGI7fX12YXIgT2Y9WGIuUmVhY3RDdXJyZW50T3duZXIsUGY9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBRZihhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cbnZhciBWZj17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/Mj09PWtkKGEpOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPVJmKCk7ZD1TZihkLGEpO3ZhciBlPW5mKGQpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtUZigpO3BmKGEsZSk7VWYoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9UmYoKTtkPVNmKGQsYSk7dmFyIGU9bmYoZCk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7VGYoKTtwZihhLGUpO1VmKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPVJmKCk7Yz1TZihjLGEpO3ZhciBkPW5mKGMpO2QudGFnPVxuMjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7VGYoKTtwZihhLGQpO1VmKGEsYyl9fTtmdW5jdGlvbiBXZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFqZChjLGQpfHwhamQoZSxmKTohMH1cbmZ1bmN0aW9uIFhmKGEsYixjKXt2YXIgZD0hMSxlPUtlO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPU9mLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGYpOihlPU0oYik/TGU6Sy5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/TWUoYSxlKTpLZSk7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPVZmO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIFpmKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZWZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uICRmKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9UGY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1PZi5jdXJyZW50RGlzcGF0Y2hlci5yZWFkQ29udGV4dChmKTooZj1NKGIpP0xlOksuY3VycmVudCxlLmNvbnRleHQ9TWUoYSxmKSk7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYodGYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKFFmKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJlZmLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGY9YS51cGRhdGVRdWV1ZSxudWxsIT09ZiYmKHRmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgYWc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIGJnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjt2YXIgZD12b2lkIDA7YyYmKDEhPT1jLnRhZz90KFwiMjg5XCIpOnZvaWQgMCxkPWMuc3RhdGVOb2RlKTtkP3ZvaWQgMDp0KFwiMTQ3XCIsYSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1QZiYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifVwic3RyaW5nXCIhPT10eXBlb2YgYT90KFwiMjg0XCIpOnZvaWQgMDtjLl9vd25lcj92b2lkIDA6dChcIjI5MFwiLGEpfXJldHVybiBhfVxuZnVuY3Rpb24gY2coYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJnQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cbmZ1bmN0aW9uIGRnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9JGUoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1kZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9YmcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPWFmKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPWJnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9ZWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGcpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9YmYoYyxhLm1vZGUsZCxnKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHIoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWRmKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBjPWFmKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPWJnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSAkYjpyZXR1cm4gYj1lZihiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoYWcoYil8fFxubGMoYikpcmV0dXJuIGI9YmYoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7Y2coYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB3KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09YWM/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlICRiOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKGFnKGMpfHxsYyhjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7Y2coYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB5KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgWmI6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWFjP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlICRiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKGFnKGQpfHxsYyhkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7Y2coYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBCKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHE9bnVsbCxtPWcsdT1nPTAscD1udWxsO251bGwhPT1tJiZ1PGgubGVuZ3RoO3UrKyl7bS5pbmRleD51PyhwPW0sbT1udWxsKTpwPW0uc2libGluZzt2YXIgdj13KGUsbSxoW3VdLGspO2lmKG51bGw9PT12KXtudWxsPT09bSYmKG09cCk7YnJlYWt9YSYmXG5tJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxtKTtnPWYodixnLHUpO251bGw9PT1xP2w9djpxLnNpYmxpbmc9djtxPXY7bT1wfWlmKHU9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG0pLGw7aWYobnVsbD09PW0pe2Zvcig7dTxoLmxlbmd0aDt1KyspaWYobT1yKGUsaFt1XSxrKSlnPWYobSxnLHUpLG51bGw9PT1xP2w9bTpxLnNpYmxpbmc9bSxxPW07cmV0dXJuIGx9Zm9yKG09ZChlLG0pO3U8aC5sZW5ndGg7dSsrKWlmKHA9eShtLGUsdSxoW3VdLGspKWEmJm51bGwhPT1wLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PXAua2V5P3U6cC5rZXkpLGc9ZihwLGcsdSksbnVsbD09PXE/bD1wOnEuc2libGluZz1wLHE9cDthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIFIoZSxnLGgsayl7dmFyIGw9bGMoaCk7XCJmdW5jdGlvblwiIT09dHlwZW9mIGw/dChcIjE1MFwiKTp2b2lkIDA7aD1sLmNhbGwoaCk7bnVsbD09aD90KFwiMTUxXCIpOnZvaWQgMDtcbmZvcih2YXIgbT1sPW51bGwscT1nLHU9Zz0wLHA9bnVsbCx2PWgubmV4dCgpO251bGwhPT1xJiYhdi5kb25lO3UrKyx2PWgubmV4dCgpKXtxLmluZGV4PnU/KHA9cSxxPW51bGwpOnA9cS5zaWJsaW5nO3ZhciBBPXcoZSxxLHYudmFsdWUsayk7aWYobnVsbD09PUEpe3F8fChxPXApO2JyZWFrfWEmJnEmJm51bGw9PT1BLmFsdGVybmF0ZSYmYihlLHEpO2c9ZihBLGcsdSk7bnVsbD09PW0/bD1BOm0uc2libGluZz1BO209QTtxPXB9aWYodi5kb25lKXJldHVybiBjKGUscSksbDtpZihudWxsPT09cSl7Zm9yKDshdi5kb25lO3UrKyx2PWgubmV4dCgpKXY9cihlLHYudmFsdWUsayksbnVsbCE9PXYmJihnPWYodixnLHUpLG51bGw9PT1tP2w9djptLnNpYmxpbmc9dixtPXYpO3JldHVybiBsfWZvcihxPWQoZSxxKTshdi5kb25lO3UrKyx2PWgubmV4dCgpKXY9eShxLGUsdSx2LnZhbHVlLGspLG51bGwhPT12JiYoYSYmbnVsbCE9PXYuYWx0ZXJuYXRlJiZxLmRlbGV0ZShudWxsPT09di5rZXk/dTpcbnYua2V5KSxnPWYodixnLHUpLG51bGw9PT1tP2w9djptLnNpYmxpbmc9dixtPXYpO2EmJnEuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWFjJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFpiOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bClpZig3PT09ay50YWc/Zi50eXBlPT09YWM6ay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09YWM/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPWJnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9XG5rLnNpYmxpbmd9Zi50eXBlPT09YWM/KGQ9YmYoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPWFmKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPWJnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSAkYjphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPWVmKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVxuXCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1kZihmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihhZyhmKSlyZXR1cm4gQihhLGQsZixoKTtpZihsYyhmKSlyZXR1cm4gUihhLGQsZixoKTtsJiZjZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOmg9YS50eXBlLHQoXCIxNTJcIixoLmRpc3BsYXlOYW1lfHxoLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciBlZz1kZyghMCksZmc9ZGcoITEpLGdnPW51bGwsaGc9bnVsbCxpZz0hMTtcbmZ1bmN0aW9uIGpnKGEsYil7dmFyIGM9Tig1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIGtnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gbGcoYSl7aWYoaWcpe3ZhciBiPWhnO2lmKGIpe3ZhciBjPWI7aWYoIWtnKGEsYikpe2I9R2UoYyk7aWYoIWJ8fCFrZyhhLGIpKXthLmVmZmVjdFRhZ3w9MjtpZz0hMTtnZz1hO3JldHVybn1qZyhnZyxjKX1nZz1hO2hnPUhlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsaWc9ITEsZ2c9YX19ZnVuY3Rpb24gbWcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnOylhPWEucmV0dXJuO2dnPWF9ZnVuY3Rpb24gbmcoYSl7aWYoYSE9PWdnKXJldHVybiExO2lmKCFpZylyZXR1cm4gbWcoYSksaWc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFDZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9aGc7YjspamcoYSxiKSxiPUdlKGIpO21nKGEpO2hnPWdnP0dlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIG9nKCl7aGc9Z2c9bnVsbDtpZz0hMX12YXIgcGc9WGIuUmVhY3RDdXJyZW50T3duZXI7XG5mdW5jdGlvbiBRKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/ZmcoYixudWxsLGMsZCk6ZWcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gcWcoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0RmKGIsZSk7ZD1jKGQsZik7Yi5lZmZlY3RUYWd8PTE7UShhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHJnKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhWWUoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsc2coYSxiLGcsZCxlLGYpO2E9YWYoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpqZCxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiB0ZyhhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT0kZShnLGQsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gc2coYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmZTxmJiZqZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWY/dGcoYSxiLGYpOnVnKGEsYixjLGQsZil9ZnVuY3Rpb24gdmcoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiB1ZyhhLGIsYyxkLGUpe3ZhciBmPU0oYyk/TGU6Sy5jdXJyZW50O2Y9TWUoYixmKTtEZihiLGUpO2M9YyhkLGYpO2IuZWZmZWN0VGFnfD0xO1EoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiB3ZyhhLGIsYyxkLGUpe2lmKE0oYykpe3ZhciBmPSEwO1JlKGIpfWVsc2UgZj0hMTtEZihiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksWGYoYixjLGQsZSksJGYoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9T2YuY3VycmVudERpc3BhdGNoZXIucmVhZENvbnRleHQobCk6KGw9TShjKT9MZTpLLmN1cnJlbnQsbD1NZShiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxyPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtyfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmWmYoYixnLGQsbCk7a2Y9ITE7dmFyIHc9Yi5tZW1vaXplZFN0YXRlO2s9Zy5zdGF0ZT13O3ZhciB5PWIudXBkYXRlUXVldWU7bnVsbCE9PXkmJih0ZihiLHksZCxnLGUpLGs9Yi5tZW1vaXplZFN0YXRlKTtoIT09ZHx8dyE9PWt8fEwuY3VycmVudHx8a2Y/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoUWYoYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPWtmfHxXZihiLGMsaCxkLHcsayxsKSk/KHJ8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpQKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPU9mLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGwpOihsPU0oYyk/TGU6Sy5jdXJyZW50LGw9TWUoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxcbihyPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmWmYoYixnLGQsbCksa2Y9ITEsaz1iLm1lbW9pemVkU3RhdGUsdz1nLnN0YXRlPWsseT1iLnVwZGF0ZVF1ZXVlLG51bGwhPT15JiYodGYoYix5LGQsZyxlKSx3PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGshPT13fHxMLmN1cnJlbnR8fGtmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKFFmKGIsYyxtLGQpLHc9Yi5tZW1vaXplZFN0YXRlKSwobT1rZnx8V2YoYixjLGgsZCxrLHcsbCkpPyhyfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8XG4oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsdyxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHcsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPVxuZCxiLm1lbW9pemVkU3RhdGU9dyksZy5wcm9wcz1kLGcuc3RhdGU9dyxnLmNvbnRleHQ9bCxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4geGcoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24geGcoYSxiLGMsZCxlLGYpe3ZnKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZTZShiLGMsITEpLHRnKGEsYixmKTtkPWIuc3RhdGVOb2RlO3BnLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPWVnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9ZWcoYixudWxsLGgsZikpOlEoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmU2UoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiB5ZyhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P1BlKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJlBlKGEsYi5jb250ZXh0LCExKTtKZihhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiB6ZyhhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkU3RhdGU7aWYoMD09PShiLmVmZmVjdFRhZyY2NCkpe2Y9bnVsbDt2YXIgZz0hMX1lbHNlIGY9e3RpbWVkT3V0QXQ6bnVsbCE9PWY/Zi50aW1lZE91dEF0OjB9LGc9ITAsYi5lZmZlY3RUYWcmPS02NTtpZihudWxsPT09YSlpZihnKXt2YXIgaD1lLmZhbGxiYWNrO2E9YmYobnVsbCxkLDAsbnVsbCk7MD09PShiLm1vZGUmMSkmJihhLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKTtkPWJmKGgsZCxjLG51bGwpO2Euc2libGluZz1kO2M9YTtjLnJldHVybj1kLnJldHVybj1ifWVsc2UgYz1kPWZnKGIsbnVsbCxlLmNoaWxkcmVuLGMpO2Vsc2UgbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZT8oZD1hLmNoaWxkLGg9ZC5zaWJsaW5nLGc/KGM9ZS5mYWxsYmFjayxlPSRlKGQsZC5wZW5kaW5nUHJvcHMsMCksMD09PShiLm1vZGUmMSkmJihnPW51bGwhPT1cbmIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWQuY2hpbGQmJihlLmNoaWxkPWcpKSxkPWUuc2libGluZz0kZShoLGMsaC5leHBpcmF0aW9uVGltZSksYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmM9ZD1lZyhiLGQuY2hpbGQsZS5jaGlsZHJlbixjKSk6KGg9YS5jaGlsZCxnPyhnPWUuZmFsbGJhY2ssZT1iZihudWxsLGQsMCxudWxsKSxlLmNoaWxkPWgsMD09PShiLm1vZGUmMSkmJihlLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKSxkPWUuc2libGluZz1iZihnLGQsYyxudWxsKSxkLmVmZmVjdFRhZ3w9MixjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6ZD1jPWVnKGIsaCxlLmNoaWxkcmVuLGMpKSxiLnN0YXRlTm9kZT1hLnN0YXRlTm9kZTtiLm1lbW9pemVkU3RhdGU9ZjtiLmNoaWxkPWM7cmV0dXJuIGR9XG5mdW5jdGlvbiB0ZyhhLGIsYyl7bnVsbCE9PWEmJihiLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9YS5maXJzdENvbnRleHREZXBlbmRlbmN5KTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/dChcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPSRlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPSRlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIEFnKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hJiZhLm1lbW9pemVkUHJvcHM9PT1iLnBlbmRpbmdQcm9wcyYmIUwuY3VycmVudCYmZDxjKXtzd2l0Y2goYi50YWcpe2Nhc2UgMzp5ZyhiKTtvZygpO2JyZWFrO2Nhc2UgNTpMZihiKTticmVhaztjYXNlIDE6TShiLnR5cGUpJiZSZShiKTticmVhaztjYXNlIDQ6SmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOkJmKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiB6ZyhhLGIsYyk7Yj10ZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gdGcoYSxiLGMpfWIuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIuZWxlbWVudFR5cGU7bnVsbCE9PVxuYSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1NZShiLEsuY3VycmVudCk7RGYoYixjKTtlPWQoYSxlKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7aWYoTShkKSl7dmFyIGY9ITA7UmUoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJlFmKGIsZCxnLGEpO2UudXBkYXRlcj1WZjtiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iOyRmKGIsZCxhLGMpO2I9eGcobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUShudWxsLGIsZSxjKSxiPWIuY2hpbGQ7XG5yZXR1cm4gYjtjYXNlIDE2OmU9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7Zj1iLnBlbmRpbmdQcm9wczthPU5mKGUpO2IudHlwZT1hO2U9Yi50YWc9WmUoYSk7Zj1QKGEsZik7Zz12b2lkIDA7c3dpdGNoKGUpe2Nhc2UgMDpnPXVnKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxOmc9d2cobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDExOmc9cWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE0Omc9cmcobnVsbCxiLGEsUChhLnR5cGUsZiksZCxjKTticmVhaztkZWZhdWx0OnQoXCIzMDZcIixhLFwiXCIpfXJldHVybiBnO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6UChkLGUpLHVnKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpQKGQsZSksd2coYSxiLFxuZCxlLGMpO2Nhc2UgMzp5ZyhiKTtkPWIudXBkYXRlUXVldWU7bnVsbD09PWQ/dChcIjI4MlwiKTp2b2lkIDA7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt0ZihiLGQsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKW9nKCksYj10ZyhhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGU9KG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJmUuaHlkcmF0ZSloZz1IZShiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxnZz1iLGU9aWc9ITA7ZT8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD1mZyhiLG51bGwsZCxjKSk6KFEoYSxiLGQsYyksb2coKSk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gTGYoYiksbnVsbD09PWEmJmxnKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sQ2UoZCxlKT9nPW51bGw6bnVsbCE9PVxuZiYmQ2UoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksdmcoYSxiKSwxIT09YyYmYi5tb2RlJjEmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUShhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmbGcoYiksbnVsbDtjYXNlIDEzOnJldHVybiB6ZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1lZyhiLG51bGwsZCxjKTpRKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6UChkLGUpLHFnKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBRKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBRKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtCZihiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9aD09PWYmJigwIT09aHx8MS9oPT09MS9mKXx8aCE9PWgmJmYhPT1mPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDA7aWYoMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTC5jdXJyZW50KXtiPXRnKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihnPWIuY2hpbGQsbnVsbCE9PWcmJihnLnJldHVybj1iKTtudWxsIT09Zzspe2g9Zy5maXJzdENvbnRleHREZXBlbmRlbmN5O2lmKG51bGwhPT1oKXtkb3tpZihoLmNvbnRleHQ9PT1kJiYwIT09KGgub2JzZXJ2ZWRCaXRzJmYpKXtpZigxPT09Zy50YWcpe3ZhciBrPW5mKGMpO2sudGFnPTI7cGYoZyxrKX1nLmV4cGlyYXRpb25UaW1lPFxuYyYmKGcuZXhwaXJhdGlvblRpbWU9Yyk7az1nLmFsdGVybmF0ZTtudWxsIT09ayYmay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTtmb3IodmFyIGw9Zy5yZXR1cm47bnVsbCE9PWw7KXtrPWwuYWx0ZXJuYXRlO2lmKGwuY2hpbGRFeHBpcmF0aW9uVGltZTxjKWwuY2hpbGRFeHBpcmF0aW9uVGltZT1jLG51bGwhPT1rJiZrLmNoaWxkRXhwaXJhdGlvblRpbWU8YyYmKGsuY2hpbGRFeHBpcmF0aW9uVGltZT1jKTtlbHNlIGlmKG51bGwhPT1rJiZrLmNoaWxkRXhwaXJhdGlvblRpbWU8YylrLmNoaWxkRXhwaXJhdGlvblRpbWU9YztlbHNlIGJyZWFrO2w9bC5yZXR1cm59fWs9Zy5jaGlsZDtoPWgubmV4dH13aGlsZShudWxsIT09aCl9ZWxzZSBrPTEwPT09Zy50YWc/Zy50eXBlPT09Yi50eXBlP251bGw6Zy5jaGlsZDpnLmNoaWxkO2lmKG51bGwhPT1rKWsucmV0dXJuPWc7ZWxzZSBmb3Ioaz1nO251bGwhPT1rOyl7aWYoaz09PWIpe2s9bnVsbDticmVha31nPWsuc2libGluZztcbmlmKG51bGwhPT1nKXtnLnJldHVybj1rLnJldHVybjtrPWc7YnJlYWt9az1rLnJldHVybn1nPWt9fVEoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sRGYoYixjKSxlPUVmKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxRKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1QKGUsYi5wZW5kaW5nUHJvcHMpLGY9UChlLnR5cGUsZikscmcoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIHNnKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpQKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsTShkKT8oYT1cbiEwLFJlKGIpKTphPSExLERmKGIsYyksWGYoYixkLGUsYyksJGYoYixkLGUsYykseGcobnVsbCxiLGQsITAsYSxjKTtkZWZhdWx0OnQoXCIxNTZcIil9fWZ1bmN0aW9uIEJnKGEpe2EuZWZmZWN0VGFnfD00fXZhciBDZz12b2lkIDAsR2c9dm9pZCAwLEhnPXZvaWQgMCxJZz12b2lkIDA7Q2c9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0dnPWZ1bmN0aW9uKCl7fTtcbkhnPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtJZihPLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj16YyhnLGYpO2Q9emMoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPWVlKGcsZik7ZD1lZShnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPWdlKGcsZik7ZD1nZShnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXllKX12ZShjLGQpO2c9Yz12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYyBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGMpJiZmLmhhc093blByb3BlcnR5KGMpJiZudWxsIT1mW2NdKWlmKFwic3R5bGVcIj09PVxuYyl7dmFyIGs9ZltjXTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHNhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgbD1kW2NdO2s9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZsIT09ayYmKG51bGwhPWx8fG51bGwhPWspKWlmKFwic3R5bGVcIj09PWMpaWYoayl7Zm9yKGcgaW4gaykhay5oYXNPd25Qcm9wZXJ0eShnKXx8bCYmbC5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShnKSYma1tnXSE9PWxbZ10mJihofHxcbihoPXt9KSxoW2ddPWxbZ10pfWVsc2UgaHx8KGF8fChhPVtdKSxhLnB1c2goYyxoKSksaD1sO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1jPyhsPWw/bC5fX2h0bWw6dm9pZCAwLGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmayE9PWwmJihhPWF8fFtdKS5wdXNoKGMsXCJcIitsKSk6XCJjaGlsZHJlblwiPT09Yz9rPT09bHx8XCJzdHJpbmdcIiE9PXR5cGVvZiBsJiZcIm51bWJlclwiIT09dHlwZW9mIGx8fChhPWF8fFtdKS5wdXNoKGMsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJihzYS5oYXNPd25Qcm9wZXJ0eShjKT8obnVsbCE9bCYmeGUoZSxjKSxhfHxrPT09bHx8KGE9W10pKTooYT1hfHxbXSkucHVzaChjLGwpKX1oJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsaCk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZCZyhiKX19O0lnPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZCZyhiKX07XG52YXIgSmc9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gS2coYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1uYyhjKSk7bnVsbCE9PWMmJm1jKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJm1jKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIExnKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe01nKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIE5nKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1zZShcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWMudGFnJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlKXtkPWMuY2hpbGQuc2libGluZztkLnJldHVybj1jO2M9ZDtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFxuYy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gT2coYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFVlJiZVZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYobnVsbCE9PWQpe3ZhciBlPWE7dHJ5e2QoKX1jYXRjaChmKXtNZyhlLGYpfX1jPWMubmV4dH13aGlsZShjIT09Yil9YnJlYWs7Y2FzZSAxOkxnKGEpO2I9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtNZyhhLGYpfWJyZWFrO2Nhc2UgNTpMZyhhKTticmVhaztjYXNlIDQ6UGcoYSl9fVxuZnVuY3Rpb24gUWcoYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBSZyhhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihRZyhiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dChcIjE2MFwiKTtjPXZvaWQgMH12YXIgZD1iPXZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpiPWMuc3RhdGVOb2RlO2Q9ITE7YnJlYWs7Y2FzZSAzOmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnQoXCIxNjFcIil9Yy5lZmZlY3RUYWcmMTYmJihwZShiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8UWcoYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXtpZig1PT09ZS50YWd8fDY9PT1lLnRhZylpZihjKWlmKGQpe3ZhciBmPWIsZz1lLnN0YXRlTm9kZSxoPWM7OD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnLGgpOmYuaW5zZXJ0QmVmb3JlKGcsaCl9ZWxzZSBiLmluc2VydEJlZm9yZShlLnN0YXRlTm9kZSxjKTtlbHNlIGQ/KGc9YixoPWUuc3RhdGVOb2RlLDg9PT1nLm5vZGVUeXBlPyhmPWcucGFyZW50Tm9kZSxmLmluc2VydEJlZm9yZShoLGcpKTooZj1nLGYuYXBwZW5kQ2hpbGQoaCkpLGc9Zy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1nJiZ2b2lkIDAhPT1nfHxudWxsIT09Zi5vbmNsaWNrfHwoZi5vbmNsaWNrPXllKSk6Yi5hcHBlbmRDaGlsZChlLnN0YXRlTm9kZSk7XG5lbHNlIGlmKDQhPT1lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGQucmV0dXJuPWU7ZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gUGcoYSl7Zm9yKHZhciBiPWEsYz0hMSxkPXZvaWQgMCxlPXZvaWQgMDs7KXtpZighYyl7Yz1iLnJldHVybjthOmZvcig7Oyl7bnVsbD09PWM/dChcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6ZD1jLnN0YXRlTm9kZTtlPSExO2JyZWFrIGE7Y2FzZSAzOmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGE7Y2FzZSA0OmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGF9Yz1jLnJldHVybn1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXthOmZvcih2YXIgZj1iLGc9Zjs7KWlmKE9nKGcpLG51bGwhPT1nLmNoaWxkJiY0IT09Zy50YWcpZy5jaGlsZC5yZXR1cm49ZyxnPWcuY2hpbGQ7ZWxzZXtpZihnPT09ZilicmVhaztmb3IoO251bGw9PT1nLnNpYmxpbmc7KXtpZihudWxsPT09Zy5yZXR1cm58fGcucmV0dXJuPT09ZilicmVhayBhO2c9Zy5yZXR1cm59Zy5zaWJsaW5nLnJldHVybj1nLnJldHVybjtnPWcuc2libGluZ31lP1xuKGY9ZCxnPWIuc3RhdGVOb2RlLDg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnKTpmLnJlbW92ZUNoaWxkKGcpKTpkLnJlbW92ZUNoaWxkKGIuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1iLnRhZz8oZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGU9ITApOk9nKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm47Yj1iLnJldHVybjs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1cbmZ1bmN0aW9uIFNnKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6YnJlYWs7Y2FzZSAxOmJyZWFrO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHM7YT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDt2YXIgZT1iLnR5cGUsZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtudWxsIT09ZiYmRmUoYyxmLGUsYSxkLGIpfWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2MlwiKTp2b2lkIDA7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmM9Yi5tZW1vaXplZFN0YXRlO2Q9dm9pZCAwO2E9YjtudWxsPT09Yz9kPSExOihkPSEwLGE9Yi5jaGlsZCwwPT09Yy50aW1lZE91dEF0JiYoYy50aW1lZE91dEF0PVJmKCkpKTtudWxsIT09YSYmTmcoYSxkKTtjPWIudXBkYXRlUXVldWU7XG5pZihudWxsIT09Yyl7Yi51cGRhdGVRdWV1ZT1udWxsO3ZhciBnPWIuc3RhdGVOb2RlO251bGw9PT1nJiYoZz1iLnN0YXRlTm9kZT1uZXcgSmcpO2MuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYz1UZy5iaW5kKG51bGwsYixhKTtnLmhhcyhhKXx8KGcuYWRkKGEpLGEudGhlbihjLGMpKX0pfWJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0KFwiMTYzXCIpfX12YXIgVWc9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gVmcoYSxiLGMpe2M9bmYoYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7V2coZCk7S2coYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBYZyhhLGIsYyl7Yz1uZihjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1ZZz9ZZz1uZXcgU2V0KFt0aGlzXSk6WWcuYWRkKHRoaXMpKTt2YXIgYz1iLnZhbHVlLGU9Yi5zdGFjaztLZyhhLGIpO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYyx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWU/ZTpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIFpnKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOk0oYS50eXBlKSYmTmUoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgMzpyZXR1cm4gS2YoYSksT2UoYSksYj1hLmVmZmVjdFRhZywwIT09KGImNjQpP3QoXCIyODVcIik6dm9pZCAwLGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYTtjYXNlIDU6cmV0dXJuIE1mKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gYj1hLmVmZmVjdFRhZyxiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDQ6cmV0dXJuIEtmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gQ2YoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciAkZz17cmVhZENvbnRleHQ6RWZ9LGFoPVhiLlJlYWN0Q3VycmVudE93bmVyLGJoPTEwNzM3NDE4MjIsY2g9MCxkaD0hMSxTPW51bGwsVD1udWxsLFU9MCxlaD0tMSxmaD0hMSxWPW51bGwsZ2g9ITEsaGg9bnVsbCxpaD1udWxsLFlnPW51bGw7ZnVuY3Rpb24gamgoKXtpZihudWxsIT09Uylmb3IodmFyIGE9Uy5yZXR1cm47bnVsbCE9PWE7KXt2YXIgYj1hO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnZhciBjPWIudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09YyYmdm9pZCAwIT09YyYmTmUoYik7YnJlYWs7Y2FzZSAzOktmKGIpO09lKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTticmVhaztjYXNlIDQ6S2YoYik7YnJlYWs7Y2FzZSAxMDpDZihiKX1hPWEucmV0dXJufVQ9bnVsbDtVPTA7ZWg9LTE7Zmg9ITE7Uz1udWxsfWZ1bmN0aW9uIFRmKCl7bnVsbCE9PWloJiYoYmEudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2soaGgpLGloKCkpfVxuZnVuY3Rpb24ga2goYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWEucmV0dXJuLGQ9YS5zaWJsaW5nO2lmKDA9PT0oYS5lZmZlY3RUYWcmMTAyNCkpe1M9YTthOnt2YXIgZT1iO2I9YTt2YXIgZj1VO3ZhciBnPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgMTY6YnJlYWs7Y2FzZSAxNTpjYXNlIDA6YnJlYWs7Y2FzZSAxOk0oYi50eXBlKSYmTmUoYik7YnJlYWs7Y2FzZSAzOktmKGIpO09lKGIpO2c9Yi5zdGF0ZU5vZGU7Zy5wZW5kaW5nQ29udGV4dCYmKGcuY29udGV4dD1nLnBlbmRpbmdDb250ZXh0LGcucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWV8fG51bGw9PT1lLmNoaWxkKW5nKGIpLGIuZWZmZWN0VGFnJj0tMztHZyhiKTticmVhaztjYXNlIDU6TWYoYik7dmFyIGg9SWYoSGYuY3VycmVudCk7Zj1iLnR5cGU7aWYobnVsbCE9PWUmJm51bGwhPWIuc3RhdGVOb2RlKUhnKGUsYixmLGcsaCksZS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD1cbjEyOCk7ZWxzZSBpZihnKXt2YXIgaz1JZihPLmN1cnJlbnQpO2lmKG5nKGIpKXtnPWI7ZT1nLnN0YXRlTm9kZTt2YXIgbD1nLnR5cGUsbT1nLm1lbW9pemVkUHJvcHMscj1oO2VbR2FdPWc7ZVtIYV09bTtmPXZvaWQgMDtoPWw7c3dpdGNoKGgpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6SChcImxvYWRcIixlKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IobD0wO2w8YmIubGVuZ3RoO2wrKylIKGJiW2xdLGUpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpIKFwiZXJyb3JcIixlKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpIKFwiZXJyb3JcIixlKTtIKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6SChcInJlc2V0XCIsZSk7SChcInN1Ym1pdFwiLGUpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6SChcInRvZ2dsZVwiLGUpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFjKGUsbSk7SChcImludmFsaWRcIixlKTt4ZShyLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmUuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O0goXCJpbnZhbGlkXCIsZSk7eGUocixcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhlKGUsbSksSChcImludmFsaWRcIixlKSx4ZShyLFwib25DaGFuZ2VcIil9dmUoaCxtKTtsPW51bGw7Zm9yKGYgaW4gbSltLmhhc093blByb3BlcnR5KGYpJiYoaz1tW2ZdLFwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrP2UudGV4dENvbnRlbnQhPT1rJiYobD1bXCJjaGlsZHJlblwiLGtdKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJmUudGV4dENvbnRlbnQhPT1cIlwiK2smJihsPVtcImNoaWxkcmVuXCIsXCJcIitrXSk6c2EuaGFzT3duUHJvcGVydHkoZikmJm51bGwhPWsmJnhlKHIsZikpO3N3aXRjaChoKXtjYXNlIFwiaW5wdXRcIjpWYihlKTtFYyhlLG0sITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZiKGUpO2plKGUsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLm9uQ2xpY2smJlxuKGUub25jbGljaz15ZSl9Zj1sO2cudXBkYXRlUXVldWU9ZjtnPW51bGwhPT1mPyEwOiExO2cmJkJnKGIpfWVsc2V7bT1iO2U9ZjtyPWc7bD05PT09aC5ub2RlVHlwZT9oOmgub3duZXJEb2N1bWVudDtrPT09a2UuaHRtbCYmKGs9bGUoZSkpO2s9PT1rZS5odG1sP1wic2NyaXB0XCI9PT1lPyhlPWwuY3JlYXRlRWxlbWVudChcImRpdlwiKSxlLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGw9ZS5yZW1vdmVDaGlsZChlLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIHIuaXM/bD1sLmNyZWF0ZUVsZW1lbnQoZSx7aXM6ci5pc30pOihsPWwuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmci5tdWx0aXBsZSYmKGwubXVsdGlwbGU9ITApKTpsPWwuY3JlYXRlRWxlbWVudE5TKGssZSk7ZT1sO2VbR2FdPW07ZVtIYV09ZztDZyhlLGIsITEsITEpO3I9ZTtsPWY7bT1nO3ZhciB3PWgseT13ZShsLG0pO3N3aXRjaChsKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkgoXCJsb2FkXCIsXG5yKTtoPW07YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGJiLmxlbmd0aDtoKyspSChiYltoXSxyKTtoPW07YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkgoXCJlcnJvclwiLHIpO2g9bTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpIKFwiZXJyb3JcIixyKTtIKFwibG9hZFwiLHIpO2g9bTticmVhaztjYXNlIFwiZm9ybVwiOkgoXCJyZXNldFwiLHIpO0goXCJzdWJtaXRcIixyKTtoPW07YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpIKFwidG9nZ2xlXCIscik7aD1tO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFjKHIsbSk7aD16YyhyLG0pO0goXCJpbnZhbGlkXCIscik7eGUodyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPWVlKHIsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnIuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtoPW4oe30sbSx7dmFsdWU6dm9pZCAwfSk7SChcImludmFsaWRcIixyKTt4ZSh3LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGUocixcbm0pO2g9Z2UocixtKTtIKFwiaW52YWxpZFwiLHIpO3hlKHcsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9bX12ZShsLGgpO2s9dm9pZCAwO3ZhciBCPWwsUj1yLHY9aDtmb3IoayBpbiB2KWlmKHYuaGFzT3duUHJvcGVydHkoaykpe3ZhciBxPXZba107XCJzdHlsZVwiPT09az90ZShSLHEpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWs/KHE9cT9xLl9faHRtbDp2b2lkIDAsbnVsbCE9cSYmb2UoUixxKSk6XCJjaGlsZHJlblwiPT09az9cInN0cmluZ1wiPT09dHlwZW9mIHE/KFwidGV4dGFyZWFcIiE9PUJ8fFwiXCIhPT1xKSYmcGUoUixxKTpcIm51bWJlclwiPT09dHlwZW9mIHEmJnBlKFIsXCJcIitxKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ayYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWsmJlwiYXV0b0ZvY3VzXCIhPT1rJiYoc2EuaGFzT3duUHJvcGVydHkoayk/bnVsbCE9cSYmeGUodyxrKTpudWxsIT1xJiZ4YyhSLGsscSx5KSl9c3dpdGNoKGwpe2Nhc2UgXCJpbnB1dFwiOlZiKHIpO1xuRWMocixtLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYihyKTtqZShyLG0pO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1tLnZhbHVlJiZyLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIit5YyhtLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmg9cjtoLm11bHRpcGxlPSEhbS5tdWx0aXBsZTtyPW0udmFsdWU7bnVsbCE9cj9mZShoLCEhbS5tdWx0aXBsZSxyLCExKTpudWxsIT1tLmRlZmF1bHRWYWx1ZSYmZmUoaCwhIW0ubXVsdGlwbGUsbS5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKHIub25jbGljaz15ZSl9KGc9QmUoZixnKSkmJkJnKGIpO2Iuc3RhdGVOb2RlPWV9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2NlwiKTp2b2lkIDA7YnJlYWs7Y2FzZSA2OmUmJm51bGwhPWIuc3RhdGVOb2RlP0lnKGUsYixlLm1lbW9pemVkUHJvcHMsZyk6KFwic3RyaW5nXCIhPT1cbnR5cGVvZiBnJiYobnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjZcIik6dm9pZCAwKSxlPUlmKEhmLmN1cnJlbnQpLElmKE8uY3VycmVudCksbmcoYik/KGc9YixmPWcuc3RhdGVOb2RlLGU9Zy5tZW1vaXplZFByb3BzLGZbR2FdPWcsKGc9Zi5ub2RlVmFsdWUhPT1lKSYmQmcoYikpOihmPWIsZz0oOT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGcpLGdbR2FdPWIsZi5zdGF0ZU5vZGU9ZykpO2JyZWFrO2Nhc2UgMTE6YnJlYWs7Y2FzZSAxMzpnPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSl7Yi5leHBpcmF0aW9uVGltZT1mO1M9YjticmVhayBhfWc9bnVsbCE9PWc7Zj1udWxsIT09ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmIWcmJmYmJihlPWUuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGg9Yi5maXJzdEVmZmVjdCxudWxsIT09aD8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1oKTooYi5maXJzdEVmZmVjdD1cbmIubGFzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSk7aWYoZyE9PWZ8fDA9PT0oYi5lZmZlY3RUYWcmMSkmJmcpYi5lZmZlY3RUYWd8PTQ7YnJlYWs7Y2FzZSA3OmJyZWFrO2Nhc2UgODpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgNDpLZihiKTtHZyhiKTticmVhaztjYXNlIDEwOkNmKGIpO2JyZWFrO2Nhc2UgOTpicmVhaztjYXNlIDE0OmJyZWFrO2Nhc2UgMTc6TShiLnR5cGUpJiZOZShiKTticmVhaztkZWZhdWx0OnQoXCIxNTZcIil9Uz1udWxsfWI9YTtpZigxPT09VXx8MSE9PWIuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zz0wO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWU9Zi5leHBpcmF0aW9uVGltZSxoPWYuY2hpbGRFeHBpcmF0aW9uVGltZSxlPmcmJihnPWUpLGg+ZyYmKGc9aCksZj1mLnNpYmxpbmc7Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWd9aWYobnVsbCE9PVMpcmV0dXJuIFM7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmMTAyNCkmJihudWxsPT09XG5jLmZpcnN0RWZmZWN0JiYoYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPVpnKGEsVSk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj0xMDIzLGE7bnVsbCE9PWMmJihjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsLGMuZWZmZWN0VGFnfD0xMDI0KX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGxoKGEpe3ZhciBiPUFnKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1raChhKSk7YWguY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gbWgoYSxiKXtkaD90KFwiMjQzXCIpOnZvaWQgMDtUZigpO2RoPSEwO2FoLmN1cnJlbnREaXNwYXRjaGVyPSRnO3ZhciBjPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT247aWYoYyE9PVV8fGEhPT1UfHxudWxsPT09UylqaCgpLFQ9YSxVPWMsUz0kZShULmN1cnJlbnQsbnVsbCxVKSxhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBkPSExO2Rve3RyeXtpZihiKWZvcig7bnVsbCE9PVMmJiFuaCgpOylTPWxoKFMpO2Vsc2UgZm9yKDtudWxsIT09UzspUz1saChTKX1jYXRjaChCKXtpZihBZj16Zj15Zj1udWxsLG51bGw9PT1TKWQ9ITAsV2coQik7ZWxzZXtudWxsPT09Uz90KFwiMjcxXCIpOnZvaWQgMDt2YXIgZT1TLGY9ZS5yZXR1cm47aWYobnVsbD09PWYpZD0hMCxXZyhCKTtlbHNle2E6e3ZhciBnPWEsaD1mLGs9ZSxsPUI7Zj1VO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWwmJlwib2JqZWN0XCI9PT1cbnR5cGVvZiBsJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbC50aGVuKXt2YXIgbT1sO2w9aDt2YXIgcj0tMSx3PS0xO2Rve2lmKDEzPT09bC50YWcpe3ZhciB5PWwuYWx0ZXJuYXRlO2lmKG51bGwhPT15JiYoeT15Lm1lbW9pemVkU3RhdGUsbnVsbCE9PXkpKXt3PTEwKigxMDczNzQxODIyLXkudGltZWRPdXRBdCk7YnJlYWt9eT1sLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHkpaWYoMD49eSlyPTA7ZWxzZSBpZigtMT09PXJ8fHk8cilyPXl9bD1sLnJldHVybn13aGlsZShudWxsIT09bCk7bD1oO2Rve2lmKHk9MTM9PT1sLnRhZyl5PXZvaWQgMD09PWwubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bC5tZW1vaXplZFN0YXRlO2lmKHkpe2g9bC51cGRhdGVRdWV1ZTtudWxsPT09aD9sLnVwZGF0ZVF1ZXVlPW5ldyBTZXQoW21dKTpoLmFkZChtKTtpZigwPT09KGwubW9kZSYxKSl7bC5lZmZlY3RUYWd8PTY0O2suZWZmZWN0VGFnJj0tMTk1NztcbjE9PT1rLnRhZyYmKG51bGw9PT1rLmFsdGVybmF0ZT9rLnRhZz0xNzooZj1uZigxMDczNzQxODIzKSxmLnRhZz0yLHBmKGssZikpKTtrLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7YnJlYWsgYX1rPWcucGluZ0NhY2hlO251bGw9PT1rPyhrPWcucGluZ0NhY2hlPW5ldyBVZyxoPW5ldyBTZXQsay5zZXQobSxoKSk6KGg9ay5nZXQobSksdm9pZCAwPT09aCYmKGg9bmV3IFNldCxrLnNldChtLGgpKSk7aC5oYXMoZil8fChoLmFkZChmKSxrPW9oLmJpbmQobnVsbCxnLG0sZiksbS50aGVuKGssaykpOy0xPT09cj9nPTEwNzM3NDE4MjM6KC0xPT09dyYmKHc9MTAqKDEwNzM3NDE4MjItamYoZyxmKSktNUUzKSxnPXcrcik7MDw9ZyYmZWg8ZyYmKGVoPWcpO2wuZWZmZWN0VGFnfD0yMDQ4O2wuZXhwaXJhdGlvblRpbWU9ZjticmVhayBhfWw9bC5yZXR1cm59d2hpbGUobnVsbCE9PWwpO2w9RXJyb3IoKG1jKGsudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitcbm5jKGspKX1maD0hMDtsPXdmKGwsayk7Zz1oO2Rve3N3aXRjaChnLnRhZyl7Y2FzZSAzOmcuZWZmZWN0VGFnfD0yMDQ4O2cuZXhwaXJhdGlvblRpbWU9ZjtmPVZnKGcsbCxmKTtxZihnLGYpO2JyZWFrIGE7Y2FzZSAxOmlmKG09bCxyPWcudHlwZSx3PWcuc3RhdGVOb2RlLDA9PT0oZy5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHIuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09dyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHcuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09WWd8fCFZZy5oYXModykpKSl7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5leHBpcmF0aW9uVGltZT1mO2Y9WGcoZyxtLGYpO3FmKGcsZik7YnJlYWsgYX19Zz1nLnJldHVybn13aGlsZShudWxsIT09Zyl9Uz1raChlKTtjb250aW51ZX19fWJyZWFrfXdoaWxlKDEpO2RoPSExO0FmPXpmPXlmPWFoLmN1cnJlbnREaXNwYXRjaGVyPW51bGw7aWYoZClUPW51bGwsYS5maW5pc2hlZFdvcms9bnVsbDtcbmVsc2UgaWYobnVsbCE9PVMpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2Q9YS5jdXJyZW50LmFsdGVybmF0ZTtudWxsPT09ZD90KFwiMjgxXCIpOnZvaWQgMDtUPW51bGw7aWYoZmgpe2U9YS5sYXRlc3RQZW5kaW5nVGltZTtmPWEubGF0ZXN0U3VzcGVuZGVkVGltZTtnPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwIT09ZSYmZTxjfHwwIT09ZiYmZjxjfHwwIT09ZyYmZzxjKXtoZihhLGMpO3BoKGEsZCxjLGEuZXhwaXJhdGlvblRpbWUsLTEpO3JldHVybn1pZighYS5kaWRFcnJvciYmYil7YS5kaWRFcnJvcj0hMDtjPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249YztiPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztwaChhLGQsYyxiLC0xKTtyZXR1cm59fWImJi0xIT09ZWg/KGhmKGEsYyksYj0xMCooMTA3Mzc0MTgyMi1qZihhLGMpKSxiPGVoJiYoZWg9YiksYj0xMCooMTA3Mzc0MTgyMi1SZigpKSxiPWVoLWIscGgoYSxkLGMsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPVxuYyxhLmZpbmlzaGVkV29yaz1kKX19ZnVuY3Rpb24gTWcoYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09WWd8fCFZZy5oYXMoZCkpKXthPXdmKGIsYSk7YT1YZyhjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtVZihjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT13ZihiLGEpO2E9VmcoYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7VWYoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPXdmKGIsYSksYz1WZyhhLGMsMTA3Mzc0MTgyMykscGYoYSxjKSxVZihhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIFNmKGEsYil7MCE9PWNoP2E9Y2g6ZGg/YT1naD8xMDczNzQxODIzOlU6Yi5tb2RlJjE/KGE9cWg/MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpOjEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSksbnVsbCE9PVQmJmE9PT1VJiYtLWEpOmE9MTA3Mzc0MTgyMztxaCYmKDA9PT1yaHx8YTxyaCkmJihyaD1hKTtyZXR1cm4gYX1mdW5jdGlvbiBvaChhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1UJiZVPT09YylUPW51bGw7ZWxzZSBpZihiPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXRlc3RTdXNwZW5kZWRUaW1lLDAhPT1iJiZjPD1iJiZjPj1kKXthLmRpZEVycm9yPSExO2I9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDA9PT1ifHxiPmMpYS5sYXRlc3RQaW5nZWRUaW1lPWM7Z2YoYyxhKTtjPWEuZXhwaXJhdGlvblRpbWU7MCE9PWMmJnNoKGEsYyl9fVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1SZigpO2I9U2YoYixhKTthPXRoKGEsYik7bnVsbCE9PWEmJihmZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmc2goYSxiKSl9XG5mdW5jdGlvbiB0aChhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gVWYoYSxiKXthPXRoKGEsYik7bnVsbCE9PWEmJighZGgmJjAhPT1VJiZiPlUmJmpoKCksZmYoYSxiKSxkaCYmIWdoJiZUPT09YXx8c2goYSxhLmV4cGlyYXRpb25UaW1lKSx1aD52aCYmKHVoPTAsdChcIjE4NVwiKSkpfWZ1bmN0aW9uIHdoKGEsYixjLGQsZSl7dmFyIGY9Y2g7Y2g9MTA3Mzc0MTgyMzt0cnl7cmV0dXJuIGEoYixjLGQsZSl9ZmluYWxseXtjaD1mfX12YXIgeGg9bnVsbCxXPW51bGwseWg9MCx6aD12b2lkIDAsWD0hMSxBaD1udWxsLFk9MCxyaD0wLEJoPSExLENoPW51bGwsWj0hMSxEaD0hMSxxaD0hMSxFaD1udWxsLEZoPWJhLnVuc3RhYmxlX25vdygpLEdoPTEwNzM3NDE4MjItKEZoLzEwfDApLEhoPUdoLHZoPTUwLHVoPTAsSWg9bnVsbDtmdW5jdGlvbiBKaCgpe0doPTEwNzM3NDE4MjItKChiYS51bnN0YWJsZV9ub3coKS1GaCkvMTB8MCl9XG5mdW5jdGlvbiBLaChhLGIpe2lmKDAhPT15aCl7aWYoYjx5aClyZXR1cm47bnVsbCE9PXpoJiZiYS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayh6aCl9eWg9YjthPWJhLnVuc3RhYmxlX25vdygpLUZoO3poPWJhLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soTGgse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjItYiktYX0pfWZ1bmN0aW9uIHBoKGEsYixjLGQsZSl7YS5leHBpcmF0aW9uVGltZT1kOzAhPT1lfHxuaCgpPzA8ZSYmKGEudGltZW91dEhhbmRsZT1EZShNaC5iaW5kKG51bGwsYSxiLGMpLGUpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YyxhLmZpbmlzaGVkV29yaz1iKX1mdW5jdGlvbiBNaChhLGIsYyl7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YzthLmZpbmlzaGVkV29yaz1iO0poKCk7SGg9R2g7TmgoYSxjKX1mdW5jdGlvbiBSZigpe2lmKFgpcmV0dXJuIEhoO09oKCk7aWYoMD09PVl8fDE9PT1ZKUpoKCksSGg9R2g7cmV0dXJuIEhofVxuZnVuY3Rpb24gc2goYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1XPyh4aD1XPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooVz1XLm5leHRTY2hlZHVsZWRSb290PWEsVy5uZXh0U2NoZWR1bGVkUm9vdD14aCkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7WHx8KFo/RGgmJihBaD1hLFk9MTA3Mzc0MTgyMyxQaChhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9RaCgxMDczNzQxODIzLCExKTpLaChhLGIpKX1cbmZ1bmN0aW9uIE9oKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVcpZm9yKHZhciBjPVcsZD14aDtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09Vz90KFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7eGg9Vz1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09eGgpeGg9ZT1kLm5leHRTY2hlZHVsZWRSb290LFcubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09Vyl7Vz1jO1cubmV4dFNjaGVkdWxlZFJvb3Q9eGg7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtlPmEmJihhPWUsYj1kKTtpZihkPT09VylicmVhaztpZigxMDczNzQxODIzPT09XG5hKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fUFoPWI7WT1hfXZhciBSaD0hMTtmdW5jdGlvbiBuaCgpe3JldHVybiBSaD8hMDpiYS51bnN0YWJsZV9zaG91bGRZaWVsZCgpP1JoPSEwOiExfWZ1bmN0aW9uIExoKCl7dHJ5e2lmKCFuaCgpJiZudWxsIT09eGgpe0poKCk7dmFyIGE9eGg7ZG97dmFyIGI9YS5leHBpcmF0aW9uVGltZTswIT09YiYmR2g8PWImJihhLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPUdoKTthPWEubmV4dFNjaGVkdWxlZFJvb3R9d2hpbGUoYSE9PXhoKX1RaCgwLCEwKX1maW5hbGx5e1JoPSExfX1cbmZ1bmN0aW9uIFFoKGEsYil7T2goKTtpZihiKWZvcihKaCgpLEhoPUdoO251bGwhPT1BaCYmMCE9PVkmJmE8PVkmJiEoUmgmJkdoPlkpOylQaChBaCxZLEdoPlkpLE9oKCksSmgoKSxIaD1HaDtlbHNlIGZvcig7bnVsbCE9PUFoJiYwIT09WSYmYTw9WTspUGgoQWgsWSwhMSksT2goKTtiJiYoeWg9MCx6aD1udWxsKTswIT09WSYmS2goQWgsWSk7dWg9MDtJaD1udWxsO2lmKG51bGwhPT1FaClmb3IoYT1FaCxFaD1udWxsLGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTt0cnl7Yy5fb25Db21wbGV0ZSgpfWNhdGNoKGQpe0JofHwoQmg9ITAsQ2g9ZCl9fWlmKEJoKXRocm93IGE9Q2gsQ2g9bnVsbCxCaD0hMSxhO31mdW5jdGlvbiBOaChhLGIpe1g/dChcIjI1M1wiKTp2b2lkIDA7QWg9YTtZPWI7UGgoYSxiLCExKTtRaCgxMDczNzQxODIzLCExKX1cbmZ1bmN0aW9uIFBoKGEsYixjKXtYP3QoXCIyNDVcIik6dm9pZCAwO1g9ITA7aWYoYyl7dmFyIGQ9YS5maW5pc2hlZFdvcms7bnVsbCE9PWQ/U2goYSxkLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9YS50aW1lb3V0SGFuZGxlLC0xIT09ZCYmKGEudGltZW91dEhhbmRsZT0tMSxFZShkKSksbWgoYSxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiYobmgoKT9hLmZpbmlzaGVkV29yaz1kOlNoKGEsZCxiKSkpfWVsc2UgZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZD9TaChhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLEVlKGQpKSxtaChhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJlNoKGEsZCxiKSk7WD0hMX1cbmZ1bmN0aW9uIFNoKGEsYixjKXt2YXIgZD1hLmZpcnN0QmF0Y2g7aWYobnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1jJiYobnVsbD09PUVoP0VoPVtkXTpFaC5wdXNoKGQpLGQuX2RlZmVyKSl7YS5maW5pc2hlZFdvcms9YjthLmV4cGlyYXRpb25UaW1lPTA7cmV0dXJufWEuZmluaXNoZWRXb3JrPW51bGw7YT09PUloP3VoKys6KEloPWEsdWg9MCk7Z2g9ZGg9ITA7YS5jdXJyZW50PT09Yj90KFwiMTc3XCIpOnZvaWQgMDtjPWEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1jP3QoXCIyNjFcIik6dm9pZCAwO2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7ZD1iLmV4cGlyYXRpb25UaW1lO3ZhciBlPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtkPWU+ZD9lOmQ7YS5kaWRFcnJvcj0hMTswPT09ZD8oYS5lYXJsaWVzdFBlbmRpbmdUaW1lPTAsYS5sYXRlc3RQZW5kaW5nVGltZT0wLGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPVxuMCk6KGQ8YS5sYXRlc3RQaW5nZWRUaW1lJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApLGU9YS5sYXRlc3RQZW5kaW5nVGltZSwwIT09ZSYmKGU+ZD9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT0wOmEuZWFybGllc3RQZW5kaW5nVGltZT5kJiYoYS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWUpKSxlPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLDA9PT1lP2ZmKGEsZCk6ZDxhLmxhdGVzdFN1c3BlbmRlZFRpbWU/KGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPTAsZmYoYSxkKSk6ZD5lJiZmZihhLGQpKTtnZigwLGEpO2FoLmN1cnJlbnQ9bnVsbDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3plPUhkO2U9VGQoKTtpZihVZChlKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW5cbmUpdmFyIGY9e3N0YXJ0OmUuc2VsZWN0aW9uU3RhcnQsZW5kOmUuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2Y9KGY9ZS5vd25lckRvY3VtZW50KSYmZi5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBnPWYuZ2V0U2VsZWN0aW9uJiZmLmdldFNlbGVjdGlvbigpO2lmKGcmJjAhPT1nLnJhbmdlQ291bnQpe2Y9Zy5hbmNob3JOb2RlO3ZhciBoPWcuYW5jaG9yT2Zmc2V0LGs9Zy5mb2N1c05vZGU7Zz1nLmZvY3VzT2Zmc2V0O3RyeXtmLm5vZGVUeXBlLGsubm9kZVR5cGV9Y2F0Y2goZGIpe2Y9bnVsbDticmVhayBhfXZhciBsPTAsbT0tMSxyPS0xLHc9MCx5PTAsQj1lLFI9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB2Ozspe0IhPT1mfHwwIT09aCYmMyE9PUIubm9kZVR5cGV8fChtPWwraCk7QiE9PWt8fDAhPT1nJiYzIT09Qi5ub2RlVHlwZXx8KHI9bCtnKTszPT09Qi5ub2RlVHlwZSYmKGwrPUIubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh2PUIuZmlyc3RDaGlsZCkpYnJlYWs7Uj1CO0I9dn1mb3IoOzspe2lmKEI9PT1cbmUpYnJlYWsgYjtSPT09ZiYmKyt3PT09aCYmKG09bCk7Uj09PWsmJisreT09PWcmJihyPWwpO2lmKG51bGwhPT0odj1CLm5leHRTaWJsaW5nKSlicmVhaztCPVI7Uj1CLnBhcmVudE5vZGV9Qj12fWY9LTE9PT1tfHwtMT09PXI/bnVsbDp7c3RhcnQ6bSxlbmQ6cn19ZWxzZSBmPW51bGx9Zj1mfHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBmPW51bGw7QWU9e2ZvY3VzZWRFbGVtOmUsc2VsZWN0aW9uUmFuZ2U6Zn07SGQ9ITE7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7Zj12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVY7KXtpZihWLmVmZmVjdFRhZyYyNTYpYTp7dmFyIHE9Vi5hbHRlcm5hdGU7aD1WO3N3aXRjaChoLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpicmVhayBhO2Nhc2UgMTppZihoLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1xKXt2YXIgdT1xLm1lbW9pemVkUHJvcHMsQT1xLm1lbW9pemVkU3RhdGUsWWY9aC5zdGF0ZU5vZGUsVmg9WWYuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoaC5lbGVtZW50VHlwZT09PVxuaC50eXBlP3U6UChoLnR5cGUsdSksQSk7WWYuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Vmh9YnJlYWsgYTtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhayBhO2RlZmF1bHQ6dChcIjE2M1wiKX19Vj1WLm5leHRFZmZlY3R9fWNhdGNoKGRiKXtlPSEwLGY9ZGJ9ZSYmKG51bGw9PT1WP3QoXCIxNzhcIik6dm9pZCAwLE1nKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWZvcihWPWQ7bnVsbCE9PVY7KXtxPSExO3U9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1WOyl7dmFyIHg9Vi5lZmZlY3RUYWc7eCYxNiYmcGUoVi5zdGF0ZU5vZGUsXCJcIik7aWYoeCYxMjgpe3ZhciBDPVYuYWx0ZXJuYXRlO2lmKG51bGwhPT1DKXt2YXIgcD1DLnJlZjtudWxsIT09cCYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBwP3AobnVsbCk6cC5jdXJyZW50PW51bGwpfX1zd2l0Y2goeCYxNCl7Y2FzZSAyOlJnKFYpO1YuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6UmcoVik7XG5WLmVmZmVjdFRhZyY9LTM7U2coVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA0OlNnKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgODpBPVY7UGcoQSk7QS5yZXR1cm49bnVsbDtBLmNoaWxkPW51bGw7QS5tZW1vaXplZFN0YXRlPW51bGw7QS51cGRhdGVRdWV1ZT1udWxsO3ZhciBHPUEuYWx0ZXJuYXRlO251bGwhPT1HJiYoRy5yZXR1cm49bnVsbCxHLmNoaWxkPW51bGwsRy5tZW1vaXplZFN0YXRlPW51bGwsRy51cGRhdGVRdWV1ZT1udWxsKX1WPVYubmV4dEVmZmVjdH19Y2F0Y2goZGIpe3E9ITAsdT1kYn1xJiYobnVsbD09PVY/dChcIjE3OFwiKTp2b2lkIDAsTWcoVix1KSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9cD1BZTtDPVRkKCk7eD1wLmZvY3VzZWRFbGVtO3E9cC5zZWxlY3Rpb25SYW5nZTtpZihDIT09eCYmeCYmeC5vd25lckRvY3VtZW50JiZTZCh4Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHgpKXtudWxsIT09cSYmVWQoeCkmJihDPXEuc3RhcnQscD1xLmVuZCxcbnZvaWQgMD09PXAmJihwPUMpLFwic2VsZWN0aW9uU3RhcnRcImluIHg/KHguc2VsZWN0aW9uU3RhcnQ9Qyx4LnNlbGVjdGlvbkVuZD1NYXRoLm1pbihwLHgudmFsdWUubGVuZ3RoKSk6KHA9KEM9eC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkMuZGVmYXVsdFZpZXd8fHdpbmRvdyxwLmdldFNlbGVjdGlvbiYmKHA9cC5nZXRTZWxlY3Rpb24oKSx1PXgudGV4dENvbnRlbnQubGVuZ3RoLEc9TWF0aC5taW4ocS5zdGFydCx1KSxxPXZvaWQgMD09PXEuZW5kP0c6TWF0aC5taW4ocS5lbmQsdSksIXAuZXh0ZW5kJiZHPnEmJih1PXEscT1HLEc9dSksdT1SZCh4LEcpLEE9UmQoeCxxKSx1JiZBJiYoMSE9PXAucmFuZ2VDb3VudHx8cC5hbmNob3JOb2RlIT09dS5ub2RlfHxwLmFuY2hvck9mZnNldCE9PXUub2Zmc2V0fHxwLmZvY3VzTm9kZSE9PUEubm9kZXx8cC5mb2N1c09mZnNldCE9PUEub2Zmc2V0KSYmKEM9Qy5jcmVhdGVSYW5nZSgpLEMuc2V0U3RhcnQodS5ub2RlLHUub2Zmc2V0KSxwLnJlbW92ZUFsbFJhbmdlcygpLFxuRz5xPyhwLmFkZFJhbmdlKEMpLHAuZXh0ZW5kKEEubm9kZSxBLm9mZnNldCkpOihDLnNldEVuZChBLm5vZGUsQS5vZmZzZXQpLHAuYWRkUmFuZ2UoQykpKSkpKTtDPVtdO2ZvcihwPXg7cD1wLnBhcmVudE5vZGU7KTE9PT1wLm5vZGVUeXBlJiZDLnB1c2goe2VsZW1lbnQ6cCxsZWZ0OnAuc2Nyb2xsTGVmdCx0b3A6cC5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgeC5mb2N1cyYmeC5mb2N1cygpO2Zvcih4PTA7eDxDLmxlbmd0aDt4KyspcD1DW3hdLHAuZWxlbWVudC5zY3JvbGxMZWZ0PXAubGVmdCxwLmVsZW1lbnQuc2Nyb2xsVG9wPXAudG9wfUFlPW51bGw7SGQ9ISF6ZTt6ZT1udWxsO2EuY3VycmVudD1iO2ZvcihWPWQ7bnVsbCE9PVY7KXtkPSExO3g9dm9pZCAwO3RyeXtmb3IoQz1jO251bGwhPT1WOyl7dmFyIEZiPVYuZWZmZWN0VGFnO2lmKEZiJjM2KXt2YXIgR2I9Vi5hbHRlcm5hdGU7cD1WO0c9Qztzd2l0Y2gocC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6YnJlYWs7XG5jYXNlIDE6dmFyIEhjPXAuc3RhdGVOb2RlO2lmKHAuZWZmZWN0VGFnJjQpaWYobnVsbD09PUdiKUhjLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgaWk9cC5lbGVtZW50VHlwZT09PXAudHlwZT9HYi5tZW1vaXplZFByb3BzOlAocC50eXBlLEdiLm1lbW9pemVkUHJvcHMpO0hjLmNvbXBvbmVudERpZFVwZGF0ZShpaSxHYi5tZW1vaXplZFN0YXRlLEhjLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgRGc9cC51cGRhdGVRdWV1ZTtudWxsIT09RGcmJnVmKHAsRGcsSGMsRyk7YnJlYWs7Y2FzZSAzOnZhciBFZz1wLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1FZyl7cT1udWxsO2lmKG51bGwhPT1wLmNoaWxkKXN3aXRjaChwLmNoaWxkLnRhZyl7Y2FzZSA1OnE9cC5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOnE9cC5jaGlsZC5zdGF0ZU5vZGV9dWYocCxFZyxxLEcpfWJyZWFrO2Nhc2UgNTp2YXIgamk9cC5zdGF0ZU5vZGU7bnVsbD09PUdiJiZwLmVmZmVjdFRhZyZcbjQmJkJlKHAudHlwZSxwLm1lbW9pemVkUHJvcHMpJiZqaS5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0KFwiMTYzXCIpfX1pZihGYiYxMjgpe3ZhciBJYz1WLnJlZjtpZihudWxsIT09SWMpe3ZhciBGZz1WLnN0YXRlTm9kZTtzd2l0Y2goVi50YWcpe2Nhc2UgNTp2YXIgY2U9Rmc7YnJlYWs7ZGVmYXVsdDpjZT1GZ31cImZ1bmN0aW9uXCI9PT10eXBlb2YgSWM/SWMoY2UpOkljLmN1cnJlbnQ9Y2V9fVY9Vi5uZXh0RWZmZWN0fX1jYXRjaChkYil7ZD0hMCx4PWRifWQmJihudWxsPT09Vj90KFwiMTc4XCIpOnZvaWQgMCxNZyhWLHgpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1kaD1naD0hMTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVGUmJlRlKGIuc3RhdGVOb2RlKTtGYj1iLmV4cGlyYXRpb25UaW1lO2I9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2I9Yj5GYj9iOkZiOzA9PT1iJiYoWWc9XG5udWxsKTthLmV4cGlyYXRpb25UaW1lPWI7YS5maW5pc2hlZFdvcms9bnVsbH1mdW5jdGlvbiBXZyhhKXtudWxsPT09QWg/dChcIjI0NlwiKTp2b2lkIDA7QWguZXhwaXJhdGlvblRpbWU9MDtCaHx8KEJoPSEwLENoPWEpfWZ1bmN0aW9uIFRoKGEsYil7dmFyIGM9WjtaPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhaPWMpfHxYfHxRaCgxMDczNzQxODIzLCExKX19ZnVuY3Rpb24gVWgoYSxiKXtpZihaJiYhRGgpe0RoPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e0RoPSExfX1yZXR1cm4gYShiKX1mdW5jdGlvbiBXaChhLGIsYyl7aWYocWgpcmV0dXJuIGEoYixjKTtafHxYfHwwPT09cmh8fChRaChyaCwhMSkscmg9MCk7dmFyIGQ9cWgsZT1aO1o9cWg9ITA7dHJ5e3JldHVybiBhKGIsYyl9ZmluYWxseXtxaD1kLChaPWUpfHxYfHxRaCgxMDczNzQxODIzLCExKX19XG5mdW5jdGlvbiBYaChhLGIsYyxkLGUpe3ZhciBmPWIuY3VycmVudDthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6ezI9PT1rZChjKSYmMT09PWMudGFnP3ZvaWQgMDp0KFwiMTcwXCIpO3ZhciBnPWM7ZG97c3dpdGNoKGcudGFnKXtjYXNlIDM6Zz1nLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKE0oZy50eXBlKSl7Zz1nLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1nPWcucmV0dXJufXdoaWxlKG51bGwhPT1nKTt0KFwiMTcxXCIpO2c9dm9pZCAwfWlmKDE9PT1jLnRhZyl7dmFyIGg9Yy50eXBlO2lmKE0oaCkpe2M9UWUoYyxoLGcpO2JyZWFrIGF9fWM9Z31lbHNlIGM9S2U7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1lO2U9bmYoZCk7ZS5wYXlsb2FkPXtlbGVtZW50OmF9O2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJihlLmNhbGxiYWNrPWIpO1xuVGYoKTtwZihmLGUpO1VmKGYsZCk7cmV0dXJuIGR9ZnVuY3Rpb24gWWgoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9UmYoKTtlPVNmKGYsZSk7cmV0dXJuIFhoKGEsYixjLGUsZCl9ZnVuY3Rpb24gWmgoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiAkaChhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOiRiLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuQ2I9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpDYyhhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9TGEoZCk7ZT92b2lkIDA6dChcIjkwXCIpO1diKGQpO0NjKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmUoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtcbmZ1bmN0aW9uIGFpKGEpe3ZhciBiPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1SZigpKzUwMCkvMjV8MCkrMSk7Yj49YmgmJihiPWJoLTEpO3RoaXMuX2V4cGlyYXRpb25UaW1lPWJoPWI7dGhpcy5fcm9vdD1hO3RoaXMuX2NhbGxiYWNrcz10aGlzLl9uZXh0PW51bGw7dGhpcy5faGFzQ2hpbGRyZW49dGhpcy5fZGlkQ29tcGxldGU9ITE7dGhpcy5fY2hpbGRyZW49bnVsbDt0aGlzLl9kZWZlcj0hMH1haS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3RoaXMuX2RlZmVyP3ZvaWQgMDp0KFwiMjUwXCIpO3RoaXMuX2hhc0NoaWxkcmVuPSEwO3RoaXMuX2NoaWxkcmVuPWE7dmFyIGI9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGM9dGhpcy5fZXhwaXJhdGlvblRpbWUsZD1uZXcgYmk7WGgoYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1xuYWkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tcGxldGUpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuYWkucHJvdG90eXBlLmNvbW1pdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxiPWEuZmlyc3RCYXRjaDt0aGlzLl9kZWZlciYmbnVsbCE9PWI/dm9pZCAwOnQoXCIyNTFcIik7aWYodGhpcy5faGFzQ2hpbGRyZW4pe3ZhciBjPXRoaXMuX2V4cGlyYXRpb25UaW1lO2lmKGIhPT10aGlzKXt0aGlzLl9oYXNDaGlsZHJlbiYmKGM9dGhpcy5fZXhwaXJhdGlvblRpbWU9Yi5fZXhwaXJhdGlvblRpbWUsdGhpcy5yZW5kZXIodGhpcy5fY2hpbGRyZW4pKTtmb3IodmFyIGQ9bnVsbCxlPWI7ZSE9PXRoaXM7KWQ9ZSxlPWUuX25leHQ7bnVsbD09PWQ/dChcIjI1MVwiKTp2b2lkIDA7ZC5fbmV4dD1lLl9uZXh0O3RoaXMuX25leHQ9YjthLmZpcnN0QmF0Y2g9dGhpc310aGlzLl9kZWZlcj0hMTtOaChhLGMpO2I9dGhpcy5fbmV4dDt0aGlzLl9uZXh0PW51bGw7Yj1hLmZpcnN0QmF0Y2g9YjtudWxsIT09YiYmYi5faGFzQ2hpbGRyZW4mJmIucmVuZGVyKGIuX2NoaWxkcmVuKX1lbHNlIHRoaXMuX25leHQ9XG5udWxsLHRoaXMuX2RlZmVyPSExfTthaS5wcm90b3R5cGUuX29uQ29tcGxldGU9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tcGxldGUpe3RoaXMuX2RpZENvbXBsZXRlPSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKykoMCxhW2JdKSgpfX07ZnVuY3Rpb24gYmkoKXt0aGlzLl9jYWxsYmFja3M9bnVsbDt0aGlzLl9kaWRDb21taXQ9ITE7dGhpcy5fb25Db21taXQ9dGhpcy5fb25Db21taXQuYmluZCh0aGlzKX1iaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21taXQpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuYmkucHJvdG90eXBlLl9vbkNvbW1pdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21taXQpe3RoaXMuX2RpZENvbW1pdD0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjE5MVwiLGMpOnZvaWQgMDtjKCl9fX07XG5mdW5jdGlvbiBjaShhLGIsYyl7Yj1OKDMsbnVsbCxudWxsLGI/MzowKTthPXtjdXJyZW50OmIsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLHBpbmdDYWNoZTpudWxsLGVhcmxpZXN0UGVuZGluZ1RpbWU6MCxsYXRlc3RQZW5kaW5nVGltZTowLGVhcmxpZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RQaW5nZWRUaW1lOjAsZGlkRXJyb3I6ITEscGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOjAsZmluaXNoZWRXb3JrOm51bGwsdGltZW91dEhhbmRsZTotMSxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmMsbmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT246MCxleHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTt0aGlzLl9pbnRlcm5hbFJvb3Q9Yi5zdGF0ZU5vZGU9YX1cbmNpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcgYmk7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO1loKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07Y2kucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9bmV3IGJpO2E9dm9pZCAwPT09YT9udWxsOmE7bnVsbCE9PWEmJmMudGhlbihhKTtZaChudWxsLGIsbnVsbCxjLl9vbkNvbW1pdCk7cmV0dXJuIGN9O2NpLnByb3RvdHlwZS5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuX2ludGVybmFsUm9vdCxlPW5ldyBiaTtjPXZvaWQgMD09PWM/bnVsbDpjO251bGwhPT1jJiZlLnRoZW4oYyk7WWgoYixkLGEsZS5fb25Db21taXQpO3JldHVybiBlfTtcbmNpLnByb3RvdHlwZS5jcmVhdGVCYXRjaD1mdW5jdGlvbigpe3ZhciBhPW5ldyBhaSh0aGlzKSxiPWEuX2V4cGlyYXRpb25UaW1lLGM9dGhpcy5faW50ZXJuYWxSb290LGQ9Yy5maXJzdEJhdGNoO2lmKG51bGw9PT1kKWMuZmlyc3RCYXRjaD1hLGEuX25leHQ9bnVsbDtlbHNle2ZvcihjPW51bGw7bnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1iOyljPWQsZD1kLl9uZXh0O2EuX25leHQ9ZDtudWxsIT09YyYmKGMuX25leHQ9YSl9cmV0dXJuIGF9O2Z1bmN0aW9uIGRpKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1LYj1UaDtMYj1XaDtNYj1mdW5jdGlvbigpe1h8fDA9PT1yaHx8KFFoKHJoLCExKSxyaD0wKX07XG5mdW5jdGlvbiBlaShhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IGNpKGEsITEsYil9XG5mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2RpKGMpP3ZvaWQgMDp0KFwiMjAwXCIpO3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGc9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9WmgoZi5faW50ZXJuYWxSb290KTtnLmNhbGwoYSl9fW51bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1laShjLGQpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1aaChmLl9pbnRlcm5hbFJvb3QpO2guY2FsbChhKX19VWgoZnVuY3Rpb24oKXtudWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfSl9cmV0dXJuIFpoKGYuX2ludGVybmFsUm9vdCl9XG5mdW5jdGlvbiBnaShhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2RpKGIpP3ZvaWQgMDp0KFwiMjAwXCIpO3JldHVybiAkaChhLGIsbnVsbCxjKX1cbnZhciBraT17Y3JlYXRlUG9ydGFsOmdpLGZpbmRET01Ob2RlOmZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZvaWQgMD09PWImJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXI/dChcIjE4OFwiKTp0KFwiMjY4XCIsT2JqZWN0LmtleXMoYSkpKTthPW5kKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX0saHlkcmF0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGZpKG51bGwsYSxiLCEwLGMpfSxyZW5kZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBmaShudWxsLGEsYiwhMSxjKX0sdW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI6ZnVuY3Rpb24oYSxiLGMsZCl7bnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyP3QoXCIzOFwiKTp2b2lkIDA7cmV0dXJuIGZpKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe2RpKGEpP1xudm9pZCAwOnQoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhVaChmdW5jdGlvbigpe2ZpKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOmZ1bmN0aW9uKCl7cmV0dXJuIGdpLmFwcGx5KHZvaWQgMCxhcmd1bWVudHMpfSx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczpUaCx1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXM6V2gsZmx1c2hTeW5jOmZ1bmN0aW9uKGEsYil7WD90KFwiMTg3XCIpOnZvaWQgMDt2YXIgYz1aO1o9ITA7dHJ5e3JldHVybiB3aChhLGIpfWZpbmFsbHl7Wj1jLFFoKDEwNzM3NDE4MjMsITEpfX0sdW5zdGFibGVfY3JlYXRlUm9vdDpoaSx1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQ6ZnVuY3Rpb24oYSl7dmFyIGI9WjtaPSEwO3RyeXt3aChhKX1maW5hbGx5eyhaPWIpfHxYfHxRaCgxMDczNzQxODIzLCExKX19LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudHM6W0phLFxuS2EsTGEsQ2EuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lLHFhLFJhLGZ1bmN0aW9uKGEpe3phKGEsUWEpfSxJYixKYixKZCxFYV19fTtmdW5jdGlvbiBoaShhLGIpe2RpKGEpP3ZvaWQgMDp0KFwiMjk5XCIsXCJ1bnN0YWJsZV9jcmVhdGVSb290XCIpO3JldHVybiBuZXcgY2koYSwhMCxudWxsIT1iJiYhMD09PWIuaHlkcmF0ZSl9KGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFdlKG4oe30sYSx7b3ZlcnJpZGVQcm9wczpudWxsLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9bmQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SWEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi43LjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtcbnZhciBsaT17ZGVmYXVsdDpraX0sbWk9bGkmJmtpfHxsaTttb2R1bGUuZXhwb3J0cz1taS5kZWZhdWx0fHxtaTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTIuMFxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBjPW51bGwsZj0hMSxoPTMsaz0tMSxsPS0xLG09ITEsbj0hMTtmdW5jdGlvbiBwKCl7aWYoIW0pe3ZhciBhPWMuZXhwaXJhdGlvblRpbWU7bj9xKCk6bj0hMDtyKHQsYSl9fVxuZnVuY3Rpb24gdSgpe3ZhciBhPWMsYj1jLm5leHQ7aWYoYz09PWIpYz1udWxsO2Vsc2V7dmFyIGQ9Yy5wcmV2aW91cztjPWQubmV4dD1iO2IucHJldmlvdXM9ZH1hLm5leHQ9YS5wcmV2aW91cz1udWxsO2Q9YS5jYWxsYmFjaztiPWEuZXhwaXJhdGlvblRpbWU7YT1hLnByaW9yaXR5TGV2ZWw7dmFyIGU9aCxRPWw7aD1hO2w9Yjt0cnl7dmFyIGc9ZCgpfWZpbmFsbHl7aD1lLGw9UX1pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZylpZihnPXtjYWxsYmFjazpnLHByaW9yaXR5TGV2ZWw6YSxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfSxudWxsPT09YyljPWcubmV4dD1nLnByZXZpb3VzPWc7ZWxzZXtkPW51bGw7YT1jO2Rve2lmKGEuZXhwaXJhdGlvblRpbWU+PWIpe2Q9YTticmVha31hPWEubmV4dH13aGlsZShhIT09Yyk7bnVsbD09PWQ/ZD1jOmQ9PT1jJiYoYz1nLHAoKSk7Yj1kLnByZXZpb3VzO2IubmV4dD1kLnByZXZpb3VzPWc7Zy5uZXh0PWQ7Zy5wcmV2aW91cz1cbmJ9fWZ1bmN0aW9uIHYoKXtpZigtMT09PWsmJm51bGwhPT1jJiYxPT09Yy5wcmlvcml0eUxldmVsKXttPSEwO3RyeXtkbyB1KCk7d2hpbGUobnVsbCE9PWMmJjE9PT1jLnByaW9yaXR5TGV2ZWwpfWZpbmFsbHl7bT0hMSxudWxsIT09Yz9wKCk6bj0hMX19fWZ1bmN0aW9uIHQoYSl7bT0hMDt2YXIgYj1mO2Y9YTt0cnl7aWYoYSlmb3IoO251bGwhPT1jOyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihjLmV4cGlyYXRpb25UaW1lPD1kKXtkbyB1KCk7d2hpbGUobnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8PWQpfWVsc2UgYnJlYWt9ZWxzZSBpZihudWxsIT09Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1jJiYhdygpKX19ZmluYWxseXttPSExLGY9YixudWxsIT09Yz9wKCk6bj0hMSx2KCl9fVxudmFyIHg9RGF0ZSx5PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU6dm9pZCAwLEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNhbmNlbEFuaW1hdGlvbkZyYW1lP2NhbmNlbEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxDLEQ7ZnVuY3Rpb24gRShhKXtDPUEoZnVuY3Rpb24oYil7eihEKTthKGIpfSk7RD15KGZ1bmN0aW9uKCl7QihDKTthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSwxMDApfVxuaWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIEY9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRi5ub3coKX19ZWxzZSBleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpfTt2YXIgcixxLHcsRz1udWxsO1widW5kZWZpbmVkXCIhPT10eXBlb2Ygd2luZG93P0c9d2luZG93OlwidW5kZWZpbmVkXCIhPT10eXBlb2YgZ2xvYmFsJiYoRz1nbG9iYWwpO1xuaWYoRyYmRy5fc2NoZWRNb2NrKXt2YXIgSD1HLl9zY2hlZE1vY2s7cj1IWzBdO3E9SFsxXTt3PUhbMl07ZXhwb3J0cy51bnN0YWJsZV9ub3c9SFszXX1lbHNlIGlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBJPW51bGwsSj1mdW5jdGlvbihhKXtpZihudWxsIT09SSl0cnl7SShhKX1maW5hbGx5e0k9bnVsbH19O3I9ZnVuY3Rpb24oYSl7bnVsbCE9PUk/c2V0VGltZW91dChyLDAsYSk6KEk9YSxzZXRUaW1lb3V0KEosMCwhMSkpfTtxPWZ1bmN0aW9uKCl7ST1udWxsfTt3PWZ1bmN0aW9uKCl7cmV0dXJuITF9fWVsc2V7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlJiYoXCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIiksXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgQiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpKTt2YXIgSz1udWxsLEw9ITEsTT0tMSxOPSExLE89ITEsUD0wLFI9MzMsUz0zMzt3PWZ1bmN0aW9uKCl7cmV0dXJuIFA8PWV4cG9ydHMudW5zdGFibGVfbm93KCl9O3ZhciBUPW5ldyBNZXNzYWdlQ2hhbm5lbCxVPVQucG9ydDI7VC5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtMPSExO3ZhciBhPUssYj1NO0s9bnVsbDtNPS0xO3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCksZT0hMTtpZigwPj1QLWQpaWYoLTEhPT1iJiZiPD1kKWU9ITA7ZWxzZXtOfHwoTj0hMCxFKFYpKTtLPWE7TT1iO3JldHVybn1pZihudWxsIT09YSl7Tz0hMDt0cnl7YShlKX1maW5hbGx5e089ITF9fX07XG52YXIgVj1mdW5jdGlvbihhKXtpZihudWxsIT09Syl7RShWKTt2YXIgYj1hLVArUztiPFMmJlI8Uz8oOD5iJiYoYj04KSxTPWI8Uj9SOmIpOlI9YjtQPWErUztMfHwoTD0hMCxVLnBvc3RNZXNzYWdlKHZvaWQgMCkpfWVsc2UgTj0hMX07cj1mdW5jdGlvbihhLGIpe0s9YTtNPWI7T3x8MD5iP1UucG9zdE1lc3NhZ2Uodm9pZCAwKTpOfHwoTj0hMCxFKFYpKX07cT1mdW5jdGlvbigpe0s9bnVsbDtMPSExO009LTF9fWV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O1xuZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgZD1oLGU9aztoPWE7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7aD1kLGs9ZSx2KCl9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3ZhciBkPS0xIT09az9rOmV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09YiYmXCJudW1iZXJcIj09PXR5cGVvZiBiLnRpbWVvdXQpYj1kK2IudGltZW91dDtlbHNlIHN3aXRjaChoKXtjYXNlIDE6Yj1kKy0xO2JyZWFrO2Nhc2UgMjpiPWQrMjUwO2JyZWFrO2Nhc2UgNTpiPWQrMTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6Yj1kKzFFNDticmVhaztkZWZhdWx0OmI9ZCs1RTN9YT17Y2FsbGJhY2s6YSxwcmlvcml0eUxldmVsOmgsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH07aWYobnVsbD09PWMpYz1hLm5leHQ9YS5wcmV2aW91cz1hLHAoKTtlbHNle2Q9bnVsbDt2YXIgZT1jO2Rve2lmKGUuZXhwaXJhdGlvblRpbWU+Yil7ZD1lO2JyZWFrfWU9ZS5uZXh0fXdoaWxlKGUhPT1jKTtudWxsPT09ZD9kPWM6ZD09PWMmJihjPWEscCgpKTtcbmI9ZC5wcmV2aW91cztiLm5leHQ9ZC5wcmV2aW91cz1hO2EubmV4dD1kO2EucHJldmlvdXM9Yn1yZXR1cm4gYX07ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1hLm5leHQ7aWYobnVsbCE9PWIpe2lmKGI9PT1hKWM9bnVsbDtlbHNle2E9PT1jJiYoYz1iKTt2YXIgZD1hLnByZXZpb3VzO2QubmV4dD1iO2IucHJldmlvdXM9ZH1hLm5leHQ9YS5wcmV2aW91cz1udWxsfX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9aDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZD1oLGU9aztoPWI7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtoPWQsaz1lLHYoKX19fTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIGh9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiFmJiYobnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8bHx8dygpKX07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe251bGwhPT1jJiZwKCl9O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gY307XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi43LjBcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO1xudmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxyPWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTY7ZnVuY3Rpb24gdChhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIHI6Y2FzZSBxOmNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIHYoYSl7cmV0dXJuIHQoYSk9PT1tfWV4cG9ydHMudHlwZU9mPXQ7ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO1xuZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT1yO2V4cG9ydHMuTWVtbz1xO2V4cG9ydHMuUG9ydGFsPWQ7ZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PXF8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW4pfTtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpfHx0KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPXY7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWt9O1xuZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09cn07ZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1xfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1mfTtcbmV4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PXB9O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciBfX0RFVl9fID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAoX19ERVZfXykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSk7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfVxuXG4gIHdhcm5pbmcgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBwcmludFdhcm5pbmcuYXBwbHkobnVsbCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX3Byb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxudmFyIF9ndWQgPSByZXF1aXJlKCdndWQnKTtcblxudmFyIF9ndWQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3VkKTtcblxudmFyIF93YXJuaW5nID0gcmVxdWlyZSgnZmJqcy9saWIvd2FybmluZycpO1xuXG52YXIgX3dhcm5pbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2FybmluZyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIE1BWF9TSUdORURfMzFfQklUX0lOVCA9IDEwNzM3NDE4MjM7XG5cbi8vIElubGluZWQgT2JqZWN0LmlzIHBvbHlmaWxsLlxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2lzXG5mdW5jdGlvbiBvYmplY3RJcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyAoMCwgX2d1ZDIuZGVmYXVsdCkoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHJvdmlkZXIpO1xuXG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQuY2FsbC5hcHBseShfQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSksIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICAgIH1cblxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XG4gICAgfTtcblxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgY2hhbmdlZEJpdHMgPSB2b2lkIDA7XG5cbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7IC8vIE5vIGNoYW5nZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSAnZnVuY3Rpb24nID8gY2FsY3VsYXRlQ2hhbmdlZEJpdHMob2xkVmFsdWUsIG5ld1ZhbHVlKSA6IE1BWF9TSUdORURfMzFfQklUX0lOVDtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KSgoY2hhbmdlZEJpdHMgJiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQpID09PSBjaGFuZ2VkQml0cywgJ2NhbGN1bGF0ZUNoYW5nZWRCaXRzOiBFeHBlY3RlZCB0aGUgcmV0dXJuIHZhbHVlIHRvIGJlIGEgJyArICczMS1iaXQgaW50ZWdlci4gSW5zdGVhZCByZWNlaXZlZDogJXMnLCBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcblxuICAgICAgICAgIGlmIChjaGFuZ2VkQml0cyAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oX3JlYWN0LkNvbXBvbmVudCk7XG5cbiAgUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSAoX1Byb3ZpZGVyJGNoaWxkQ29udGV4ID0ge30sIF9Qcm92aWRlciRjaGlsZENvbnRleFtjb250ZXh0UHJvcF0gPSBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdC5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xuXG4gIHZhciBDb25zdW1lciA9IGZ1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICAgIF9pbmhlcml0cyhDb25zdW1lciwgX0NvbXBvbmVudDIpO1xuXG4gICAgZnVuY3Rpb24gQ29uc3VtZXIoKSB7XG4gICAgICB2YXIgX3RlbXAyLCBfdGhpczIsIF9yZXQyO1xuXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29uc3VtZXIpO1xuXG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICBhcmdzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfcmV0MiA9IChfdGVtcDIgPSAoX3RoaXMyID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0NvbXBvbmVudDIuY2FsbC5hcHBseShfQ29tcG9uZW50MiwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpczIpLCBfdGhpczIuc3RhdGUgPSB7XG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgfSwgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gX3RoaXMyLm9ic2VydmVkQml0cyB8IDA7XG4gICAgICAgIGlmICgob2JzZXJ2ZWRCaXRzICYgY2hhbmdlZEJpdHMpICE9PSAwKSB7XG4gICAgICAgICAgX3RoaXMyLnNldFN0YXRlKHsgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpIH0pO1xuICAgICAgICB9XG4gICAgICB9LCBfdGVtcDIpLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpczIsIF9yZXQyKTtcbiAgICB9XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcblxuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgLy8gU3Vic2NyaWJlIHRvIGFsbCBjaGFuZ2VzIGJ5IGRlZmF1bHRcbiAgICAgIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub24odGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XG5cbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIC8vIFN1YnNjcmliZSB0byBhbGwgY2hhbmdlcyBieSBkZWZhdWx0XG4gICAgICA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9mZih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5nZXQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIENvbnN1bWVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oX3JlYWN0LkNvbXBvbmVudCk7XG5cbiAgQ29uc3VtZXIuY29udGV4dFR5cGVzID0gKF9Db25zdW1lciRjb250ZXh0VHlwZSA9IHt9LCBfQ29uc3VtZXIkY29udGV4dFR5cGVbY29udGV4dFByb3BdID0gX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3QsIF9Db25zdW1lciRjb250ZXh0VHlwZSk7XG5cblxuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlUmVhY3RDb250ZXh0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiLy8gQGZsb3dcbid1c2Ugc3RyaWN0JztcblxudmFyIGtleSA9ICdfX2dsb2JhbF91bmlxdWVfaWRfXyc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBnbG9iYWxba2V5XSA9IChnbG9iYWxba2V5XSB8fCAwKSArIDE7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJy4vZW1wdHlGdW5jdGlvbicpO1xuXG4vKipcbiAqIFNpbWlsYXIgdG8gaW52YXJpYW50IGJ1dCBvbmx5IGxvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gbG9nIGlzc3VlcyBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgaW4gY3JpdGljYWxcbiAqIHBhdGhzLiBSZW1vdmluZyB0aGUgbG9nZ2luZyBjb2RlIGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cyB3aWxsIGtlZXAgdGhlXG4gKiBzYW1lIGxvZ2ljIGFuZCBmb2xsb3cgdGhlIHNhbWUgY29kZSBwYXRocy5cbiAqL1xuXG52YXIgd2FybmluZyA9IGVtcHR5RnVuY3Rpb247XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcoZm9ybWF0KSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgfSk7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfTtcblxuICB3YXJuaW5nID0gZnVuY3Rpb24gd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCkge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICsgJ21lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG5cbiAgICBpZiAoZm9ybWF0LmluZGV4T2YoJ0ZhaWxlZCBDb21wb3NpdGUgcHJvcFR5cGU6ICcpID09PSAwKSB7XG4gICAgICByZXR1cm47IC8vIElnbm9yZSBDb21wb3NpdGVDb21wb25lbnQgcHJvcHR5cGUgY2hlY2suXG4gICAgfVxuXG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4yID4gMiA/IF9sZW4yIC0gMiA6IDApLCBfa2V5MiA9IDI7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5MiAtIDJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgIH1cblxuICAgICAgcHJpbnRXYXJuaW5nLmFwcGx5KHVuZGVmaW5lZCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZzsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjsiLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBzdHlsZWQsIHsga2V5ZnJhbWVzIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5jb25zdCBPdmVybGF5ID0gc3R5bGVkLmRpdmBcbiAgJHtwcm9wcyA9PiBwcm9wcy5iYWNrZ3JvdW5kQ29sb3JcbiAgICAmJiBgXG4gIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMuYmFja2dyb3VuZENvbG9yfTtcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICB0b3A6MDtcbiAgICBsZWZ0OjA7XG4gICAgcmlnaHQ6MDtcbiAgICBib3R0b206MDtcbiAgYH1cbmA7XG5cbmNvbnN0IEJvdW5jZUNpcmNsZSA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAke3Byb3BzID0+IHByb3BzLnNpemV9O1xuICBoZWlnaHQ6ICR7cHJvcHMgPT4gcHJvcHMuc2l6ZX07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbmA7XG5cbmNvbnN0IGJvdW5jZSA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogc2NhbGUoMC4wKTt9XG4gIDUwJSB7IHRyYW5zZm9ybTogc2NhbGUoMS4wKTsgfVxuICAxMDAlIHsgdHJhbnNmb3JtOiBzY2FsZSgwLjApO31cbmA7XG5jb25zdCBTaGFyZWQgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMuY29sb3J9O1xuICBvcGFjaXR5OiAwLjY7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBhbmltYXRpb246ICR7Ym91bmNlfSAzcyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbmA7XG5cbmNvbnN0IEZpcnN0Q2lyY2xlID0gc3R5bGVkKFNoYXJlZClgYDtcbmNvbnN0IFNlY29uZENpcmNsZSA9IHN0eWxlZChTaGFyZWQpYFxuICBhbmltYXRpb24tZGVsYXk6IC0xcztcbmA7XG5cbmNvbnN0IExvYWRlciA9IHByb3BzID0+IChcbiAgPE92ZXJsYXkgYmFja2dyb3VuZENvbG9yPXtwcm9wcy5iYWNrZ3JvdW5kQ29sb3J9PlxuICAgIDxCb3VuY2VDaXJjbGUgc2l6ZT17cHJvcHMuc2l6ZX0+XG4gICAgICA8Rmlyc3RDaXJjbGUgY29sb3I9e3Byb3BzLmNvbG9yfSAvPlxuICAgICAgPFNlY29uZENpcmNsZSBjb2xvcj17cHJvcHMuY29sb3J9IC8+XG4gICAgPC9Cb3VuY2VDaXJjbGU+XG4gIDwvT3ZlcmxheT5cbik7XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGJhY2tncm91bmRDb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBiYWNrZ3JvdW5kQ29sb3I6IHVuZGVmaW5lZCxcbiAgc2l6ZTogJzQwcHgnLFxuICBjb2xvcjogJ2JsYWNrJ1xufTtcbmV4cG9ydCBkZWZhdWx0IExvYWRlcjtcbiIsImltcG9ydCBSZWFjdCwge1xuICBGcmFnbWVudCwgU3VzcGVuc2UsIGxhenksIENvbXBvbmVudFxufSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsIFJvdXRlLCBTd2l0Y2ggfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IGNyZWF0ZUdsb2JhbFN0eWxlIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgY29sb3JQYWxldHRlcyB9IGZyb20gJy4vdXRpbHMvc3R5bGVVdGlscyc7XG5pbXBvcnQgTG9hZGVyIGZyb20gJy4vY29tcG9uZW50cy9Mb2FkZXInO1xuaW1wb3J0IGdhbWVzT2JqIGZyb20gJy4vZGF0YXMvZ2FtZXMuanNvbic7XG5cbmNvbnN0IENhdGFsb2dTY3JlZW4gPSBsYXp5KCgpID0+IGltcG9ydCgnLi9zY3JlZW5zL0dhbWVzQ2F0YWxvZ1NjcmVlbicpKTtcbmNvbnN0IERldGFpbHNTY3JlZW4gPSBsYXp5KCgpID0+IGltcG9ydCgnLi9zY3JlZW5zL0dhbWVEZXRhaWxzU2NyZWVuJykpO1xuY29uc3QgTm90Rm91bmRTY3JlZW4gPSBsYXp5KCgpID0+IGltcG9ydCgnLi9zY3JlZW5zL05vdEZvdW5kU2NyZWVuJykpO1xuXG5jb25zdCBHbG9iYWxTdHlsZSA9IGNyZWF0ZUdsb2JhbFN0eWxlYFxuICBAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJvYm90bycpO1xuICBodG1sLGJvZHkge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtZmFtaWx5OiAgJ1JvYm90bycsIHNhbnMtc2VyaWY7IFxuICAgIGJhY2tncm91bmQ6ICR7Y29sb3JQYWxldHRlcy5saWdodEdyZXl9O1xuICB9XG4gIGltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbmA7XG5cbmNsYXNzIERhdGFQcm92aWRlciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5mdW5jXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiA8RnJhZ21lbnQ+e3RoaXMucHJvcHMuY2hpbGRyZW4oZ2FtZXNPYmopfTwvRnJhZ21lbnQ+O1xuICB9XG59XG5cbmNvbnN0IEFwcCA9ICgpID0+IChcbiAgPEZyYWdtZW50PlxuICAgIDxEYXRhUHJvdmlkZXI+XG4gICAgICB7ZGF0YSA9PiAoXG4gICAgICAgIDxSb3V0ZXI+XG4gICAgICAgICAgPFN1c3BlbnNlXG4gICAgICAgICAgICBmYWxsYmFjaz17XG4gICAgICAgICAgICAgIDxMb2FkZXJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I9e2NvbG9yUGFsZXR0ZXMuYmxhY2t9XG4gICAgICAgICAgICAgICAgc2l6ZT1cIjYwcHhcIlxuICAgICAgICAgICAgICAgIGNvbG9yPXtjb2xvclBhbGV0dGVzLndoaXRlfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxTd2l0Y2g+XG4gICAgICAgICAgICAgIDxSb3V0ZVxuICAgICAgICAgICAgICAgIGV4YWN0XG4gICAgICAgICAgICAgICAgcGF0aD1cIi9cIlxuICAgICAgICAgICAgICAgIGNvbXBvbmVudD17cHJvcHMgPT4gPENhdGFsb2dTY3JlZW4gey4uLnByb3BzfSBkYXRhPXtkYXRhLmdhbWVzfSAvPn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPFJvdXRlXG4gICAgICAgICAgICAgICAgcGF0aD1cIi86Z2FtZU5hbWVcIlxuICAgICAgICAgICAgICAgIGNvbXBvbmVudD17cHJvcHMgPT4gPERldGFpbHNTY3JlZW4gey4uLnByb3BzfSBkYXRhPXtkYXRhLmdhbWVzfSAvPn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPFJvdXRlIGNvbXBvbmVudD17Tm90Rm91bmRTY3JlZW59IC8+XG4gICAgICAgICAgICA8L1N3aXRjaD5cbiAgICAgICAgICA8L1N1c3BlbnNlPlxuICAgICAgICA8L1JvdXRlcj5cbiAgICAgICl9XG4gICAgPC9EYXRhUHJvdmlkZXI+XG4gICAgPEdsb2JhbFN0eWxlIC8+XG4gIDwvRnJhZ21lbnQ+XG4pO1xuZXhwb3J0IGRlZmF1bHQgQXBwO1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgZW4gZnJvbSAnLi4vaTE4bi9lbic7XG5pbXBvcnQgZnIgZnJvbSAnLi4vaTE4bi9mcic7XG5pbXBvcnQgeyBJMThuUHJvdmlkZXIgYXMgUHJvdmlkZXIgfSBmcm9tICcuL0kxOG5Db250ZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSTE4blByb3ZpZGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLmVsZW1lbnQuaXNSZXF1aXJlZFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGN1cnJlbnRMYW5ndWFnZTogJ2VuJyxcbiAgICAgIHRyYW5zbGF0aW9uRmlsZTogZW5cbiAgICB9O1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlTGFuZ3VhZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZUxhbmd1YWdlLmJpbmQodGhpcyk7XG4gICAgdGhpcy50cmFuc2xhdGUgPSB0aGlzLnRyYW5zbGF0ZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgc3RhdGljIGdldFRyYW5zbGF0aW9uRmlsZShsYW5nKSB7XG4gICAgc3dpdGNoIChsYW5nKSB7XG4gICAgICBjYXNlICdmcic6XG4gICAgICAgIHJldHVybiBmcjtcbiAgICAgIGNhc2UgJ2VuJzpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBlbjtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVDaGFuZ2VMYW5ndWFnZShsYW5nKSB7XG4gICAgY29uc3QgdHJhbnNsYXRpb25GaWxlID0gSTE4blByb3ZpZGVyLmdldFRyYW5zbGF0aW9uRmlsZShsYW5nKTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGN1cnJlbnRMYW5ndWFnZTogbGFuZyxcbiAgICAgIHRyYW5zbGF0aW9uRmlsZVxuICAgIH0pO1xuICB9XG5cbiAgdHJhbnNsYXRlKGtleSkge1xuICAgIGNvbnN0IHsgdHJhbnNsYXRpb25GaWxlIH0gPSB0aGlzLnN0YXRlO1xuICAgIGlmICh0cmFuc2xhdGlvbkZpbGVba2V5XSkge1xuICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uRmlsZVtrZXldO1xuICAgIH1cbiAgICByZXR1cm4gYCMke2tleX1gO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY2hpbGRyZW4gfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBjdXJyZW50TGFuZ3VhZ2UgfSA9IHRoaXMuc3RhdGU7XG4gICAgcmV0dXJuIChcbiAgICAgIDxQcm92aWRlclxuICAgICAgICB2YWx1ZT17e1xuICAgICAgICAgIGN1cnJlbnRMYW5ndWFnZSxcbiAgICAgICAgICBjaGFuZ2VMYW5ndWFnZTogdGhpcy5oYW5kbGVDaGFuZ2VMYW5ndWFnZSxcbiAgICAgICAgICBfOiB0aGlzLnRyYW5zbGF0ZVxuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L1Byb3ZpZGVyPlxuICAgICk7XG4gIH1cbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBBcHAgZnJvbSAnLi9BcHAnO1xuaW1wb3J0IEkxOG5Qcm92aWRlciBmcm9tICcuL2NvbnRleHRzL0kxOG5Qcm92aWRlcic7XG5cblJlYWN0RE9NLnJlbmRlcihcbiAgPEkxOG5Qcm92aWRlcj5cbiAgICA8QXBwIC8+XG4gIDwvSTE4blByb3ZpZGVyPixcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSxcbik7XG4iXSwic291cmNlUm9vdCI6IiJ9